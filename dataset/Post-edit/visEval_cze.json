{
    "4": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Rank",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AssocProf",
                    "AsstProf",
                    "Professor"
                ]
            ],
            "y_data": [
                [
                    2,
                    18,
                    14
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "V koláčového grafu zobraz všechny akademické hodnosti na fakultě a počet studentů, kterým jednotlivé hodnosti radí.",
            "Vrať koláčový graf s počtem studentů, kterým poskytují poradenství jednotliví vyučující? Uveď pořadí a počet studentů.",
            "Koláčový graf ukazující kolika studentům poskytují poradenství jednotliví vyučující? Uveď pořadí a počet studentů.",
            "Kolik studentů je vedeno jednotlivými akademickými hodnostmi fakulty? Vypiš akademickou hodnost a počet studentů pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Faculty_Participates_in",
            "Participates_in"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "5": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Rank , count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Rank",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AssocProf",
                    "AsstProf",
                    "Professor"
                ]
            ],
            "y_data": [
                [
                    2,
                    18,
                    14
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ve sloupcovém grafu zobraz všechny akademické hodnosti na fakultě a počet studentů, kterým jednotlivé hodnosti radí.",
            "Zobraz všechny akademické hodnosti na fakultě a počet studentů, kterým jednotlivé hodnosti radí. Vizualizace pomocí sloupcového grafu.",
            "Ukaž mi sloupcový graf, který ukazuje kolik studentů je vedeno jednotlivými akademickými hodnostmi na fakultě? Uveď pořadí a počet studentů.",
            "Kolik studentů je vedeno jednotlivými akademickými hodnostmi fakulty? Uveď pořadí a počet studentů ve sloupcovém grafu.",
            "Kolik studentů je vedeno jednotlivými akademickými hodnostmi fakulty? Uveď pořadí a počet studentů. Vykresli je jako sloupcový graf."
        ],
        "irrelevant_tables": [
            "Participates_in",
            "Activity"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "8": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Rank , COUNT(Rank) FROM Faculty GROUP BY Rank",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Rank , COUNT(Rank) FROM Faculty GROUP BY Rank"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Rank",
            "y_name": "COUNT(Rank)",
            "x_data": [
                [
                    "AssocProf",
                    "AsstProf",
                    "Instructor",
                    "Professor"
                ]
            ],
            "y_data": [
                [
                    8,
                    15,
                    8,
                    27
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Rank",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf znázorňující počet členů fakulty pro každou akademickou hodnost.",
            "Jaký je počet členů fakulty pro každou akademickou hodnost? Vrať koláčový graf.",
            "Vypočítej celkový počet akademických hodností napříč hodnostmi a zobraz jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Participates_in",
            "Faculty_Participates_in"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "9": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Rank , COUNT(Rank) FROM Faculty GROUP BY Rank",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM Faculty GROUP BY Rank"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Rank",
            "y_name": "COUNT(Rank)",
            "x_data": [
                [
                    "AssocProf",
                    "AsstProf",
                    "Instructor",
                    "Professor"
                ]
            ],
            "y_data": [
                [
                    8,
                    15,
                    8,
                    27
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Rank",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet členů fakulty pro každou akademickou hodnost ve sloupcovém grafu.",
            "Jaký je počet členů fakulty pro každou akademickou hodnost? Vizualizace ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Student",
            "Activity"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "14": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Rank , COUNT(Rank) FROM Faculty GROUP BY Rank",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Rank , COUNT(Rank) FROM Faculty GROUP BY Rank"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Rank",
            "y_name": "COUNT(Rank)",
            "x_data": [
                [
                    "AssocProf",
                    "AsstProf",
                    "Instructor",
                    "Professor"
                ]
            ],
            "y_data": [
                [
                    8,
                    15,
                    8,
                    27
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Rank",
            "sort": null
        },
        "nl_queries": [
            "Kolik členů fakulty máme pro každou akademickou hodnost? Vizualizace pomocí koláčového grafu.",
            "Dej mi koláčový graf, který zobrazí počet akademických hodností z různých stupňů."
        ],
        "irrelevant_tables": [
            "Student",
            "Faculty_Participates_in"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "21": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Sex , count(*) FROM Faculty WHERE rank = \"AsstProf\" GROUP BY sex",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Sex , count(*) FROM Faculty WHERE rank = \"AsstProf\" GROUP BY sex"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Sex",
            "y_name": "count(*)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet odborných asistentů a asistentek pomocí koláčového grafu.",
            "Koláčový graf o tom, kolik máme odborných asistentů a asistentek?"
        ],
        "irrelevant_tables": [
            "Activity",
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "32": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Aircraft , COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "aircraft",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Aircraft",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Robinson R-22",
                    "Bell 206B3 JetRanger",
                    "CH-47D Chinook",
                    "Mil Mi-26",
                    "CH-53E Super Stallion"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vypiš názvy letadel a počet jejich vítězných zápasů pomocí sloupcového grafu.",
            "Vypiš názvy letadel a počet jejich vítězných zápasů. Vykresli je jako sloupcový graf.",
            "U každého letadla, které získalo ocenění, uveď jeho název a počet ocenění. Vykresli je jako sloupcový graf."
        ],
        "irrelevant_tables": [
            "pilot",
            "airport_aircraft"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "33": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "aircraft",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Description",
            "y_name": "COUNT(Description)",
            "x_data": [
                [
                    "Heavy-lift helicopter",
                    "Light utility helicopter",
                    "Tandem rotor helicopter",
                    "Turboshaft utility helicopter"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Description",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf pro počet popisů letadel?",
            "Jaké jsou popisy letadel? Spočítej je a zobraz pomocí koláčového grafu",
            "Koláčový graf pro výpis počtu popisů všech letadel.",
            "Vypiš popis všech letadel a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "airport_aircraft",
            "airport"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "34": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Description , COUNT(Description) FROM aircraft GROUP BY Description"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "aircraft",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Description",
            "y_name": "COUNT(Description)",
            "x_data": [
                [
                    "Heavy-lift helicopter",
                    "Light utility helicopter",
                    "Tandem rotor helicopter",
                    "Turboshaft utility helicopter"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Description",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf pro uvedení počtu popisů všech letadel.",
            "Sloupcový graf pro počet popisů letadel?",
            "Vypiš popis všech letadel a spočítej je pomocí sloupcového grafu",
            "Jaké jsou popisy letadel? Spočítej je a zobraz pomocí sloupcového grafu",
            "Nakresli sloupcový graf popisu v porovnání s počtem popisů"
        ],
        "irrelevant_tables": [
            "airport",
            "match"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "35": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Aircraft , COUNT(Aircraft) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY Aircraft",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Aircraft , COUNT(Aircraft) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY Aircraft"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "aircraft",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Aircraft",
            "y_name": "COUNT(Aircraft)",
            "x_data": [
                [
                    "Bell 206B3 JetRanger",
                    "CH-47D Chinook",
                    "CH-53E Super Stallion",
                    "Mil Mi-26",
                    "Robinson R-22"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Aircraft",
            "sort": null
        },
        "nl_queries": [
            "Četnost letadel, která získala ocenění, seřazená podle názvu v podobě koláčového grafu"
        ],
        "irrelevant_tables": [
            "airport",
            "pilot"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "36": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Aircraft , COUNT(Aircraft) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY Aircraft",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Aircraft , COUNT(Aircraft) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY Aircraft"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "aircraft",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Aircraft",
            "y_name": "COUNT(Aircraft)",
            "x_data": [
                [
                    "Bell 206B3 JetRanger",
                    "CH-47D Chinook",
                    "CH-53E Super Stallion",
                    "Mil Mi-26",
                    "Robinson R-22"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Aircraft",
            "sort": null
        },
        "nl_queries": [
            "Vypiš prosím počet jednotlivých vítězných letadel do sloupcového grafu.",
            "Jaké je číslo každého vítězného letadla? Vizualizace pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "airport_aircraft",
            "airport"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "37": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "AllergyType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "animal",
                    "environmental",
                    "food"
                ]
            ],
            "y_data": [
                [
                    8,
                    23,
                    28
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz všechny typy alergií a počet studentů, kteří jsou jimi postiženi, pomocí koláčového grafu.",
            "Kolik studentů je postiženo jednotlivými typy alergií? Vrať koláčový graf."
        ],
        "irrelevant_tables": [
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "46": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "AllergyType",
            "y_name": "COUNT(AllergyType)",
            "x_data": [
                [
                    "animal",
                    "environmental",
                    "food"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY AllergyType",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet jednotlivých typů alergií v koláčovém grafu.",
            "Vypočítej celkový počet typů alergií napříč všemi typy alergií a zobraz jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Student",
            "Has_Allergy"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "54": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" GROUP BY AllergyType",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" GROUP BY AllergyType"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "AllergyType",
            "y_name": "COUNT(AllergyType)",
            "x_data": [
                [
                    "animal",
                    "environmental",
                    "food"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY AllergyType",
            "sort": null
        },
        "nl_queries": [
            "Jaký počet jednotlivých typů alergií má žák/yně s křestním jménem Lisa? Vrať koláčový graf.",
            "Jaký počet jednotlivých typů alergií, má dívka jménem Lisa? Zobraz koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "55": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" GROUP BY AllergyType",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" GROUP BY AllergyType"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "AllergyType",
            "y_name": "COUNT(AllergyType)",
            "x_data": [
                [
                    "animal",
                    "environmental",
                    "food"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY AllergyType",
            "sort": null
        },
        "nl_queries": [
            "Jaký počet jednotlivých typů alergií má žák/yně s křestním jménem Lisa? Vizualizace pomocí sloupcového grafu.",
            "Jaký počet jednotlivých typů alergií, má dívka jménem Lisa? Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "62": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Age , count(*) FROM Student GROUP BY age",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Age , count(*) FROM Student GROUP BY age"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Age",
            "y_name": "count(*)",
            "x_data": [
                [
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    26,
                    27
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    10,
                    4,
                    8,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vytvoř bodový graf zobrazující věk jednotlivých studentů a počet studentů v každém věku.",
            "Kolik let je jednotlivým studentům let a počet studentů v každém věku. Vizualizace pomocí bodového grafu."
        ],
        "irrelevant_tables": [
            "Allergy_Type",
            "Has_Allergy"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "63": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "pie",
            "x_name": "apt_type_code",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Studio",
                    "Duplex",
                    "Flat"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz kódy typů apartmánů a odpovídající počet apartmánů seřazených vzestupně podle počtu apartmánů pomocí koláčového grafu.",
            "Zobraz kódy typů apartmánů a odpovídající počet apartmánů seřazených vzestupně podle počtu apartmánů. Vizualizace pomocí koláčového grafu.",
            "Vrať každý kód typu apartmánu s počtem apartmánů s daným typem apartmánu ve vzestupném pořadí podle počtu apartmánů pomocí koláčového grafu.",
            "Vrať každý kód typu apartmánu s počtem apartmánů s daným typem apartmánu ve vzestupném pořadí podle počtu apartmánů. Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Guests",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "64": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT apt_type_code , COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "apt_type_code",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Studio",
                    "Duplex",
                    "Flat"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz kódy typů apartmánů a odpovídající počet apartmánů seřazených vzestupně podle počtu apartmánů typů apartmánů a odpovídajícího počtu apartmánů seřazených vzestupně podle počtu apartmánů ve sloupcovém grafu.",
            "Zobraz kódy typů apartmánů a odpovídající počet apartmánů seřazených vzestupně podle počtu apartmánů. Zobraz sloupcový graf.",
            "Vrať každý kód typu apartmánu s počtem apartmánů s daným typem apartmánu ve vzestupném pořadí podle počtu apartmánů pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Bookings"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "65": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\"",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\" BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Zobraz ve sloupcovém grafu počet počátečních dat všech rezervací apartmánů provedených hosty s kódem pohlaví \"žena\" pro každý rok.",
            "Jaký je počet rezervací apartmánů od hostů ženského pohlaví (kód pohlaví \"žena\") za každý rok? Vytvoř sloupcový graf."
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "View_Unit_Status"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "68": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\"",
                "binning": "BIN booking_start_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\" BIN booking_start_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    2,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zobraz počet termínů zahájení všech rezervací apartmánů provedených hosty s kódem pohlaví \"žena\" pro každý den v týdnu.",
            "Sloupcový graf znázorňující počet termínů zahájení rezervací apartmánů pro hosty ženského pohlaví (kód pohlaví \"žena\") pro každý den v týdnu."
        ],
        "irrelevant_tables": [
            "Apartments",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "69": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2 BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Jaký je počet termínů zahájení rezervací apartmánů s více než 2 ložnicemi pro každý rok? Vrať sloupcový graf.",
            "Pomocí sloupcového grafu zjisti počet termínů zahájení rezervací pro apartmány s více než dvěma ložnicemi v jednotlivých letech."
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Facilities"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "72": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2",
                "binning": "BIN booking_start_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2 BIN booking_start_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1,
                    1,
                    2,
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Jaký je počet termínů zahájení rezervace apartmánů s více než 2 ložnicemi pro každý den v týdnu? Nakresli sloupcový graf.",
            "Pomocí sloupcového grafu zjisti počet termínů zahájení rezervací pro apartmány s více než dvěma ložnicemi pro každý den v týdnu."
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "74": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT booking_status_code , COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_status_code",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Confirmed",
                    "Provisional"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobrazení kódu stavu rezervace a odpovídajícího počtu rezervací ve sloupcovém grafu.",
            "Zobrazení kódu stavu rezervace a odpovídajícího počtu rezervací. Zobraz sloupcový graf.",
            "Kolik rezervací má každý stav rezervace? Vrať sloupcový graf. Vypiš kód stavu rezervace a počet odpovídajících rezervací.",
            "Kolik rezervací má každý stav rezervace? Ukaž mi sloupcový graf. Vypiš kód stavu rezervace a počet odpovídajících rezervací.",
            "Kolik rezervací má každý stav rezervace? Vypiš kód stavu rezervace a počet odpovídajících rezervací pomocí sloupcového grafu.",
            "Celkový počet seskupený podle kódu stavu rezervace zobraz jako sloupcový graf"
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "77": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = \"Duplex\"",
                "binning": "BIN booking_start_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = \"Duplex\" BIN booking_start_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Jaké je datum zahájení rezervace apartmánů s typovým kódem \"Duplex\"? Rozděl data zahájení rezervace do intervalů v týdnu pomocí sloupcového grafu.",
            "Vrať datum zahájení rezervace pro apartmány s kódem typu \"Duplex\" a rozděl data zahájení rezervace do intervalů podle dnů v týdnu pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "Guests"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "81": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "pie",
            "x_name": "facility_code",
            "y_name": "COUNT(facility_code)",
            "x_data": [
                [
                    "Cable TV",
                    "Gym"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY facility_code",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf pro zobrazení počtu kódů zařízení apartmánů s více než 4 ložnicemi.",
            "Jaké jsou kódy zařízení apartmánů s více než čtyřmi ložnicemi? Spočítej je pomocí koláčového grafu",
            "Zobraz kódy zařízení apartmánů s více než 4 ložnicemi a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro počet kódů zařízení bytů s více než čtyřmi ložnicemi?"
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "86": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings",
                "binning": "BIN booking_start_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings BIN booking_start_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1,
                    1,
                    2,
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet rezervací apartmánů v jednotlivých dnech v týdnu a rozděl datum zahájení rezervace podle dnů v týdnu pomocí sloupcového grafu.",
            "Kolik rezervací apartmánů je v jednotlivých pracovních dnech? Ukaž mi sloupcový graf s rozdělením dat zahájení rezervace podle dnů v týdnu."
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "View_Unit_Status"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "93": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT gender_code , COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT gender_code , COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "pie",
            "x_name": "gender_code",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Female",
                    "Male",
                    "Unknown"
                ]
            ],
            "y_data": [
                [
                    9,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz každý kód pohlaví a odpovídající počet hostů seřazený podle počtu sestupně pomocí koláčového grafu.",
            "Zobraz každý kód pohlaví a odpovídající počet hostů seřazený podle počtu sestupně. Zobraz koláčový graf.",
            "Seřaď kódy pohlaví sestupně podle odpovídajícího počtu hostů. Vrať kódy pohlaví i počty pomocí koláčového grafu.",
            "Seřaď kódy pohlaví sestupně podle odpovídajícího počtu hostů. Vrať kódy pohlaví i počty. Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "Apartment_Bookings"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "94": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT gender_code , COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT gender_code , COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "gender_code",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Female",
                    "Male",
                    "Unknown"
                ]
            ],
            "y_data": [
                [
                    9,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz každý kód pohlaví a odpovídající počet hostů seřazený podle počtu sestupně pomocí sloupcového grafu.",
            "Zobraz každý kód pohlaví a odpovídající počet hostů seřazený podle počtu sestupně. Zobraz sloupcový graf.",
            "Seřaď kódy pohlaví sestupně podle odpovídajícího počtu hostů. Vrať kódy pohlaví i počty ve sloupcovém grafu.",
            "Seřaď kódy pohlaví sestupně podle odpovídajícího počtu hostů. Vrať kódy pohlaví i počty. Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "95": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "pie",
            "x_name": "apt_type_code",
            "y_name": "min(room_count)",
            "x_data": [
                [
                    "Duplex",
                    "Flat",
                    "Studio"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz minimální počet pokojů v různých typech apartmánů pomocí koláčového grafu.",
            "Vrať koláčový graf zobrazující minimální počet pokojů v různých typech apartmánů.",
            "Vytvoř koláčový graf zobrazující minimální počet pokojů v jednotlivých typech apartmánů."
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "Apartment_Bookings"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "96": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT apt_type_code , min(room_count) FROM Apartments GROUP BY apt_type_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "apt_type_code",
            "y_name": "min(room_count)",
            "x_data": [
                [
                    "Duplex",
                    "Flat",
                    "Studio"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz minimální počet pokojů v různých typech apartmánů pomocí sloupcového grafu.",
            "Vrať sloupcový graf zobrazující minimální počet pokojů v různých typech apartmánů.",
            "Sloupcový graf pro zobrazení minimálního počtu pokojů z různých kódů typů apartmánů"
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Bookings"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "98": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zobraz počet termínů zahájení všech rezervací apartmánů v jednotlivých letech."
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Facilities"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "103": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT apt_type_code , COUNT(apt_type_code) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = \"Kyle\" GROUP BY apt_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT apt_type_code , COUNT(apt_type_code) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = \"Kyle\" GROUP BY apt_type_code"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "pie",
            "x_name": "apt_type_code",
            "y_name": "COUNT(apt_type_code)",
            "x_data": [
                [
                    "Duplex",
                    "Flat",
                    "Studio"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY apt_type_code",
            "sort": null
        },
        "nl_queries": [
            "Udělej mi koláčový graf zobrazující počet budov spravovaných společností \"Kyle\" a seskup je podle kódů typu apartmánu.",
            "Kolik budov spravuje společnost Kyle? Vrať prosím koláčový graf seskupený podle kódů typů bytů."
        ],
        "irrelevant_tables": [
            "Apartment_Facilities",
            "Apartment_Bookings"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "120": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT fault_description , COUNT(fault_description) FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY fault_description",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT fault_description , COUNT(fault_description) FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY fault_description"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "fault_description",
            "y_name": "COUNT(fault_description)",
            "x_data": [
                [
                    "failed parts",
                    "system error"
                ]
            ],
            "y_data": [
                [
                    6,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY fault_description",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf počtu chyb pro různé popisy poruch zaznamenané v protokolech."
        ],
        "irrelevant_tables": [
            "Skills",
            "Maintenance_Contracts"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "131": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT skill_description , COUNT(skill_description) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT skill_description , COUNT(skill_description) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "pie",
            "x_name": "skill_description",
            "y_name": "COUNT(skill_description)",
            "x_data": [
                [
                    "Electrical",
                    "Mechanical",
                    "TV, Video"
                ]
            ],
            "y_data": [
                [
                    9,
                    6,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY skill_description",
            "sort": null
        },
        "nl_queries": [
            "Udělej mi koláčový graf počtu inženýrů pro různé popisy dovednosti."
        ],
        "irrelevant_tables": [
            "Assets",
            "Skills_Required_To_Fix"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "138": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT part_name , count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT part_name , count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "pie",
            "x_name": "part_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "middle",
                    "package",
                    "top"
                ]
            ],
            "y_data": [
                [
                    5,
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "V kolika aktivech lze jednotlivé části použít? Vrať koláčový graf. Uveď název a číslo dílu.",
            "V kolika aktivech lze jednotlivé části použít? Vypiš název dílu a číslo pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Third_Party_Companies",
            "Maintenance_Engineers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "146": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT fault_short_name , COUNT(fault_short_name) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  fault_short_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT fault_short_name , COUNT(fault_short_name) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  fault_short_name"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "fault_short_name",
            "y_name": "COUNT(fault_short_name)",
            "x_data": [
                [
                    "MW",
                    "PW",
                    "TW"
                ]
            ],
            "y_data": [
                [
                    0,
                    3,
                    0
                ],
                [
                    1,
                    2,
                    2
                ],
                [
                    4,
                    2,
                    1
                ]
            ],
            "classify": [
                "Electrical",
                "Mechanical",
                "TV, Video"
            ],
            "describe": "GROUP BY skill_description, GROUP BY fault_short_name",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet závad pro různé zkrácené názvy závad a dovednosti potřebné k jejich odstranění. Na ose x je zkrácený název chyby a skupina podle popisu dovedností."
        ],
        "irrelevant_tables": [
            "Maintenance_Engineers",
            "Fault_Log_Parts"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "stacked_bar": true
            }
        ]
    },
    "150": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "pie",
            "x_name": "skill_description",
            "y_name": "COUNT(skill_description)",
            "x_data": [
                [
                    "Electrical",
                    "Mechanical",
                    "TV, Video"
                ]
            ],
            "y_data": [
                [
                    3,
                    5,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY skill_description",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf s počtem závad pro různé popisy dovedností potřebných k jejich odstranění."
        ],
        "irrelevant_tables": [
            "Fault_Log",
            "Engineer_Visits"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "158": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
                "binning": "BIN year BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' BIN year BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "baseball_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    3,
                    2,
                    2,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN year BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Ukaž četnost dnů v týdnu (rozděleno podle dnů), ve kterých tým Boston Red Stockings vyhrál v posezónních zápasech, pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "batting_postseason",
            "team_half"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "163": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "baseball_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "1903",
                    "1912",
                    "1915",
                    "1916",
                    "1918",
                    "1975",
                    "1986",
                    "1999",
                    "2003",
                    "2004",
                    "2007",
                    "2008",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    5,
                    5,
                    5,
                    5,
                    5,
                    5,
                    5,
                    5,
                    5,
                    15,
                    15,
                    5,
                    15
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro každý rok uveď rok a počet vítězství týmu Boston Red Stockings v posezónních zápasech. Vizualizace pomocí čárového grafu."
        ],
        "irrelevant_tables": [
            "player_award_vote",
            "fielding_postseason"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "173": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT result , COUNT(result) FROM battle WHERE bulgarian_commander != 'Boril' GROUP BY result"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "battle_death",
        "vis_obj": {
            "chart": "pie",
            "x_name": "result",
            "y_name": "COUNT(result)",
            "x_data": [
                [
                    "Bulgarian victory",
                    "Two Year Truce"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY result",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf zobrazující počet výsledků bitev, kdy bulharský velitel není \"Boril\"."
        ],
        "irrelevant_tables": [
            "ship",
            "death"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "175": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT killed , injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT killed , injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "battle_death",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "killed",
            "y_name": "injured",
            "x_data": [
                [
                    8,
                    3,
                    25,
                    2,
                    0,
                    4,
                    0,
                    29,
                    0,
                    0,
                    14
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    5,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "bodový graf o tom, jaké jsou případy úmrtí a zranění způsobené lodí s tonáží \"t\"?",
            "V jakých situacích dochází k úmrtím a zraněním způsobeným lodí s tonáží \"t\"? Vizualizuj pomocí bodového grafu.",
            "Jaké jsou případy úmrtí a zranění způsobené lodí o tonáži \"t\". Vizualizace pomocí bodového grafu."
        ],
        "irrelevant_tables": [
            "battle"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "186": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM Teachers GROUP BY last_name ORDER BY last_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Teachers GROUP BY last_name ORDER BY last_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "Becker",
                    "Bergnaum",
                    "Brakus",
                    "Goldner",
                    "Hansen",
                    "Heller",
                    "Kuhic",
                    "Lang",
                    "Medhurst",
                    "Moore",
                    "Price",
                    "Schultz",
                    "Schuster",
                    "Ward"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY last_name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet příjmení učitelů seřazených podle abecedy příjmení pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Ref_Address_Types",
            "Assessment_Notes"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "189": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY other_details",
                "binning": "BIN date_address_to BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses GROUP BY other_details BIN date_address_to BY MONTH"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_to",
            "y_name": "COUNT(date_address_to)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    1,
                    6
                ],
                [
                    1,
                    12
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_to BY MONTH",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi rozložení datum_na_adresu a množství datum_na_adresu. Seskup data podle atributu dalsi_detaily a rozděl datum_na_adresu podle měsíce ve sloupcovém grafu.",
            "Nakresli sloupcový graf rozložení datum_na_adresu a množství datum_na_adresu. Seskup podle atributu dalsi_detaily a rozděl datum_na_adresu podle měsíce.",
            "Sloupcový graf zobrazuje rozložení datum_na_adresu a množství datum_na_adresu a seskupení podle atributu dalsi_detaily a rozdělení datum_na_adresu podle měsíců.",
            "Zjisti datum_na_adresu a množství datum_na_adresu a barevně data rozděl podle atributu dalsi_detaily a datum_na_adresu rozděl podle měsíců a vizualizuj je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Teachers",
            "Ref_Address_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "194": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_to BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_to BY MONTH"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_to",
            "y_name": "SUM(monthly_rental)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    1297.3186,
                    6052.69338
                ],
                [
                    747.5312,
                    10726.4778
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_to BY MONTH",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi rozdělení date_address_to a součet monthly_rental a seskup data podle atributu other_details a rozděl date_adress_to podle měsíce ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Ref_Incident_Type",
            "Ref_Detention_Type"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "195": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_to BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_to BY MONTH"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_to",
            "y_name": "AVG(monthly_rental)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    1297.3186,
                    1008.78223
                ],
                [
                    747.5312,
                    893.87315
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_to BY MONTH",
            "sort": null
        },
        "nl_queries": [
            "Uveď mi srovnání o průměru monthly_rental přes date_address_to, a seskup data podle atributu other_details a rozděl date_address_to podle měsíce pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Behavior_Incident",
            "Ref_Detention_Type"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "196": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses GROUP BY other_details",
                "binning": "BIN date_address_from BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses GROUP BY other_details BIN date_address_from BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "COUNT(date_address_from)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ],
                [
                    9,
                    4
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_from BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf zobrazuje rozložení date_address_from a množství date_address_from, a seskupení podle atributu other_details a rozděl date_address_from podle roku.",
            "Ukaž mi rozložení date_address_from a množství date_address_from. Seskup jej podle atributu other_details a rozděl date_address_from podle roku ve sloupcovém grafu.",
            "Vizualizuj sloupcový graf o rozložení date_address_from a množství date_address_from, a seskup data podle atributu other_details a rozděl date_address_from podle roku.",
            "Uveď mi srovnání o množství date_address_from nad date_address_from, a seskup data podle atributu other_details a rozděl date_address_from podle roku pomocí sloupcového grafu.",
            "Vrať sloupcový graf o rozložení date_address_from a množství date_address_from, a seskup data podle atributu other_details a rozděl date_address_from podle roku."
        ],
        "irrelevant_tables": [
            "Behavior_Incident",
            "Ref_Address_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "201": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "SUM(monthly_rental)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    5019.3333,
                    2330.6787
                ],
                [
                    8296.2672,
                    3177.7418
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_from BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Uveď mi porovnání součtu monthly_rental nad date_address_from, a seskup data podle atributu other_details a rozděl date_address_from podle roku pomocí sloupcového grafu.",
            "Ukaž mi rozdělení date_address_from a součet monthly_rental, a seskup data podle atributu other_details a rozděl date_address_from podle roku ve sloupcovém grafu.",
            "Vizualizuj sloupcový graf o rozložení date_address_from a součtu monthly_rental, seskup data podle atributu other_details a rozděl date_address_from podle roku.",
            "Vrať sloupcový graf o rozložení date_address_from a součtu monthly_rental, a seskup data podle atributu other_details a rozděl date_address_from podle roku.",
            "Nakresli sloupcový graf o rozložení date_address_from a součtu monthly_rental, seskup data podle atributu other_details a rozděl date_address_from podle roku."
        ],
        "irrelevant_tables": [
            "Students_in_Detention",
            "Teachers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "202": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "AVG(monthly_rental)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    1003.86666,
                    1165.33935
                ],
                [
                    921.8074667,
                    794.43545
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_from BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf o rozložení date_address_from a průměru monthly_rental, seskup data podle atributu other_details a rozděl date_address_from podle roku.",
            "Uveď mi srovnání o průměru monthly_rental přes date_address_from, a seskup data podle atributu other_details a rozděl date_address_from podle roku pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Ref_Address_Types",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "205": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses  ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_to BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_address_to , COUNT(date_address_to) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_to BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_to",
            "y_name": "COUNT(date_address_to)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    2,
                    18
                ]
            ],
            "classify": [],
            "describe": "BIN date_address_to BY MONTH",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi rozložení date_adress_to a množství date_adress_to. Rozděl date_adress_to podle měsíců ve sloupcovém grafu.",
            "Srovnej mi množství date_address_to přes date_address_to. Rozděl date_address_to podle měsíců pomocí sloupcového grafu.",
            "Zjisti date_address_to a množství date_address_to. Rozděl date_address_to podle měsíců a vizualizuj je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Ref_Address_Types",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "210": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_to BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_to",
            "y_name": "SUM(monthly_rental)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2330.7852,
                    0,
                    2044.1059,
                    1032.8717,
                    0,
                    0,
                    1942.2492
                ],
                [
                    679.2988,
                    2835.213,
                    865.2615,
                    1894.2702,
                    2007.1954,
                    0,
                    3192.7701
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_to BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Zjisti datum_adresa_od a součet mesicni_pronajem_kc, seskup je podle atributu dalsi_detaily a rozděl datum_adresa_od podle dnů v týdnu a vizualizuj je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Ref_Detention_Type",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "211": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_to BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_to",
            "y_name": "AVG(monthly_rental)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1165.3926,
                    0,
                    1022.05295,
                    1032.8717,
                    0,
                    0,
                    971.1246
                ],
                [
                    679.2988,
                    945.071,
                    865.2615,
                    947.1351,
                    1003.5977,
                    0,
                    798.1925
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_to BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Zjisti date_address_to a průměr monthly_rental, seskup je podle atributu other_details a rozděl date_address_to podle dnů v týdnu a vizualizuj je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Ref_Address_Types",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "219": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_details , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_details , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_details",
            "y_name": "AVG(monthly_rental)",
            "x_data": [
                [
                    "apartment",
                    "house"
                ]
            ],
            "y_data": [
                [
                    1050.0017142857143,
                    882.6160769230771
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_details",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi rozdělení other_details a průměr monthly_rental a seskup je podle atributu other_details do sloupcového grafu.",
            "Vrať sloupcový graf o rozložení other_details a průměru monthly_rental, a seskup je podle atributu other_details.",
            "Nakresli sloupcový graf o rozložení other_details a průměru monthly_rental a seskup je podle atributu other_details.",
            "Sloupcový graf zobrazuje rozložení other_details a průměr monthly_rental, a seskupení podle atributu other_details."
        ],
        "irrelevant_tables": [
            "Ref_Detention_Type",
            "Students_in_Detention"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "224": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "SUM(monthly_rental)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1032.8717,
                    1297.3186,
                    1036.8462,
                    644.9306,
                    1297.807,
                    1032.9782,
                    1007.2597
                ],
                [
                    2559.8116,
                    865.2615,
                    0,
                    756.6745,
                    2864.7297,
                    1867.9597,
                    2559.572
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_from BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Uveď mi porovnání součtu monthly_rental nad date_address_from, a seskup data podle atributu other_details a rozděl date_address_from podle dnů v týdnu pomocí sloupcového grafu.",
            "Zjisti date_address_from a součet monthly_rental, seskup je podle atributu other_details a rozděl date_address_from podle dnů v týdnu. Vizualizuj je pomocí sloupcového grafu.",
            "Ukaž mi rozdělení date_address_from a součet monthly_rental, a seskup je podle atributu other_details a rozděl date_address_from podle dnů v týdnu ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Assessment_Notes",
            "Ref_Incident_Type"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "225": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "AVG(monthly_rental)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1032.8717,
                    1297.3186,
                    1036.8462,
                    644.9306,
                    1297.807,
                    1032.9782,
                    1007.2597
                ],
                [
                    853.27055,
                    865.2615,
                    0,
                    756.6745,
                    954.9099,
                    933.97985,
                    853.19065
                ]
            ],
            "classify": [
                "apartment",
                "house"
            ],
            "describe": "GROUP BY other_details, BIN date_address_from BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Nakresli sloupcový graf o rozdělení date_address_from a průměru monthly_rental, seskup data podle atributu other_details a rozděl date_address_from podle dnů v týdnu."
        ],
        "irrelevant_tables": [
            "Assessment_Notes",
            "Teachers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "231": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_to BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_to BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_to",
            "y_name": "AVG(monthly_rental)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    1022.4249,
                    932.1761767
                ]
            ],
            "classify": [],
            "describe": "BIN date_address_to BY MONTH",
            "sort": null
        },
        "nl_queries": [
            "Zjisti date_address_to a průměr monthly_rental. Rozděl date_address_to podle měsíců a vizualizuj je pomocí sloupcového grafu.",
            "Nakresli sloupcový graf rozložení date_adress_to a průměru monthly_rental. Rozděl date_adress_to podle měsíců.",
            "Sloupcový graf ukazuje rozložení date_adress_to a průměr monthly_rental, date_adress_to rozděleno podle měsíců.",
            "Srovnej mi průměrný měsíční nájem přes date_address_to. Rozděl date_address_to podle měsíců pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Ref_Address_Types",
            "Ref_Detention_Type"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "233": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "COUNT(date_address_from)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    14,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_address_from BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Zjisti date_adress_from a množství date_adress_from. Rozděl date_adress_from podle roku a vizualizuj je pomocí sloupcového grafu.",
            "Srovnej mi množství date_address_from přes date_address_from. Rozděl date_address_from podle roku pomocí sloupcového grafu.",
            "Ukaž mi rozložení date_address_from a množství date_address_from. Rozděl date_address_from podle roku ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Ref_Detention_Type",
            "Ref_Incident_Type"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "238": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_address_to , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_to BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_to",
            "y_name": "SUM(monthly_rental)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    3010.084,
                    2835.213,
                    2909.3674,
                    2927.1419,
                    2007,
                    0,
                    5135.0193
                ]
            ],
            "classify": [],
            "describe": "BIN date_address_to BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Srovnej mi součet monthly_rental přes date_adress_to. Rozděl date_adress_to podle dnů v týdnu pomocí sloupcového grafu.",
            "Zjisti date_adress_to a součet monthly_rental. Rozděl date_adress_to podle dnů v týdnu a vizualizuj je pomocí sloupcového grafu.",
            "Sloupcový graf ukazuje rozložení date_adress_to a součet monthly_rental. Date_adress_to rozděleno podle dnů v týdnu.",
            "Ukaž mi rozložení date_adress_to a součet monthly_rental. Rozděleno date_adress_to podle dnů v týdnu ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Detention",
            "Assessment_Notes"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "246": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "SUM(monthly_rental)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    13315.6005,
                    5508.4205
                ]
            ],
            "classify": [],
            "describe": "BIN date_address_from BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Nakresli sloupcový graf rozložení date_address_from a součtu monthly_rental. Rozděl date_address_from podle roku.",
            "Vrať sloupcový graf o rozložení date_address_from a součtu monthly_rental. Rozděl date_address_from podle roku.",
            "Srovnej mi součet monthly_rental za date_address_from. Rozděl date_address_from podle roku pomocí sloupcového grafu.",
            "Zjisti date_address_from a součet monthly_rental. Rozděl date_address_from a vizualizuj je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Ref_Incident_Type",
            "Students_in_Detention"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "247": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "AVG(monthly_rental)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    951.1143214,
                    918.0700833
                ]
            ],
            "classify": [],
            "describe": "BIN date_address_from BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Zjisti date_address_from a průměr monthly_rental. Rozděl date_address_from podle roku a vizualizuj je pomocí sloupcového grafu.",
            "Nakresli sloupcový graf rozložení date_address_from a průměr měsíčního nájemného. Rozděl date_address_from podle roku.",
            "Vrať sloupcový graf rozložení date_address_from a průměr měsíčního nájemného. Rozděl date_address_from podle roku.",
            "Ukaž mi rozložení date_address_from a průměr měsíčního nájemného. Rozděl date_address_from podle roku ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Assessment_Notes",
            "Ref_Address_Types"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "248": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_address_from , COUNT(date_address_from) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "COUNT(date_address_from)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1,
                    2,
                    4,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_address_from BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Zjisti date_adress_from a množství date_adress_from. Rozděl date_adress_from podle dnů v týdnu a vizualizuj je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Ref_Address_Types",
            "Behavior_Incident"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "252": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT other_details , SUM(monthly_rental) FROM Student_Addresses GROUP BY other_details ORDER BY monthly_rental DESC"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "pie",
            "x_name": "other_details",
            "y_name": "SUM(monthly_rental)",
            "x_data": [
                [
                    "apartment",
                    "house"
                ]
            ],
            "y_data": [
                [
                    7345,
                    11469
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_details",
            "sort": null
        },
        "nl_queries": [
            "Vrať koláčový graf o podílu other_details a součtu monthly_rental.",
            "U atributu other_details a součtu monthly_rental zobraz jejich podíl pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Detention",
            "Students_in_Detention"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "264": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_address_from , SUM(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "SUM(monthly_rental)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    3592.6833,
                    2162.5801,
                    1036.8462,
                    1401.6051,
                    4162.5367,
                    2900.9379,
                    3566.8317
                ]
            ],
            "classify": [],
            "describe": "BIN date_address_from BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Vrať sloupcový graf rozložení date_address_from a součtu monthly_rental. Rozděl date_address_from podle dnů v týdnu.",
            "Zjisti date_address_from a součet monthly_rental. Rozděl date_address_from podle dnů v týdnu a vizualizuj je pomocí sloupcového grafu.",
            "Ukaž mi rozložení date_address_from a součet monthly_rental. Rozděl date_address_from podle dnů v týdnu ve sloupcovém grafu.",
            "Nakresli sloupcový graf rozložení date_address_from a součtu monthly_rental. Rozděl date_address_from podle dnů v týdnu."
        ],
        "irrelevant_tables": [
            "Detention",
            "Assessment_Notes"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "265": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC",
                "binning": "BIN date_address_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_address_from , AVG(monthly_rental) FROM Student_Addresses  ORDER BY monthly_rental DESC BIN date_address_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_address_from",
            "y_name": "AVG(monthly_rental)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    898.170825,
                    1081.29005,
                    1036.8462,
                    700.80255,
                    1040.634175,
                    966.9793,
                    891.707925
                ]
            ],
            "classify": [],
            "describe": "BIN date_address_from BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Srovnej mi průměrný měsíční nájem přes date_address_from. Rozděl date_address_from podle dnů v týdnu pomocí sloupcového grafu.",
            "Ukaž mi rozložení date_address_from a průměr monthly_rental. Rozděl date_address_from podle dnů v týdnu ve sloupcovém grafu.",
            "Zjisti date_address_from a průměr měsíčního_pronájmu. Rozděl date_address_from podle dnů v týdnu a vizualizuj je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Behavior_Incident",
            "Ref_Incident_Type"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "267": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_address_from , monthly_rental FROM Student_Addresses ORDER BY monthly_rental DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_address_from , monthly_rental FROM Student_Addresses ORDER BY monthly_rental DESC"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_address_from",
            "y_name": "monthly_rental",
            "x_data": [
                [
                    "2018-03-23",
                    "2017-10-31",
                    "2017-07-21",
                    "2017-09-10",
                    "2017-06-19",
                    "2018-01-13",
                    "2017-03-29",
                    "2017-09-23",
                    "2018-03-05",
                    "2017-11-12",
                    "2017-04-28",
                    "2017-04-18",
                    "2017-10-16",
                    "2017-08-12",
                    "2017-06-22",
                    "2018-02-18",
                    "2018-01-12",
                    "2018-02-04",
                    "2017-08-17",
                    "2017-10-09"
                ]
            ],
            "y_data": [
                [
                    1297.807,
                    1297.3186,
                    1287.5604,
                    1132.742,
                    1113.0996,
                    1067.8383,
                    1036.8462,
                    1032.9782,
                    1032.8717,
                    1007.2597,
                    894.0958,
                    865.2615,
                    826.4319,
                    800.1214,
                    756.6745,
                    747.5312,
                    683.0735,
                    679.2988,
                    644.9306,
                    620.2801
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať čárový graf změny monthly_rental v průběhu date_address_from.",
            "Čárový graf ukazuje vývoj monthly_rental v průběhu date_address_from.",
            "Ukaž mi trend monthly_rental v průběhu date_address_from pomocí čárového grafu."
        ],
        "irrelevant_tables": [
            "Students",
            "Assessment_Notes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "273": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY date_address_to ORDER BY monthly_rental DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_address_to , AVG(monthly_rental) FROM Student_Addresses GROUP BY date_address_to ORDER BY monthly_rental DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_address_to",
            "y_name": "AVG(monthly_rental)",
            "x_data": [
                [
                    "2018-02-25 05:21:34",
                    "2018-02-27 04:45:57",
                    "2018-03-02 00:19:57",
                    "2018-03-04 06:05:45",
                    "2018-03-04 06:51:19",
                    "2018-03-04 13:24:28",
                    "2018-03-04 17:04:35",
                    "2018-03-05 21:12:37",
                    "2018-03-06 21:41:20",
                    "2018-03-07 04:29:28",
                    "2018-03-12 02:57:48",
                    "2018-03-12 17:21:24",
                    "2018-03-14 09:12:05",
                    "2018-03-14 17:00:44",
                    "2018-03-15 04:44:58",
                    "2018-03-15 10:37:19",
                    "2018-03-18 03:28:47",
                    "2018-03-20 09:02:48",
                    "2018-03-22 17:56:20",
                    "2018-03-23 09:52:56"
                ]
            ],
            "y_data": [
                [
                    1297.3186,
                    747.5312,
                    1113.0996,
                    683.0735,
                    1132.742,
                    644.9306,
                    756.6745,
                    1032.9782,
                    800.1214,
                    865.2615,
                    679.2988,
                    1297.807,
                    1036.8462,
                    1007.2597,
                    1032.8717,
                    826.4319,
                    620.2801,
                    1287.5604,
                    1067.8383,
                    894.0958
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_address_to",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi změnu průměru monthly_rental v průběhu date_adress_to, a seskup data podle atributu date_address_to v čárovém grafu.",
            "Vrať spojnicový graf o změně průměru monthly_rental v průběhu date_adress_to , a seskupí podle atributu date_adress_to.",
            "Čárový graf zobrazuje změnu průměru monthly_rental v průběhu date_adress_to, a seskupení podle atributu date_address_to",
            "Ukaž mi trend průměru monthly_rental v závislosti na date_adress_to, a seskup data podle atributu date_address_to pomocí spojnicového grafu."
        ],
        "irrelevant_tables": [
            "Ref_Detention_Type",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "285": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , mean_temperature_f FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date , mean_temperature_f FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "mean_temperature_f",
            "x_data": [
                [
                    "7/30/2015",
                    "5/1/2014",
                    "5/12/2015"
                ]
            ],
            "y_data": [
                [
                    71,
                    72,
                    58
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U tří dnů s největšími maximálními rychlostmi větru zobraz datum a průměrnou teplotu pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "station",
            "trip"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "286": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "mean_humidity",
            "x_data": [
                [
                    "7/30/2015",
                    "5/1/2014",
                    "5/12/2015"
                ]
            ],
            "y_data": [
                [
                    75,
                    43,
                    52
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Jaké je datum a průměrná vlhkost pro 3 dny s největšími maximálními rychlostmi větru? Vrať mi sloupcový graf."
        ],
        "irrelevant_tables": [
            "station",
            "trip"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "291": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "binning": "BIN date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    "Tue",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Pro dny se třemi největšími maximálními rychlostmi větru mi pomocí sloupcového grafu ukaž četnost odpovídajících dat v úrovni pracovních dnů."
        ],
        "irrelevant_tables": [
            "trip",
            "station"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "292": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT mean_temperature_f , mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "mean_temperature_f",
            "y_name": "mean_humidity",
            "x_data": [
                [
                    71,
                    72,
                    58
                ]
            ],
            "y_data": [
                [
                    75,
                    43,
                    52
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro tři dny s největšími maximálními rychlostmi větru stačí zobrazit průměrnou teplotu a průměrnou vlhkost pomocí bodového grafu.",
            "Udělej mi bodový graf s průměrnou teplotou a průměrnou vlhkostí pro dny se třemi největšími maximálními rychlostmi větru."
        ],
        "irrelevant_tables": [
            "status",
            "station"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "293": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , SUM(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "binning": "BIN date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date , SUM(mean_temperature_f) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "SUM(mean_temperature_f)",
            "x_data": [
                [
                    "Tue",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    58,
                    143
                ]
            ],
            "classify": [],
            "describe": "BIN date BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Pro tři dny s největšími maximálními rychlostmi větru rozděl datum na dny v týdnu a poté sečti průměrné teploty pro sloupcový graf."
        ],
        "irrelevant_tables": [
            "status",
            "station"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "295": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "binning": "BIN date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date , SUM(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "SUM(mean_humidity)",
            "x_data": [
                [
                    "Tue",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    52,
                    118
                ]
            ],
            "classify": [],
            "describe": "BIN date BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Pro tři dny s největšími maximálními rychlostmi větru rozděl datum na dny v týdnu a poté sečti průměrnou vlhkost a zobraz sloupcový graf.",
            "Můžeš pro tyto dny s třemi největšími maximálními rychlostmi větru nakreslit sloupcový graf a porovnat celkovou průměrnou vlhkost v jednotlivých dnech týdnů? "
        ],
        "irrelevant_tables": [
            "status",
            "trip"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "296": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , AVG(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3",
                "binning": "BIN date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date , AVG(mean_humidity) FROM weather  ORDER BY max_gust_speed_mph DESC LIMIT 3 BIN date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "AVG(mean_humidity)",
            "x_data": [
                [
                    "Mon",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    52,
                    59
                ]
            ],
            "classify": [],
            "describe": "BIN date BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Pro tři dny s největšími maximálními rychlostmi větru rozděl datum do týdnů a poté vypočítej průměrnou vlhkost pro vizualizaci sloupcového grafu."
        ],
        "irrelevant_tables": [
            "station",
            "trip"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "297": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80",
                "binning": "BIN date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 BIN date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    "2013",
                    "2014",
                    "2015"
                ]
            ],
            "y_data": [
                [
                    26,
                    95,
                    61
                ]
            ],
            "classify": [],
            "describe": "BIN date BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Udělej mi sloupcový graf, který ukáže, kolik dní s maximální teplotou vyšší nebo rovnou 80° F v každém roce.",
            "Pro data s maximální teplotou větší nebo rovnou 80° F chci zobrazit počet dní v každém roce pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "station",
            "trip"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "306": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT city , max(lat) FROM station GROUP BY city",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT city , max(lat) FROM station GROUP BY city"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "city",
            "y_name": "max(lat)",
            "x_data": [
                [
                    "Mountain View",
                    "Palo Alto",
                    "Redwood City",
                    "San Francisco",
                    "San Jose"
                ]
            ],
            "y_data": [
                [
                    37.40694000000001,
                    37.448598,
                    37.491269,
                    37.80477,
                    37.352601
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro každé město vrať nejvyšší zeměpisnou šířku mezi jeho stanicemi. Zobraz koláčový graf.",
            "Jaká je nejvyšší zeměpisná šířka stanic každého města. Vizualizace pomocí koláčového grafu.",
            "Vytvoř koláčový graf zobrazující maximální zeměpisnou šířku v celém městě."
        ],
        "irrelevant_tables": [
            "status",
            "trip"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "308": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT lat , min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY lat",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT lat , min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY lat"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "lat",
            "y_name": "min(T2.duration)",
            "x_data": [
                [
                    37.329732,
                    37.330698,
                    37.333988,
                    37.331415,
                    37.336721,
                    37.333798,
                    37.330165,
                    37.348742,
                    37.337391,
                    37.335885,
                    37.332808,
                    37.339301,
                    37.332692,
                    37.333955,
                    37.481758,
                    37.486078000000006,
                    37.487616,
                    37.484219,
                    37.48537,
                    37.487682,
                    37.389218,
                    37.394358,
                    37.40694000000001,
                    37.39027700000001,
                    37.400443,
                    37.385956,
                    37.400241,
                    37.443988,
                    37.444521,
                    37.429082,
                    37.448598,
                    37.4256839,
                    37.78387100000001,
                    37.795001,
                    37.79728,
                    37.794231,
                    37.795425,
                    37.788975,
                    37.799953,
                    37.790302,
                    37.795392,
                    37.79146400000001,
                    37.787152,
                    37.789756,
                    37.792251,
                    37.781752,
                    37.77865,
                    37.781332,
                    37.80477,
                    37.780526,
                    37.785299,
                    37.78697800000001,
                    37.782259,
                    37.771058,
                    37.774814,
                    37.776619,
                    37.784878000000006,
                    37.7766,
                    37.776617,
                    37.788446,
                    37.781039,
                    37.798522,
                    37.794139,
                    37.7913,
                    37.786305,
                    37.789625,
                    37.352601,
                    37.798541,
                    37.491269,
                    37.342725
                ]
            ],
            "y_data": [
                [
                    195,
                    211,
                    169,
                    237,
                    182,
                    147,
                    161,
                    259,
                    219,
                    209,
                    205,
                    101,
                    165,
                    258,
                    198,
                    206,
                    126,
                    1193,
                    651,
                    225,
                    145,
                    189,
                    153,
                    191,
                    198,
                    166,
                    320,
                    80,
                    631,
                    151,
                    145,
                    166,
                    104,
                    92,
                    84,
                    76,
                    175,
                    73,
                    111,
                    139,
                    114,
                    63,
                    136,
                    86,
                    72,
                    73,
                    120,
                    107,
                    62,
                    68,
                    111,
                    62,
                    71,
                    138,
                    70,
                    101,
                    126,
                    77,
                    61,
                    209,
                    106,
                    143,
                    64,
                    87,
                    140,
                    104,
                    409,
                    105,
                    225,
                    269
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro každou stanici zobraz její zeměpisnou šířku a minimální dobu trvání cest, které na ní skončily, pomocí bodového grafu.",
            "Můžeš mi uvést zeměpisnou šířku každé koncové stanice a minimální dobu trvání cest, které tam skončily, pomocí bodového grafu?"
        ],
        "irrelevant_tables": [
            "status",
            "weather"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "312": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT end_station_name , COUNT(end_station_name) FROM trip GROUP BY end_station_name ORDER BY id LIMIT 3",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT end_station_name , COUNT(end_station_name) FROM trip GROUP BY end_station_name ORDER BY id LIMIT 3"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "end_station_name",
            "y_name": "COUNT(end_station_name)",
            "x_data": [
                [
                    "Harry Bridges Plaza (Ferry Building)",
                    "San Francisco Caltrain 2 (330 Townsend)"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY end_station_name",
            "sort": null
        },
        "nl_queries": [
            "Uveď podíl koncových stanic pro cesty se třemi nejstaršími ID pomocí koláčového grafu.",
            "Prosím udělej mi koláčový graf, který by zobrazoval podíl koncových stanic pro cesty se třemi nejmenšími ID."
        ],
        "irrelevant_tables": [
            "weather",
            "status"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "316": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f > 85 GROUP BY date"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    2013,
                    2014,
                    2015
                ]
            ],
            "y_data": [
                [
                    6,
                    33,
                    26
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date",
            "sort": null
        },
        "nl_queries": [
            "Udělej čárový graf, který mi ukáže počet dní, kdy byla maximální teplota vyšší než 85° F v každém roce.",
            "Uveď čárový graf, který znázorňuje vývoj počtu dnů v každém roce, kdy je maximální teplota vyšší než 85° F",
            "Čárový graf pro počet dat s maximální teplotou vyšší než 85° F v každém roce?"
        ],
        "irrelevant_tables": [
            "trip",
            "station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "328": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT long , avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT long , avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "long",
            "y_name": "avg(T2.duration)",
            "x_data": [
                [
                    -121.901782,
                    -121.888979,
                    -121.894902,
                    -121.8932,
                    -121.894074,
                    -121.886943,
                    -121.885831,
                    -121.894715,
                    -121.886995,
                    -121.88566000000002,
                    -121.883891,
                    -121.88993700000002,
                    -121.900084,
                    -121.877349,
                    -122.226904,
                    -122.232089,
                    -122.227424,
                    -122.203288,
                    -122.223492,
                    -122.081896,
                    -122.07671299999998,
                    -122.106758,
                    -122.066553,
                    -122.108338,
                    -122.083678,
                    -122.099076,
                    -122.164759,
                    -122.163093,
                    -122.142805,
                    -122.159504,
                    -122.13777749999998,
                    -122.408433,
                    -122.39997,
                    -122.398436,
                    -122.402923,
                    -122.404767,
                    -122.403452,
                    -122.398525,
                    -122.390637,
                    -122.394203,
                    -122.391034,
                    -122.388013,
                    -122.394643,
                    -122.39708600000002,
                    -122.405127,
                    -122.418235,
                    -122.418603,
                    -122.403234,
                    -122.39028799999998,
                    -122.39623600000002,
                    -122.398108,
                    -122.392738,
                    -122.402717,
                    -122.418954,
                    -122.417385,
                    -122.401014,
                    -122.39547,
                    -122.39526,
                    -122.408499,
                    -122.411748,
                    -122.407245,
                    -122.394434,
                    -122.399051,
                    -122.404966,
                    -122.400811,
                    -121.905733,
                    -122.40086200000002,
                    -122.236234,
                    -121.895617
                ]
            ],
            "y_data": [
                [
                    544.7611940298508,
                    885,
                    378.28,
                    980.0714285714287,
                    840.225,
                    529.0909090909091,
                    682.3333333333334,
                    1230.655172413793,
                    1123.4,
                    810.5416666666665,
                    711.7777777777777,
                    616.4,
                    608.8333333333334,
                    3597.095238095238,
                    3909,
                    2643.871794871795,
                    741,
                    979.0666666666667,
                    555.4,
                    563.0333333333333,
                    714.8062015503875,
                    380.4090909090909,
                    918.1315789473683,
                    667.5925925925926,
                    1082.7142857142858,
                    699.7,
                    1653.3255813953488,
                    2643.6,
                    1423.842105263158,
                    1164.1153846153845,
                    872.2222222222223,
                    1245.5836909871246,
                    906.0827586206897,
                    1067.6629213483143,
                    524.774834437086,
                    1497.7671232876712,
                    825.1928571428572,
                    1817.221649484536,
                    655.7166666666667,
                    1802.6721991701245,
                    938.7894736842104,
                    766.0746268656717,
                    535.0488372093023,
                    752.6637554585153,
                    551.4051282051282,
                    1774.6315789473686,
                    734.3861386138614,
                    1630.002267573696,
                    905.3340611353713,
                    399.6787330316742,
                    414.5117370892018,
                    512.8461538461538,
                    568.9297752808989,
                    912.8475609756098,
                    1139.6389891696754,
                    561.7394957983194,
                    725.3219284603423,
                    801.9405320813771,
                    765.4458598726114,
                    1276.7208121827412,
                    1423.375,
                    890.9441964285713,
                    655.2933333333333,
                    1664.8505338078294,
                    786.4408284023668,
                    862.4666666666667,
                    1044.7237569060774,
                    253.33333333333331,
                    556
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro každou stanici jednoduše zobraz její zeměpisnou délku a průměrnou dobu trvání cest, které začaly z této stanice, pomocí bodového grafu.",
            "Vrať prosím bodový graf, který zobrazuje zeměpisnou délku každé výchozí stanice a odpovídající průměrnou dobu trvání cest, které v ní začaly."
        ],
        "irrelevant_tables": [
            "weather",
            "status"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "335": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)",
                "binning": "BIN date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107) BIN date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    0,
                    2,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Pro dny, kdy byl minimální rosný bod menší než kterýkoli den v poštovním směrovacím číslem 94107, zobraz celkový počet takových dnů pro každý pracovní den pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "station",
            "status"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "338": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT city , COUNT(*) FROM station GROUP BY city",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT city , COUNT(*) FROM station GROUP BY city"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "city",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Mountain View",
                    "Palo Alto",
                    "Redwood City",
                    "San Francisco",
                    "San Jose"
                ]
            ],
            "y_data": [
                [
                    7,
                    5,
                    7,
                    35,
                    16
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vypočítej celkový počet stanic ve městě jako koláčový graf."
        ],
        "irrelevant_tables": [
            "trip",
            "status"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "340": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31",
                "binning": "BIN date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 BIN date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    "2013",
                    "2014",
                    "2015"
                ]
            ],
            "y_data": [
                [
                    7,
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zobraz, kolik dní v každém roce byl průměrný tlak na mořské hladině mezi 30,3 a 31."
        ],
        "irrelevant_tables": [
            "station",
            "status"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "342": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches > 30.3 and zip_code = '94107' GROUP BY date",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date , COUNT(date) FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31 GROUP BY date"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    2013,
                    2014,
                    2015
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date",
            "sort": null
        },
        "nl_queries": [
            "Čárový graf znázorňující počet dní v roce, kdy průměrný tlak na úrovni hladiny moře v palcích překročí 30,3 pro oblast s poštovním směrovacím číslem 94107.",
            "Čárový graf pro počet dat, kdy byl průměrný tlak hladiny moře vyšší než 30,3 za rok v oblasti s poštovním směrovacím číslem 94107?"
        ],
        "irrelevant_tables": [
            "trip",
            "status"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "354": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Snatch , Total FROM body_builder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Snatch , Total FROM body_builder"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "body_builder",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Snatch",
            "y_name": "Total",
            "x_data": [
                [
                    142.5,
                    137.5,
                    140,
                    137.5,
                    130
                ]
            ],
            "y_data": [
                [
                    317.5,
                    315,
                    315,
                    312.5,
                    292.5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Nakresli bodový graf závislosti mezi Snatch a Total.",
            "Vrať bodový graf o korelaci mezi Snatch a Total.",
            "Bodový graf ukazuje korelaci mezi Snatch a Total.",
            "Ukaž mi korelaci mezi Snatch a Total v bodovém grafu.",
            "Bodový graf, který zobrazí na ose x úběr a na ose y celkový úběr."
        ],
        "irrelevant_tables": [
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "367": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Writer , COUNT(Writer) FROM book GROUP BY Writer ORDER BY Writer ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Writer , COUNT(Writer) FROM book GROUP BY Writer ORDER BY Writer ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "book_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Writer",
            "y_name": "COUNT(Writer)",
            "x_data": [
                [
                    "Christopher Hinz",
                    "Christopher Moeller",
                    "Dave Gibbons",
                    "Elaine Lee",
                    "Garth Ennis",
                    "Howard Chaykin",
                    "Michael Moorcock",
                    "Timothy Truman"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Writer",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vyjmenuj autory knih ve vzestupném abecedním pořadí a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf pro uvedení počtu autorů knih ve vzestupném abecedním pořadí."
        ],
        "irrelevant_tables": [
            "publication"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "368": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.name , COUNT(T2.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T2.name ORDER BY T1.compatible_since_year DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.name , COUNT(T2.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T2.name ORDER BY T1.compatible_since_year DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Firefox",
                    "Internet Explorer",
                    "Opera",
                    "Safari"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet akcelerátorů pro jednotlivé prohlížeče."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "370": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T3.name , COUNT(T3.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T3.name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T3.name , COUNT(T3.name) FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id GROUP BY T3.name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "CACHEbox",
                    "CProxy",
                    "Fasterfox",
                    "Nitro",
                    "fasTun"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf zobrazující podíl počtu prohlížečů pro jednotlivé akcelerátory."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "376": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , COUNT(Sex) FROM people GROUP BY Sex"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "COUNT(Sex)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    2,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Sex",
            "sort": null
        },
        "nl_queries": [
            "Udělej mi srovnání o množství Pohlaví nad Pohlavím, a seskup data podle atributu Pohlaví pomocí sloupcového grafu.",
            "Vrať sloupcový graf o rozložení pohlaví a množství pohlaví. Seskup data podle atributu Pohlaví.",
            "Ukaž mi rozložení pohlaví a množství pohlaví, seskup je podle atributu Pohlaví do sloupcového grafu.",
            "Sloupcový graf zobrazuje rozložení pohlaví a množství pohlaví , a skupiny podle atributu Pohlaví.",
            "Najdi Pohlaví a množství Pohlaví, seskup je podle atributu Pohlaví a vizualizuj je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "387": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Height , Weight FROM people GROUP BY Sex",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Height , Weight FROM people GROUP BY Sex"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Height",
            "y_name": "Weight",
            "x_data": [
                [
                    200,
                    195
                ],
                [
                    188,
                    197,
                    202,
                    196,
                    193,
                    194,
                    196
                ]
            ],
            "y_data": [
                [
                    94,
                    90
                ],
                [
                    83,
                    85,
                    92,
                    88,
                    89,
                    88,
                    82
                ]
            ],
            "classify": [
                "F",
                "M"
            ],
            "describe": "GROUP BY Sex",
            "sort": null
        },
        "nl_queries": [
            "Nakresli bodový graf o závislosti mezi výškou a hmotností, a to barevně podle atributu Pohlaví.",
            "Seskupený bodový graf ukazuje korelaci mezi Výškou a Hmotností. Je seskupen podle atributu Pohlaví.",
            "Ukaž mi korelaci mezi výškou a hmotností , a barevně podle atributu Pohlaví v bodovém grafu.",
            "Zobraz výšku v závislosti na hmotnosti jako bodový graf a použij jinou barvu pro každé pohlaví"
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "399": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Support_rate , Consider_rate FROM candidate",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Support_rate , Consider_rate FROM candidate"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Support_rate",
            "y_name": "Consider_rate",
            "x_data": [
                [
                    0.25,
                    0.33,
                    0.24,
                    0.18,
                    0.24,
                    0.17
                ]
            ],
            "y_data": [
                [
                    0.3,
                    0.2,
                    0.27,
                    0.34,
                    0.3,
                    0.42
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Sestav bodový graf, který ukáže korelaci mezi mírou podpory a mírou zvažování jednotlivých kandidátů.",
            "Bodový graf znázorňující korelaci mezi mírou podpory a mírou zvažování pro jednotlivé kandidáty.",
            "Vykresli bodový graf, míra podpory podle consider_rate."
        ],
        "irrelevant_tables": [
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "400": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Consider_rate , Oppose_rate FROM candidate",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Consider_rate , Oppose_rate FROM candidate"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Consider_rate",
            "y_name": "Oppose_rate",
            "x_data": [
                [
                    0.3,
                    0.2,
                    0.27,
                    0.34,
                    0.3,
                    0.42
                ]
            ],
            "y_data": [
                [
                    0.43,
                    0.45,
                    0.43,
                    0.44,
                    0.32,
                    0.32
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Bodový graf znázorňující korelaci mezi mírou uvažování a mírou nesouhlasu pro jednotlivé kandidáty.",
            "Bodový graf, který zobrazuje míru uvažování na ose x a míru oppose_rate na ose y."
        ],
        "irrelevant_tables": [
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "402": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Sex",
            "y_name": "count(*)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "V koláčovém grafu spočítej počet osob každého pohlaví, které mají hmotnost vyšší než 85.",
            "Spočítej počet osob každého pohlaví, které mají hmotnost vyšší než 85. Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "403": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , count(*) FROM people WHERE weight > 85 GROUP BY sex"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "count(*)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu spočítej počet osob každého pohlaví, které mají hmotnost vyšší než 85."
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "405": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , avg(weight) FROM people GROUP BY sex",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , avg(weight) FROM people GROUP BY sex"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "avg(weight)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    92,
                    86.7142857142857
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf zobrazující průměrnou hmotnost pro každé pohlaví.",
            "Jaká je průměrná hmotnost osob každého pohlaví? Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "409": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(weight) , min(weight) FROM people GROUP BY Sex",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(weight) , min(weight) FROM people GROUP BY Sex"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(weight)",
            "y_name": "min(weight)",
            "x_data": [
                [
                    92
                ],
                [
                    86.7142857142857
                ]
            ],
            "y_data": [
                [
                    90
                ],
                [
                    82
                ]
            ],
            "classify": [
                "F",
                "M"
            ],
            "describe": "GROUP BY Sex",
            "sort": null
        },
        "nl_queries": [
            "Zobrazení vztahu průměrné vs minimální hmotnost jako bodový graf pro každé pohlaví jinou barvou"
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "416": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Year , avg(Weight) FROM CARS_DATA",
                "binning": "BIN Year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Year , avg(Weight) FROM CARS_DATA BIN Year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "Year",
            "y_name": "avg(Weight)",
            "x_data": [
                [
                    "1970",
                    "1971",
                    "1972",
                    "1973",
                    "1974",
                    "1975",
                    "1976",
                    "1977",
                    "1978",
                    "1979",
                    "1980",
                    "1981",
                    "1982"
                ]
            ],
            "y_data": [
                [
                    3441,
                    2960,
                    3237,
                    3419,
                    2877,
                    3176,
                    3078,
                    2997,
                    2861,
                    3055,
                    2436,
                    2532,
                    2453
                ]
            ],
            "classify": [],
            "describe": "BIN Year BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi čárový graf průměrné změny hmotnosti v průběhu roku, rozdělený podle let"
        ],
        "irrelevant_tables": [
            "car_makers",
            "countries"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "419": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Continent",
            "y_name": "count(*)",
            "x_data": [
                [
                    "america",
                    "europe",
                    "asia",
                    "africa",
                    "australia"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kolik zemí mají jednotlivé kontinenty? Vypiš název kontinentu a počet zemí v koláčovém grafu.",
            "U každého kontinentu uveď v koláčovém grafu, kolik má zemí."
        ],
        "irrelevant_tables": [
            "model_list",
            "cars_data"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "432": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT max(Accelerate) , Cylinders FROM CARS_DATA",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT max(Accelerate) , Cylinders FROM CARS_DATA"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "max(Accelerate)",
            "y_name": "Cylinders",
            "x_data": [
                [
                    13.5,
                    24.8,
                    20.1,
                    21,
                    22.2
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    5,
                    6,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vykresli bodový graf o tom, jaké je maximální zrychlení pro různé počty válců?",
            "Jaké je maximální zrychlení pro různé počty válců? Zobraz bodový graf.",
            "Bodový graf pro zobrazení maximálního zrychlení na ose x a válců na ose y."
        ],
        "irrelevant_tables": [
            "car_names",
            "continents"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "433": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Continent",
            "y_name": "count(*)",
            "x_data": [
                [
                    "america",
                    "asia",
                    "europe"
                ]
            ],
            "y_data": [
                [
                    4,
                    7,
                    11
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kolik výrobců automobilů je na jednotlivých kontinentech? Uveď název kontinentu a počet obyvatel pomocí koláčového grafu.",
            "Zobraz koláčový graf o tom, jak se jmenují jednotlivé kontinenty a kolik je na nich výrobců automobilů.",
            "Ukaž mi koláčový graf o tom, jak se jmenují jednotlivé kontinenty a kolik je na nich výrobců automobilů?"
        ],
        "irrelevant_tables": [
            "model_list",
            "car_names"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "440": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\"",
                "binning": "BIN InvoiceDate BY YEAR"
            },
            "VQL": "Visualize BAR SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\" BIN InvoiceDate BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "chinook_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "InvoiceDate",
            "y_name": "COUNT(InvoiceDate)",
            "x_data": [
                [
                    "2009",
                    "2010",
                    "2012",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN InvoiceDate BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Kolik faktur je vystaveno pro zákazníky s křestním jménem Astrid a příjmením Gruber v jednotlivých letech. Znázorni je sloupcovým grafem"
        ],
        "irrelevant_tables": [
            "Album",
            "PlaylistTrack"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "441": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\"",
                "binning": "BIN InvoiceDate BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT InvoiceDate , COUNT(InvoiceDate) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\" BIN InvoiceDate BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "chinook_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "InvoiceDate",
            "y_name": "COUNT(InvoiceDate)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    0,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN InvoiceDate BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Kolik faktur je vystaveno pro zákazníky s křestním jménem Astrid a příjmením Gruber, datum rozděl podle dnů v týdnu, a zobraz je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Employee",
            "Genre"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "446": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Title",
            "y_name": "max(T1.price)",
            "x_data": [
                [
                    "The Case of the Mystery Weekend",
                    "The Case of the Smart Dummy",
                    "The Case: Off the Record",
                    "The Case of the Bermuda Triangle",
                    "The Case of the Piggy Banker"
                ]
            ],
            "y_data": [
                [
                    15.99,
                    12.99,
                    8.99,
                    9.99,
                    12.99
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz koláčový graf o tom, jaký je název a maximální cena jednotlivých filmů?",
            "Jaký je název a maximální cena každého filmu? Zobraz koláčový graf.",
            "Uveď název a nejvyšší cenu každého filmu pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "cinema"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "451": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Title , AVG(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Title , AVG(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Title",
            "y_name": "AVG(Price)",
            "x_data": [
                [
                    "The Case of the Bermuda Triangle",
                    "The Case of the Mystery Weekend",
                    "The Case of the Piggy Banker",
                    "The Case of the Smart Dummy",
                    "The Case: Off the Record"
                ]
            ],
            "y_data": [
                [
                    9.99,
                    12.99,
                    12.99,
                    12.99,
                    8.99
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Title",
            "sort": null
        },
        "nl_queries": [
            "Zobraz průměrnou cenu každého filmu ve sloupcovém grafu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "457": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Carrowleagh",
                    "Codling",
                    "Gortahile",
                    "Mount Callan",
                    "Oriel"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet filmů v jednotlivých kinech v koláčovém grafu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "461": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , SUM(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , SUM(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "SUM(Price)",
            "x_data": [
                [
                    "Carrowleagh",
                    "Codling",
                    "Gortahile",
                    "Mount Callan",
                    "Oriel"
                ]
            ],
            "y_data": [
                [
                    9.99,
                    34.97,
                    12.99,
                    9.99,
                    15.99
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Uveď koláčový graf, který zobrazuje součet cen za jednotlivá kina."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "462": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Title , SUM(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Title",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Title , SUM(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Title"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Title",
            "y_name": "SUM(Price)",
            "x_data": [
                [
                    "The Case of the Bermuda Triangle",
                    "The Case of the Mystery Weekend",
                    "The Case of the Piggy Banker",
                    "The Case of the Smart Dummy",
                    "The Case: Off the Record"
                ]
            ],
            "y_data": [
                [
                    9.99,
                    38.97,
                    12.99,
                    12.99,
                    8.99
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Title",
            "sort": null
        },
        "nl_queries": [
            "Vrať koláčový graf zobrazující součet cen jednotlivých filmů."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "463": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , COUNT(Date) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "COUNT(Date)",
            "x_data": [
                [
                    "11 July",
                    "19 May",
                    "2 Aug",
                    "20 May",
                    "21 Jun",
                    "21 May"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date",
            "sort": null
        },
        "nl_queries": [
            "U každého záznamu v plánu zobraz počet filmů za každý den ve sloupcovém grafu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "464": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , count(*) FROM cinema GROUP BY LOCATION",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , count(*) FROM cinema GROUP BY LOCATION"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "count(*)",
            "x_data": [
                [
                    "County Clare",
                    "County Cork",
                    "County Dublin",
                    "County Laois",
                    "County Louth",
                    "County Tipperary",
                    "County Wicklow"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz každou lokalitu a počet kin v ní pomocí sloupcového grafu.",
            "Zobraz každou lokalitu a počet kin v nich. Zobraz sloupcový graf.",
            "Vytvoř sloupcový graf zobrazující celkový počet v jednotlivých lokalitách"
        ],
        "irrelevant_tables": [
            "schedule",
            "film"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "470": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Openning_year , SUM(Capacity) FROM cinema",
                "binning": "BIN Openning_year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Openning_year , SUM(Capacity) FROM cinema BIN Openning_year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "line",
            "x_name": "Openning_year",
            "y_name": "SUM(Capacity)",
            "x_data": [
                [
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2015"
                ]
            ],
            "y_data": [
                [
                    305,
                    1633,
                    1336,
                    368,
                    330,
                    364
                ]
            ],
            "classify": [],
            "describe": "BIN Openning_year BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Jaký je součet kapacit kin otevřených v jednotlivých letech? Vrať čárový graf.",
            "Vykresli součet kapacity v průběhu roku otevření v čárovém grafu"
        ],
        "irrelevant_tables": [
            "film",
            "schedule"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "471": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Openning_year , AVG(Capacity) FROM cinema",
                "binning": "BIN Openning_year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Openning_year , AVG(Capacity) FROM cinema BIN Openning_year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "line",
            "x_name": "Openning_year",
            "y_name": "AVG(Capacity)",
            "x_data": [
                [
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2015"
                ]
            ],
            "y_data": [
                [
                    305,
                    544.3333333333334,
                    445.3333333333333,
                    368,
                    330,
                    364
                ]
            ],
            "classify": [],
            "describe": "BIN Openning_year BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Řekni mi průměrnou kapacitu otevřených kin za každý rok v lineárním grafu."
        ],
        "irrelevant_tables": [
            "film",
            "schedule"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "478": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "sum(T1.show_times_per_day)",
            "x_data": [
                [
                    "Codling",
                    "Carrowleagh",
                    "Gortahile",
                    "Mount Callan",
                    "Oriel"
                ]
            ],
            "y_data": [
                [
                    10,
                    5,
                    4,
                    5,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi koláčový graf celkového počtu představení v jednotlivých kinech.",
            "Koláčový graf o tom, jaký je celkový počet představení v jednotlivých kinech?"
        ],
        "irrelevant_tables": [
            "film"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "479": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "sum(T1.show_times_per_day)",
            "x_data": [
                [
                    "Codling",
                    "Carrowleagh",
                    "Gortahile",
                    "Mount Callan",
                    "Oriel"
                ]
            ],
            "y_data": [
                [
                    10,
                    5,
                    4,
                    5,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz sloupcový graf, který ukazuje, jaký je celkový počet promítání v jednotlivých kinech?",
            "Jaký je celkový počet představení v jednotlivých kinech. Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "film"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "481": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM MATCH GROUP BY Venue ORDER BY date DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM MATCH GROUP BY Venue ORDER BY date DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "city_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Estadio Cuscatl\u00e1n , San Salvador , El Salvador",
                    "Estadio Rigoberto L\u00f3pez , Managua , Nicaragua"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue",
            "sort": null
        },
        "nl_queries": [
            "Jaká jsou místa konání všech zápasů? Seřaď je sestupně podle data shody a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf pro počet míst konání všech zápasů? Seřaď je sestupně podle data shody.",
            "Vypsat místa konání všech zápasů v pořadí podle data konání od nejnovějšího a spočítat je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "temperature",
            "hosting_city"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "487": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "climbing",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Duwoni / Mt Speke (Vittorio Emanuele Pk)",
                    "Kibo (Uhuru Pk)",
                    "Mawenzi (Hans Meyer Pk)",
                    "Mount Kenya (Batian)",
                    "Mount Kenya (Lenana)"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet horolezců na každé hoře v koláčovém grafu.",
            "Jaký je počet horolezců na každé hoře? Ukaž mi koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "488": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T2.Name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "climbing",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Duwoni / Mt Speke (Vittorio Emanuele Pk)",
                    "Kibo (Uhuru Pk)",
                    "Mawenzi (Hans Meyer Pk)",
                    "Mount Kenya (Batian)",
                    "Mount Kenya (Lenana)"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet horolezců na každé hoře ve sloupcovém grafu.",
            "Jaký je počet horolezců na každé hoře? Ukaž mi sloupcový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "491": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "coffee_shop",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Address",
            "y_name": "Num_of_staff",
            "x_data": [
                [
                    "909 Walnut Street",
                    "1201 Walnut Street",
                    "2345 McGee Street",
                    "909 Main Street",
                    "1100 Main Street"
                ]
            ],
            "y_data": [
                [
                    27,
                    34,
                    425,
                    28,
                    23
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti adresu a číslo personálu obchodů, které nemají žádné „happy hours“. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "member",
            "happy_hour_member"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "492": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Address , Num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "coffee_shop",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Address",
            "y_name": "Num_of_staff",
            "x_data": [
                [
                    "909 Walnut Street",
                    "1201 Walnut Street",
                    "2345 McGee Street",
                    "909 Main Street",
                    "1100 Main Street"
                ]
            ],
            "y_data": [
                [
                    27,
                    34,
                    425,
                    28,
                    23
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti adresu a číslo personálu obchodů, které nemají žádné „happy hours“. Vizualizace pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "member",
            "happy_hour_member"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "494": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Address , count(*) FROM member GROUP BY address",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Address , count(*) FROM member GROUP BY address"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "coffee_shop",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Address",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bridgeport",
                    "Cheshire",
                    "Hartford",
                    "Waterbury"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet členů žijících na jednotlivých adresách. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "happy_hour",
            "happy_hour_member"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "505": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Address , AVG(Time_of_purchase) FROM member GROUP BY Address ORDER BY Time_of_purchase",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Address , AVG(Time_of_purchase) FROM member GROUP BY Address ORDER BY Time_of_purchase"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "coffee_shop",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Address",
            "y_name": "AVG(Time_of_purchase)",
            "x_data": [
                [
                    "Bridgeport",
                    "Cheshire",
                    "Hartford",
                    "Waterbury"
                ]
            ],
            "y_data": [
                [
                    26,
                    35,
                    21.666666666666668,
                    27.5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Address",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf zobrazující průměrnou dobu nákupu pro každou adresu kavárny."
        ],
        "irrelevant_tables": [
            "happy_hour",
            "happy_hour_member"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "513": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DEPT_CODE , sum(T1.crs_credit) FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DEPT_CODE , sum(T1.crs_credit) FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "DEPT_CODE",
            "y_name": "sum(T1.crs_credit)",
            "x_data": [
                [
                    "ACCT",
                    "CIS"
                ]
            ],
            "y_data": [
                [
                    15,
                    27
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti celkový počet kreditů všech předmětů nabízených jednotlivými katedrami. Vizualizace pomocí sloupcového grafu.",
            "Sloupcový graf o tom, jaký je celkový počet kreditů nabízených jednotlivými katedrami?",
            "Jaký je celkový počet kreditů nabízených jednotlivými katedrami? Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "PROFESSOR",
            "EMPLOYEE"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "516": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM employee WHERE emp_jobcode = 'PROF' GROUP BY EMP_FNAME ORDER BY emp_dob"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_FNAME",
            "y_name": "COUNT(EMP_FNAME)",
            "x_data": [
                [
                    "Anne",
                    "Annelise",
                    "Arnelle",
                    "Carlos",
                    "Doreen",
                    "George",
                    "Gerald",
                    "Herman",
                    "Hermine",
                    "Ismael",
                    "James",
                    "Melanie",
                    "Peter",
                    "Preston",
                    "Ralph",
                    "Robert",
                    "Ronald",
                    "Ross",
                    "Van",
                    "Willa"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY EMP_FNAME",
            "sort": null
        },
        "nl_queries": [
            "Jaká jsou křestní jména všech zaměstnanců, kteří jsou profesory? Seřaď podle data narození, a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf o tom, jaký je počet křestních jmen všech zaměstnanců, kteří jsou profesory? Seřaď podle data narození?",
            "Sloupcový graf pro výpis počtu křestních jmen všech zaměstnanců s kódem pracovního místa PROF seřazených podle data narození."
        ],
        "irrelevant_tables": [
            "STUDENT",
            "PROFESSOR"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "517": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT STU_FNAME , COUNT(STU_FNAME) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT STU_FNAME , COUNT(STU_FNAME) FROM student WHERE stu_gpa < (SELECT avg(stu_gpa) FROM student) GROUP BY STU_FNAME"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "STU_FNAME",
            "y_name": "COUNT(STU_FNAME)",
            "x_data": [
                [
                    "John",
                    "Juliette",
                    "William"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY STU_FNAME",
            "sort": null
        },
        "nl_queries": [
            "Zjisti v koláčovém grafu počet studentů, jejichž průměrné gpa je nižší než průměrné gpa všech studentů pro různá křestní jména.",
            "Kolik je studentů, kteří mají průměrný prospěch nižší než průměrný? Ukaž mi koláčový graf seskupený podle křestního jména žáka."
        ],
        "irrelevant_tables": [
            "DEPARTMENT",
            "COURSE"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "526": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DEPT_NAME , count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DEPT_NAME , count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "DEPT_NAME",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Accounting",
                    "Computer Info. Systems",
                    "Biology"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zjisti počet studentů na jednotlivých katedrách, které mají 3 nejvyšší počty studentů.",
            "Které katedry mají 3 nejvyšší počty studentů? Zobraz název katedry a počet studentů pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "COURSE",
            "CLASS"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "527": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT DEPT_ADDRESS , count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT DEPT_ADDRESS , count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "DEPT_ADDRESS",
            "y_name": "count(*)",
            "x_data": [
                [
                    "KLR 211, Box 52",
                    "KLR 333, Box 56",
                    "AAK 230, Box 415"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet studentů v každé katedře, která má 3 nejvyšší počty studentů. Zobraz adresu oddělení a počet studentů pomocí koláčového grafu.",
            "Které katedry mají 3 nejvyšší počty studentů? Zobraz adresu oddělení a počet studentů pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "COURSE",
            "EMPLOYEE"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "536": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT max(stu_gpa) , avg(stu_gpa) FROM student GROUP BY dept_code",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT max(stu_gpa) , avg(stu_gpa) FROM student GROUP BY dept_code"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "max(stu_gpa)",
            "y_name": "avg(stu_gpa)",
            "x_data": [
                [
                    3.15,
                    2.84,
                    3.27,
                    3.87,
                    2.11
                ]
            ],
            "y_data": [
                [
                    2.776666666666667,
                    2.84,
                    3.18,
                    3.87,
                    2.11
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí bodového grafu zjisti vztah mezi maximálním a průměrným gpa všech studentů na jednotlivých katedrách.",
            "Jaký je vztah mezi nejvyšším a průměrným gpa studentů na jednotlivých katedrách? Udělej mi bodový graf."
        ],
        "irrelevant_tables": [
            "EMPLOYEE",
            "COURSE"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "539": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT max(stu_gpa) , avg(stu_gpa) FROM student GROUP BY DEPT_CODE",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT max(stu_gpa) , avg(stu_gpa) FROM student GROUP BY DEPT_CODE"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "max(stu_gpa)",
            "y_name": "avg(stu_gpa)",
            "x_data": [
                [
                    3.15
                ],
                [
                    2.84
                ],
                [
                    3.27
                ],
                [
                    3.87
                ],
                [
                    2.11
                ]
            ],
            "y_data": [
                [
                    2.776666666666667
                ],
                [
                    2.84
                ],
                [
                    3.18
                ],
                [
                    3.87
                ],
                [
                    2.11
                ]
            ],
            "classify": [
                "ACCT",
                "BIOL",
                "CIS",
                "EDU",
                "ENGL"
            ],
            "describe": "GROUP BY DEPT_CODE",
            "sort": null
        },
        "nl_queries": [
            "Zjisti vztah mezi průměrným a maximálním gpa všech studentů na jednotlivých katedrách pomocí bodového grafu barevně označeného kódem katedry.",
            "Jaký je vztah mezi průměrným a nejvyšším gpa studentů na jednotlivých katedrách? Dej mi bodový graf barevně rozlišený podle kódu oddělení.",
            "Zobraz vztah mezi maximálním gpa a průměrem gpa pro každý DEPT_CODE pomocí seskupeného bodového grafu"
        ],
        "irrelevant_tables": [
            "EMPLOYEE",
            "ENROLL"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "540": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT max(stu_gpa) , min(stu_gpa) FROM student GROUP BY DEPT_CODE",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT max(stu_gpa) , min(stu_gpa) FROM student GROUP BY DEPT_CODE"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "max(stu_gpa)",
            "y_name": "min(stu_gpa)",
            "x_data": [
                [
                    3.15
                ],
                [
                    2.84
                ],
                [
                    3.27
                ],
                [
                    3.87
                ],
                [
                    2.11
                ]
            ],
            "y_data": [
                [
                    2.26
                ],
                [
                    2.84
                ],
                [
                    3.09
                ],
                [
                    3.87
                ],
                [
                    2.11
                ]
            ],
            "classify": [
                "ACCT",
                "BIOL",
                "CIS",
                "EDU",
                "ENGL"
            ],
            "describe": "GROUP BY DEPT_CODE",
            "sort": null
        },
        "nl_queries": [
            "Zjisti vztah mezi minimálním a maximálním gpa všech studentů na jednotlivých katedrách pomocí bodového grafu barevně označeného kódem katedry.",
            "Jaký je poměr mezi nejnižším a nejvyšším průměrem studentů na jednotlivých katedrách? Dej mi bodový graf barevně rozlišený podle kódu oddělení.",
            "Zobraz maximálním gpa vs minimální gpa jako bodový graf. Použij jinou barvu pro každý DEPT_CODE"
        ],
        "irrelevant_tables": [
            "ENROLL",
            "CLASS"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "541": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(stu_gpa) , min(stu_gpa) FROM student GROUP BY DEPT_CODE",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(stu_gpa) , min(stu_gpa) FROM student GROUP BY DEPT_CODE"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(stu_gpa)",
            "y_name": "min(stu_gpa)",
            "x_data": [
                [
                    2.776666666666667
                ],
                [
                    2.84
                ],
                [
                    3.18
                ],
                [
                    3.87
                ],
                [
                    2.11
                ]
            ],
            "y_data": [
                [
                    2.26
                ],
                [
                    2.84
                ],
                [
                    3.09
                ],
                [
                    3.87
                ],
                [
                    2.11
                ]
            ],
            "classify": [
                "ACCT",
                "BIOL",
                "CIS",
                "EDU",
                "ENGL"
            ],
            "describe": "GROUP BY DEPT_CODE",
            "sort": null
        },
        "nl_queries": [
            "Zjisti vztah mezi minimálním a průměrným gpa všech studentů na jednotlivých katedrách pomocí bodového grafu barevně odlišeného podle kódu katedry.",
            "Jaký je vztah mezi nejnižším a průměrným gpa studentů na každém oddělení? Dej mi bodový graf barevně rozlišený podle kódu oddělení.",
            "Seskupený bodový graf minimálního studijního průměru vs. průměrného studijní průměr podle DEPT_CODE"
        ],
        "irrelevant_tables": [
            "ENROLL",
            "DEPARTMENT"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "542": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "SCHOOL_CODE",
            "y_name": "count(DISTINCT dept_address)",
            "x_data": [
                [
                    "A&SCI",
                    "BUS"
                ]
            ],
            "y_data": [
                [
                    7,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Nakresli koláčový graf o tom, kolik různých míst má každá škola?",
            "Spočítej různé adresy jednotlivých škol pomocí koláčového grafu.",
            "Spočítej různé adresy jednotlivých škol. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "PROFESSOR",
            "COURSE"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "551": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102' GROUP BY EMP_LNAME",
                "binning": "BIN EMP_HIREDATE BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102' GROUP BY EMP_LNAME BIN EMP_HIREDATE BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_HIREDATE",
            "y_name": "COUNT(EMP_HIREDATE)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "GROUP BY EMP_LNAME, BIN EMP_HIREDATE BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet profesorů, kteří jsou v kanceláři DRE 102 zaměstnáni v jednotlivých pracovních dnech, pomocí sloupcového grafu.",
            "Kolik profesorů, jejichž kancelář se nachází v DRE 102, je zaměstnáno v každém pracovním dni? Vrať sloupcový graf."
        ],
        "irrelevant_tables": [
            "DEPARTMENT",
            "ENROLL"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": false
            },
            {
                "channel_specified": [],
                "stacked_bar": false
            }
        ]
    },
    "561": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY EMP_FNAME",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY EMP_FNAME"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_FNAME",
            "y_name": "COUNT(EMP_FNAME)",
            "x_data": [
                [
                    "Arnelle",
                    "Carlos",
                    "Gerald",
                    "Ismael",
                    "Peter",
                    "Robert"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    3,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY EMP_FNAME",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet kurzů pro každého instruktora (označeného křestním jménem) ve sloupcovém grafu.",
            "Kolik kurzů učí každý učitel? Ukaž mi sloupcový graf s jednotlivými učiteli podle křestních jmen."
        ],
        "irrelevant_tables": [
            "STUDENT",
            "DEPARTMENT"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "567": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT STU_FNAME , STU_GPA FROM student ORDER BY stu_gpa DESC LIMIT 5",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT STU_FNAME , STU_GPA FROM student ORDER BY stu_gpa DESC LIMIT 5"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "STU_FNAME",
            "y_name": "STU_GPA",
            "x_data": [
                [
                    "Gerald",
                    "Anne",
                    "Raphael",
                    "Walter",
                    "John"
                ]
            ],
            "y_data": [
                [
                    3.87,
                    3.27,
                    3.15,
                    3.09,
                    2.92
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Jaké je průměrné skóre 5 nejlepších studentů s nejvyšším průměrným skóre? Ukaž mi sloupcový graf s každým studentem podle křestního jména.",
            "Zobraz průměrný gpa studentů (označených křestním jménem) s pěti nejlepšími průměrnými studijními výsledky ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "EMPLOYEE",
            "COURSE"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "574": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(*) FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "SCHOOL_CODE",
            "y_name": "count(*)",
            "x_data": [
                [
                    "A&SCI",
                    "BUS"
                ]
            ],
            "y_data": [
                [
                    12,
                    10
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať sloupcový graf o tom, jaký je počet profesorů na různých školách.",
            "Jaký je počet profesorů pro různé školy? Vykresli je jako sloupcový graf.",
            "Vrať sloupcový graf o tom, kolik je na jednotlivých školách různých profesorů.",
            "Sloupcový graf o tom, kolik různých profesorů je na různých školách.",
            "Kolik různých profesorů působí na různých školách? Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "ENROLL",
            "COURSE"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "577": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT STU_LNAME , COUNT(STU_LNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_LNAME",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT STU_LNAME , COUNT(STU_LNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_LNAME"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "STU_LNAME",
            "y_name": "COUNT(STU_LNAME)",
            "x_data": [
                [
                    "Bowser",
                    "Smithson"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY STU_LNAME",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet studentů, kteří absolvovali nějaký předmět a dostali A nebo C, a seskup je podle příjmení do koláčového grafu.",
            "Kolik studentů, kteří se účastní kurzu, obdrželo A nebo C? Pomocí koláčového grafu seskup žáky podle jejich příjmení."
        ],
        "irrelevant_tables": [
            "EMPLOYEE",
            "PROFESSOR"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "582": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ,  EMP_FNAME",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code GROUP BY CRS_DESCRIPTION ,  EMP_FNAME"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_FNAME",
            "y_name": "COUNT(EMP_FNAME)",
            "x_data": [
                [
                    "Arnelle",
                    "Carlos",
                    "Gerald",
                    "Ismael",
                    "Peter",
                    "Robert"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    0,
                    0,
                    0,
                    2,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0
                ],
                [
                    0,
                    2,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    2,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    2,
                    0
                ]
            ],
            "classify": [
                "Accounting I",
                "Accounting II",
                "Database Design and Implementation",
                "Intro. to Microcomputing",
                "Intro. to Statistics",
                "Statistical Applications"
            ],
            "describe": "GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet kurzů, které každý instruktor vedl, ve sloupcovém grafu. Na ose x je uvedeno křestní jméno instruktora a skupina podle popisu kurzu.",
            "Kolik předmětů každý učitel vyučoval? Ukaž mi skládaný sloupcový graf. Na ose x je křestní jméno učitele a skupina podle popisu kurzu."
        ],
        "irrelevant_tables": [
            "PROFESSOR",
            "DEPARTMENT"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "stacked_bar": true
            },
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "stacked_bar": true
            }
        ]
    },
    "591": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title BIN year BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    1,
                    0,
                    1,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, BIN year BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet kurzů nabízených katedrou psychologie v jednotlivých letech pomocí skupinového čárového grafu seskupeného podle semestrů.",
            "Kolik předmětů se v jednotlivých ročnících katedry psychologie vyučuje? Zobraz skupinový čárový graf seskupený podle semestrů."
        ],
        "irrelevant_tables": [
            "advisor",
            "time_slot"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "593": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT semester , COUNT(semester) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT semester , COUNT(semester) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester ORDER BY T1.title"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "semester",
            "y_name": "COUNT(semester)",
            "x_data": [
                [
                    "Fall",
                    "Spring"
                ]
            ],
            "y_data": [
                [
                    3,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY semester",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet kurzů nabízených katedrou psychologie v jednotlivých semestrech pomocí sloupcového grafu.",
            "Kolik kurzů má katedra psychologie v každém semestru? Vrať sloupcový graf."
        ],
        "irrelevant_tables": [
            "student",
            "takes"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "610": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT semester , COUNT(semester) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT semester , COUNT(semester) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY semester"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "pie",
            "x_name": "semester",
            "y_name": "COUNT(semester)",
            "x_data": [
                [
                    "Fall",
                    "Spring"
                ]
            ],
            "y_data": [
                [
                    3,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY semester",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu zjisti počet kurzů nabízených katedrou psychologie v jednotlivých semestrech.",
            "Kolik kurzů má katedra psychologie v každém semestru? Vrať koláčový graf."
        ],
        "irrelevant_tables": [
            "department",
            "instructor"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "611": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY year"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet kurzů nabízených katedrou psychologie v jednotlivých letech pomocí lineárního grafu.",
            "Kolik kurzů má katedra psychologie v jednotlivých ročnících? Vrať čárový graf."
        ],
        "irrelevant_tables": [
            "department",
            "classroom"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "612": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology'",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet kurzů nabízených katedrou psychologie v jednotlivých letech pomocí lineárního grafu.",
            "Kolik kurzů má katedra psychologie v jednotlivých ročnících? Vrať čárový graf."
        ],
        "irrelevant_tables": [
            "takes",
            "student"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "616": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , SUM(salary) FROM instructor GROUP BY dept_name ORDER BY salary",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , SUM(salary) FROM instructor GROUP BY dept_name ORDER BY salary"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "SUM(salary)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    194865,
                    79070,
                    385488,
                    122574,
                    196266,
                    385383,
                    296649,
                    288354,
                    105311,
                    99382,
                    172264,
                    336388,
                    159625,
                    229152,
                    300158,
                    122285,
                    406770
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name",
            "sort": null
        },
        "nl_queries": [
            "Zjisti dept_name a součet platů, seskup je podle atributu dept_name a vizualizuj je pomocí sloupcového grafu.",
            "Vizualizuj sloupcový graf o rozdělení dept_name a součtu platů, a seskup je podle atributu dept_name."
        ],
        "irrelevant_tables": [
            "teaches",
            "prereq"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "617": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY salary",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY salary"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(salary)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    48716.25,
                    79070,
                    77097.6,
                    61287,
                    98133,
                    96345.75,
                    74162.25,
                    72088.5,
                    105311,
                    99382,
                    57421.333333333336,
                    84097,
                    79812.5,
                    114576,
                    100052.66666666667,
                    61142.5,
                    67795
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name",
            "sort": null
        },
        "nl_queries": [
            "Nakresli sloupcový graf o rozdělení dept_name a průměru platu, seskup je podle atributu dept_name.",
            "Vrať sloupcový graf o rozdělení dept_name a průměru platu, a seskup je podle atributu dept_name."
        ],
        "irrelevant_tables": [
            "time_slot",
            "section"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "622": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT max(capacity) , avg(capacity) FROM classroom GROUP BY building",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT max(capacity) , avg(capacity) FROM classroom GROUP BY building"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "max(capacity)",
            "y_name": "avg(capacity)",
            "x_data": [
                [
                    47,
                    12,
                    11,
                    18,
                    27,
                    59,
                    65,
                    34,
                    51,
                    10,
                    30,
                    92,
                    97,
                    28,
                    12,
                    60,
                    109,
                    113,
                    115,
                    120
                ]
            ],
            "y_data": [
                [
                    36.5,
                    12,
                    10.5,
                    18,
                    27,
                    59,
                    37.5,
                    34,
                    51,
                    10,
                    26,
                    92,
                    97,
                    28,
                    11,
                    60,
                    49.33333333333334,
                    113,
                    93,
                    76
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí bodového grafu zjisti vztah mezi průměrnou a maximální kapacitou místností v každé budově.",
            "Jaký je vztah mezi průměrnou a největší kapacitou pokojů v jednotlivých budovách? Ukaž mi bodový graf."
        ],
        "irrelevant_tables": [
            "section",
            "time_slot"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "628": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(DISTINCT T2.id) , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(DISTINCT T2.id) , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name"
        },
        "chart": "Scatter",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(DISTINCT T2.id)",
            "y_name": "count(DISTINCT T3.id)",
            "x_data": [
                [
                    99,
                    106,
                    92,
                    100,
                    108,
                    86,
                    98,
                    95,
                    97,
                    92,
                    119,
                    85,
                    105,
                    96,
                    109,
                    100,
                    85
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    5,
                    2,
                    2,
                    4,
                    4,
                    4,
                    1,
                    1,
                    3,
                    4,
                    2,
                    2,
                    3,
                    2,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Najdi vztah mezi celkovým počtem studentů a celkovým počtem instruktorů v bodovém grafu.",
            "Jaký je vztah mezi celkovým počtem studentů a celkovým počtem instruktorů? Vrať bodový graf."
        ],
        "irrelevant_tables": [
            "takes",
            "prereq"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "659": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = \"F\" GROUP BY LName ORDER BY Age DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM STUDENT WHERE Sex = \"F\" GROUP BY LName ORDER BY Age DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_3",
        "vis_obj": {
            "chart": "bar",
            "x_name": "LName",
            "y_name": "COUNT(LName)",
            "x_data": [
                [
                    "Apap",
                    "Cheng",
                    "Jones",
                    "Kim",
                    "Lee",
                    "Nelson",
                    "Prater",
                    "Schmidt",
                    "Smith"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY LName",
            "sort": null
        },
        "nl_queries": [
            "Zjisti příjmení studentek (pohlaví je F) v sestupném pořadí podle věku a spočítej je pomocí sloupcového grafu",
            "Jaká jsou příjmení studentek seřazená sestupně podle věku? Spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Member_of",
            "Faculty"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "664": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Days , SUM(Credits) FROM COURSE GROUP BY Days ORDER BY Credits",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Days , SUM(Credits) FROM COURSE GROUP BY Days ORDER BY Credits"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_3",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Days",
            "y_name": "SUM(Credits)",
            "x_data": [
                [
                    "Th",
                    "W",
                    "MT",
                    "M",
                    "MTW",
                    "MW",
                    "T",
                    "TTh",
                    "TW",
                    "ThF",
                    "Tu"
                ]
            ],
            "y_data": [
                [
                    17,
                    11,
                    9,
                    18,
                    121,
                    15,
                    9,
                    3,
                    3,
                    22,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Days",
            "sort": null
        },
        "nl_queries": [
            "Najdi dny a součet úvěrů, seskup je podle atributu dny a vizualizuj je pomocí sloupcového grafu.",
            "Uveď mi porovnání součtu úvěrů za dny, seskup je podle atributu dny pomocí sloupcového grafu.",
            "Nakresli sloupcový graf o rozložení dnů a součtu úvěrů, a seskup je podle atributu dny."
        ],
        "irrelevant_tables": [
            "Enrolled_in",
            "Department"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "665": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Days , AVG(Credits) FROM COURSE GROUP BY Days ORDER BY Credits",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Days , AVG(Credits) FROM COURSE GROUP BY Days ORDER BY Credits"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_3",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Days",
            "y_name": "AVG(Credits)",
            "x_data": [
                [
                    "M",
                    "MT",
                    "MTW",
                    "MW",
                    "T",
                    "TTh",
                    "TW",
                    "Th",
                    "ThF",
                    "T",
                    "W"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3.27027027027027,
                    3,
                    3,
                    3,
                    3,
                    2.8333333333333335,
                    2.75,
                    3,
                    2.2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Days",
            "sort": null
        },
        "nl_queries": [
            "Uveď mi srovnání o průměru úvěrů za dny, a seskup je podle atributu dny pomocí sloupcového grafu.",
            "Ukaž mi rozložení dnů a průměr úvěrů, a seskup je podle atributu dny do sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Student",
            "Faculty"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "674": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Credits , DNO FROM COURSE ORDER BY Credits",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Credits , DNO FROM COURSE ORDER BY Credits"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "college_3",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Credits",
            "y_name": "DNO",
            "x_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4
                ]
            ],
            "y_data": [
                [
                    600,
                    600,
                    600,
                    50,
                    550,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    600,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    520,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    50,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    550,
                    520,
                    520,
                    520,
                    50
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi korelaci mezi úvěry a DNO v bodovém grafu."
        ],
        "irrelevant_tables": [
            "Gradeconversion",
            "Faculty"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "676": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.CName , COUNT(T1.CName) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T1.CName T2.CID HAVING COUNT(*) >= 5",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.CName , COUNT(T1.CName) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T1.CName T2.CID HAVING COUNT(*) >= 5"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_3",
        "vis_obj": {
            "chart": "bar",
            "x_name": "CName",
            "y_name": "COUNT(CName)",
            "x_data": [
                [
                    "ALGORITHMS I",
                    "APPLIED STATISTICS AND DATA ANALYSIS",
                    "CIRCUITS",
                    "COMBINATORIAL ANALYSIS",
                    "COMPUTER SYSTEM FUNDAMENTALS",
                    "COMPUTER VISION",
                    "DATA STRUCTURES in JAVA",
                    "DATABASE SYSTEMS",
                    "DISTRIBUTED SYSTEMS",
                    "EXPLORING THE INTERNET",
                    "INTRO TO NATURAL LANGUAGE PROCESSING",
                    "INTRO TO PROGRAMMING IN JAVA",
                    "INTRODUCTION TO PROBABILITY",
                    "MULTIMEDIA COMPUTING",
                    "QUANTITATIVE MEDICAL COMPUTING",
                    "SUPERCOMPUTING"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY CName",
            "sort": null
        },
        "nl_queries": [
            "Jaký je počet názvů jednotlivých kurzů, které mají alespoň pět zápisů? Ukaž mi sloupcový graf.",
            "Uveď číslo každého názvu předmětu s alespoň pěti zapsanými studenty. Vrať sloupcový graf."
        ],
        "irrelevant_tables": [
            "Member_of",
            "Faculty"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "688": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , Assets_billion FROM Companies ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , Assets_billion FROM Companies ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "company_office",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "Assets_billion",
            "x_data": [
                [
                    "AT&T Inc.",
                    "BNP Paribas",
                    "Berkshire Hathaway",
                    "Chevron",
                    "China Construction Bank",
                    "Citigroup",
                    "ExxonMobil",
                    "Gazprom",
                    "General Electric",
                    "HSBC",
                    "Industrial and Commercial Bank of China",
                    "JPMorgan Chase",
                    "PetroChina",
                    "Petrobras",
                    "Royal Dutch Shell",
                    "Santander Group",
                    "Total",
                    "Walmart",
                    "Wells Fargo"
                ]
            ],
            "y_data": [
                [
                    268.5,
                    2680.7,
                    372.2,
                    184.8,
                    1408,
                    1913.9,
                    302.5,
                    275.9,
                    751.2,
                    2467.9,
                    1723.5,
                    2117.6,
                    251.3,
                    313.2,
                    317.2,
                    1570.6,
                    192.8,
                    180.7,
                    1258.1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o tom, jaký je název a majetek jednotlivých společností seřazený vzestupně podle názvu společnosti.",
            "Vrať sloupcový graf s názvem a aktivy jednotlivých společností seřazených vzestupně podle názvu společnosti.",
            "Vypiš název a aktiva každé společnosti ve vzestupném pořadí podle názvu společnosti do sloupcového grafu.",
            "Uveď název a aktiva každé společnosti ve vzestupném pořadí podle názvu společnosti. Vykresli je jako sloupcový graf."
        ],
        "irrelevant_tables": [
            "buildings",
            "Office_locations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "691": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "John Nizinik",
                    "Justin Brown",
                    "Rose White",
                    "Timbaland",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Jak se jmenují zpěváci, kteří vystoupili na koncertě v roce 2014? Spočítej je pomocí koláčového grafu",
            "Vypiš všechna jména zpěváků na koncertech v roce 2014 a spočítej je pomocí koláčového grafu",
            "Koláčový graf o tom, jaký je počet jmen zpěváků, kteří vystoupili na koncertě v roce 2014?"
        ],
        "irrelevant_tables": [
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "693": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM singer GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM singer GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "France",
                    "Netherlands",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet zpěváků v jednotlivých zemích pomocí sloupcového grafu.",
            "Jaký je počet zpěváků v jednotlivých zemích? Zobraz sloupcový graf.",
            "Udělej mi sloupcový graf počtu zemí v každé z nich"
        ],
        "irrelevant_tables": [
            "concert",
            "singer_in_concert"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "697": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM singer ORDER BY age DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM singer ORDER BY age DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Joe Sharp",
                    "John Nizinik",
                    "Rose White",
                    "Timbaland",
                    "Justin Brown",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    52,
                    43,
                    41,
                    32,
                    29,
                    25
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz věk jednotlivých zpěváků ve sloupcovém grafu od nejstaršího po nejmladšího.",
            "Jaký je věk každého zpěváka? Vrať sloupcový graf seřazený sestupně podle věku."
        ],
        "irrelevant_tables": [
            "stadium",
            "concert"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "699": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Timbaland",
                    "Justin Brown",
                    "Rose White",
                    "John Nizinik",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vypiš jména zpěváků a počet koncertů pro každého zpěváka pomocí koláčového grafu.",
            "Zobraz koláčový graf. Jaká jsou jména zpěváků a počet koncertů pro každou osobu?"
        ],
        "irrelevant_tables": [
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "707": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT White , Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT White , Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "county_public_safety",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "White",
            "y_name": "Crime_rate",
            "x_data": [
                [
                    93.1,
                    86.6,
                    83,
                    72.5,
                    83.5,
                    82,
                    84.5,
                    53.5,
                    80.7,
                    86,
                    78.3,
                    84.1,
                    76.1,
                    87.9,
                    61.2,
                    64.3,
                    70.7
                ]
            ],
            "y_data": [
                [
                    118,
                    118,
                    118,
                    123,
                    123,
                    178,
                    178,
                    178,
                    178,
                    178,
                    178,
                    150,
                    150,
                    49,
                    49,
                    174,
                    174
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž procentuální zastoupení bělochů ve městech a míru kriminality v okresech, ve kterých se nacházejí, pomocí bodového grafu.",
            "Ukaž procentuální zastoupení bělochů ve městech a míru kriminality v okresech, ve kterých se nacházejí. Vykresli je jako bodový graf.",
            "Bodový graf o tom, jaké je procento bělochů ve městech a odpovídající míra kriminality v okresech, ke kterým patří?",
            "Jaké je procento bělochů ve městech a odpovídající míra kriminality v okresech, ke kterým patří. Zobraz bodový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "708": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "county_public_safety",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Police_force",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Abbotsford Police Department",
                    "Central Saanich Police",
                    "RCMP"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf. Kolik okresů odpovídá jednotlivým policejním sborům?",
            "Vrať koláčový graf o tom, kolik okresů odpovídá jednotlivým policejním sborům?"
        ],
        "irrelevant_tables": [
            "city"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "712": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "course_teach",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Anne Walker",
                    "Gustaaf Deloor",
                    "Kearsley Brown",
                    "Lucy Wong",
                    "Vicente Carretero"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz jména učitelů a počet kurzů, které vyučují, pomocí koláčového grafu.",
            "Uveď jména učitelů a počet kurzů, které vyučují. Zobraz koláčový graf.",
            "Nakresli koláčový graf o tom, jak se jmenují učitelé a kolik předmětů vyučují?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "714": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "course_teach",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Anne Walker",
                    "Gustaaf Deloor",
                    "Kearsley Brown",
                    "Lucy Wong",
                    "Vicente Carretero"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "V koláčovém grafu zobraz počet kurzů, které každý učitel vyučuje.",
            "Jaký je počet kurzů, které každý učitel vyučuje? Vrať koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "718": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "course_teach",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Anne Walker",
                    "Gustaaf Deloor",
                    "Kearsley Brown",
                    "Lucy Wong",
                    "Vicente Carretero"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "V koláčovém grafu zobraz počet předmětů, které má každý učitel vyučovat.",
            "Jaký je počet kurzů, které každý učitel vyučuje? Vrať koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "722": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "pie",
            "x_name": "role_description",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Editor",
                    "Manager",
                    "Proof Manager",
                    "Photo"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kolik zaměstnanců mají jednotlivé role? Vytvoř koláčový graf."
        ],
        "irrelevant_tables": [
            "Documents_Mailed",
            "Ref_Document_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "743": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    5,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobrazení všech kódů typů šablon a počtu dokumentů používajících jednotlivé typy v koláčovém grafu.",
            "Jaké jsou kódy různých typů šablon a kolik dokumentů používá jednotlivé typy. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Ref_Template_Types",
            "Paragraphs"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "744": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AD",
                    "BK",
                    "PP",
                    "PPT"
                ]
            ],
            "y_data": [
                [
                    3,
                    5,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zobraz všechny kódy typů šablon a počet dokumentů používajících jednotlivé typy.",
            "Zobraz všechny kódy typů šablon a počty dokumentů používající jednotlivé typy. Vizualizace pomocí sloupcového grafu.",
            "Sloupcový graf o tom, jaké jsou kódy různých typů šablon a kolik dokumentů používá jednotlivé typy.",
            "Jaké jsou kódy různých typů šablon a kolik dokumentů používá jednotlivé typy. Vykresli je jako sloupcový graf."
        ],
        "irrelevant_tables": [
            "Paragraphs",
            "Ref_Template_Types"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "747": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Paragraph_Text",
            "y_name": "COUNT(Paragraph_Text)",
            "x_data": [
                [
                    "Korea",
                    "Ukraine"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Paragraph_Text",
            "sort": null
        },
        "nl_queries": [
            "Jaké jsou texty odstavců pro dokument s názvem \"Hodnocení zákazníků“? Spočítej je pomocí koláčového grafu",
            "Zobraz všechny texty odstavců dokumentu \"Hodnocení zákazníků\" a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro počet odstavcových textů pro dokument s názvem \"Recenze zákazníků“."
        ],
        "irrelevant_tables": [
            "Ref_Template_Types",
            "Templates"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "770": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations GROUP BY Date_in_Location_From"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "1972-03-31",
                    "1985-05-13",
                    "1986-10-14",
                    "1997-03-10",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_in_Location_From",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet dokumentů v různých počátečních datech a seskup je podle počátečního data pomocí čárového grafu.",
            "Kolik dokladů v různých počátečních datech? Vrať čárový graf seskupený podle počátečního data.",
            "Vykresli kolik datumů v „lokaci od“ nad datumy v „lokaci od“ v čárovém grafu"
        ],
        "irrelevant_tables": [
            "Ref_Document_Types",
            "Employees"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "778": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date), zip_code FROM weather WHERE max_humidity > 80 GROUP BY date,zip_code",
                "binning": ""
            },
            "VQL": "SELECT date , COUNT(date), zip_code FROM weather WHERE max_humidity > 80 GROUP BY date,zip_code"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    2013,
                    2014,
                    2015
                ]
            ],
            "y_data": [
                [
                    65,
                    259,
                    182
                ],
                [
                    102,
                    310,
                    207
                ],
                [
                    76,
                    285,
                    216
                ],
                [
                    86,
                    243,
                    209
                ],
                [
                    91,
                    289,
                    175
                ]
            ],
            "classify": [
                "94041",
                "94063",
                "94107",
                "94301",
                "95113"
            ],
            "describe": "GROUP BY Location_Code, GROUP BY Date_in_Locaton_To",
            "sort": null
        },
        "nl_queries": [
            "Udělej mi skupinový graf, který ukazuje počet dní s maximální vlhkostí vyšší než 80 v různých oblastech v každém roce."
        ],
        "irrelevant_tables": [
            "trip",
            "status"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "781": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Role_Code , count(*) FROM Employees GROUP BY role_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Role_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ED",
                    "HR",
                    "MG",
                    "PR",
                    "PT"
                ]
            ],
            "y_data": [
                [
                    7,
                    1,
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz všechny kódy rolí a počet zaměstnanců v jednotlivých rolích pomocí koláčového grafu.",
            "Zobraz všechny kódy rolí a počet zaměstnanců v jednotlivých rolích. Zobraz koláčový graf.",
            "Koláčový graf o tom, jaký je kód jednotlivých rolí a počet zaměstnanců v jednotlivých rolích.",
            "Jaký je kód jednotlivých rolí a počet zaměstnanců v jednotlivých rolích. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Ref_Locations",
            "Ref_Document_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "789": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , Day_Number FROM Ref_calendar",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Calendar_Date , Day_Number FROM Ref_calendar"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Calendar_Date",
            "y_name": "Day_Number",
            "x_data": [
                [
                    "1972-03-31",
                    "1976-06-15",
                    "1985-05-13",
                    "1986-10-14",
                    "1987-11-05",
                    "1988-02-01",
                    "1994-11-15",
                    "1995-01-01",
                    "1997-03-10",
                    "2007-05-28",
                    "2008-06-08",
                    "2009-08-18",
                    "2010-11-26",
                    "2012-07-03",
                    "2017-01-06"
                ]
            ],
            "y_data": [
                [
                    5,
                    7,
                    7,
                    1,
                    3,
                    8,
                    9,
                    1,
                    7,
                    2,
                    3,
                    8,
                    7,
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobrazení všech kalendářních dat a čísla dnů v čárovém grafu.",
            "Zobraz všechna data a čísla dnů. Vykresli je jako čárový graf.",
            "Vrať řádek o tom, co jsou všechny kalendářní data a čísla dnů."
        ],
        "irrelevant_tables": [
            "Ref_Document_Types",
            "Roles"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "790": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "b",
                    "c",
                    "e",
                    "n",
                    "x"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    4,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz kódy umístění a počet dokumentů v každém umístění pomocí koláčového grafu.",
            "Zobraz kódy umístění a počet dokumentů v každém umístění. Zobraz koláčový graf.",
            "Koláčový graf o tom, jaký je kód každého umístění a počet dokumentů v daném umístění.",
            "Jaký je kód každého umístění a počet dokumentů v daném umístění. Vizualizace pomocí koláčového grafu.",
            "Udělej mi koláčový graf, který zobrazí celkový počet z různých kódů umístění."
        ],
        "irrelevant_tables": [
            "Documents_to_be_Destroyed",
            "Ref_Locations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "793": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date",
                "binning": "BIN Date_Stored BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Stored , COUNT(Date_Stored) FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date BIN Date_Stored BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Stored",
            "y_name": "COUNT(Date_Stored)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    3,
                    7,
                    0,
                    1,
                    0,
                    0,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Stored BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Kolik dokumentů je uloženo? Rozděl datum skladu podle dnů v týdnu ve sloupcovém grafu.",
            "Vrať sloupcový graf zobrazující počet dokumentů uložených v jednotlivých dnech v týdnu."
        ],
        "irrelevant_tables": [
            "Roles",
            "Ref_Document_Types"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "802": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Budget_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "GV",
                    "ORG",
                    "SF"
                ]
            ],
            "y_data": [
                [
                    6,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz kódy typů rozpočtů a počet dokladů v jednotlivých typech rozpočtů pomocí koláčového grafu.",
            "Zobraz koláčový graf pro různé kódy typů rozpočtů a kolik je pro každý z nich dokladů.",
            "Jaké jsou různé kódy typů rozpočtů a kolik dokumentů pro každý z nich existuje. Zobraz koláčový graf.",
            "Vypočítej celkový počet napříč kódem typu rozpočtu jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Ref_Document_Types",
            "Ref_Budget_Codes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "803": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Budget_Type_Code , count(*) FROM Documents_with_expenses GROUP BY budget_type_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Budget_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "GV",
                    "ORG",
                    "SF"
                ]
            ],
            "y_data": [
                [
                    6,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz kódy typů rozpočtů a počet dokladů v jednotlivých typech rozpočtů pomocí sloupcového grafu.",
            "Zobraz kódy typů rozpočtů a počet dokumentů v každém typu rozpočtu. Zobraz sloupcový graf.",
            "Ukaž mi sloupcový graf, který ukazuje, jaké jsou různé kódy typů rozpočtu a kolik je pro každý z nich dokladů.",
            "Jaké jsou různé kódy typů rozpočtů a kolik dokumentů pro každý z nich existuje. Vykresli je jako sloupcový graf.",
            "Uveď sloupcový graf celkového počtu kódů jednotlivých typů rozpočtu"
        ],
        "irrelevant_tables": [
            "Ref_Document_Types",
            "Ref_Budget_Codes"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "809": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Name , COUNT(Document_Name) FROM Documents GROUP BY Document_Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Name , COUNT(Document_Name) FROM Documents GROUP BY Document_Name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Name",
            "y_name": "COUNT(Document_Name)",
            "x_data": [
                [
                    "Book on USA files",
                    "Chapter on private files",
                    "Deontae files",
                    "Jevon Paper",
                    "Katheryn statement",
                    "King Book",
                    "Noel CV",
                    "Review on Canadian files",
                    "Review on French files",
                    "Review on UK files",
                    "Review on USA files",
                    "Trenton Presentation",
                    "Winona Book"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Document_Name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet dokumentů pro různé názvy dokumentů ve sloupcovém grafu.",
            "Kolik existuje dokumentů pro různé názvy dokumentů? Nakresli sloupcový graf.",
            "Sloupcový graf: osa x název dokumentu osa y počet názvů dokumentů"
        ],
        "irrelevant_tables": [
            "Statements",
            "Accounts"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "812": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Statement_Details , COUNT(Statement_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Statement_Details , COUNT(Statement_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Statement_Details",
            "y_name": "COUNT(Statement_Details)",
            "x_data": [
                [
                    "Open Project",
                    "Private Project"
                ]
            ],
            "y_data": [
                [
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Statement_Details",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet účtů pro různé údaje výpisu ve sloupcovém grafu.",
            "Kolik účtů existuje pro různé údaje výpisu? Nakresli sloupcový graf."
        ],
        "irrelevant_tables": [
            "Ref_Document_Types",
            "Projects"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "815": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Statement_Details , SUM(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Statement_Details , SUM(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Statement_Details",
            "y_name": "SUM(Account_Details)",
            "x_data": [
                [
                    "Open Project",
                    "Private Project"
                ]
            ],
            "y_data": [
                [
                    20316,
                    21335
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Statement_Details",
            "sort": null
        },
        "nl_queries": [
            "Zobraz součet údajů o účtu pro různé údaje výpisu v koláčovém grafu."
        ],
        "irrelevant_tables": [
            "Projects",
            "Ref_Document_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "817": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Statement_Details , AVG(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Statement_Details , AVG(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Statement_Details",
            "y_name": "AVG(Account_Details)",
            "x_data": [
                [
                    "Open Project",
                    "Private Project"
                ]
            ],
            "y_data": [
                [
                    2257.3333333333335,
                    3555.8333333333335
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Statement_Details",
            "sort": null
        },
        "nl_queries": [
            "Zobraz průměr údajů o účtu pro různé údaje výpisu ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Documents_with_Expenses",
            "Ref_Document_Types"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "832": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Budget_Type_Code , COUNT(T1.Budget_Type_Code) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY T1.Budget_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Budget_Type_Code , COUNT(T1.Budget_Type_Code) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY T1.Budget_Type_Code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Budget_Type_Code",
            "y_name": "COUNT(Budget_Type_Code)",
            "x_data": [
                [
                    "GV",
                    "ORG",
                    "SF"
                ]
            ],
            "y_data": [
                [
                    6,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Budget_Type_Code",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet dokladů pro různé kódy typu rozpočtu ve sloupcovém grafu.",
            "Vrať sloupcový graf, který zobrazí počet dokladů pro různé kódy typu rozpočtu."
        ],
        "irrelevant_tables": [
            "Ref_Document_Types",
            "Statements"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "834": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.Budget_Type_Code , COUNT(T1.Budget_Type_Code) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY T1.Budget_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.Budget_Type_Code , COUNT(T1.Budget_Type_Code) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY T1.Budget_Type_Code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Budget_Type_Code",
            "y_name": "COUNT(Budget_Type_Code)",
            "x_data": [
                [
                    "GV",
                    "ORG",
                    "SF"
                ]
            ],
            "y_data": [
                [
                    6,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Budget_Type_Code",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet dokladů pro různé kódy typu rozpočtu v koláčovém grafu.",
            "Vrať koláčový graf, který zobrazí počet dokladů pro různé kódy typu rozpočtu."
        ],
        "irrelevant_tables": [
            "Accounts",
            "Statements"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "838": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Budget_Type_Description , COUNT(Budget_Type_Description) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY Budget_Type_Description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Budget_Type_Description , COUNT(Budget_Type_Description) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY Budget_Type_Description"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Budget_Type_Description",
            "y_name": "COUNT(Budget_Type_Description)",
            "x_data": [
                [
                    "Government",
                    "Organisation",
                    "Self founded"
                ]
            ],
            "y_data": [
                [
                    6,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Budget_Type_Description",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet dokladů pro různé typy popisu rozpočtu v koláčovém grafu.",
            "Vrať koláčový graf, který zobrazí počet dokladů pro různé typy popisu rozpočtu."
        ],
        "irrelevant_tables": [
            "Accounts",
            "Projects"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "856": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Store_Name , COUNT(Store_Name) FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = \"stop\" GROUP BY Store_Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Store_Name , COUNT(Store_Name) FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = \"stop\" GROUP BY Store_Name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Store_Name",
            "y_name": "COUNT(Store_Name)",
            "x_data": [
                [
                    "Bednar Film",
                    "Kling Workshop",
                    "Queen Art",
                    "Warino Photo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Store_Name",
            "sort": null
        },
        "nl_queries": [
            "Které skupiny workshopů mají rezervace se stavovým kódem \"stop\"? Vypiš mi jména a spočítej je do koláčového grafu"
        ],
        "irrelevant_tables": [
            "Clients",
            "Performers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "858": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Product_Name",
            "y_name": "avg(Product_Price)",
            "x_data": [
                [
                    "dinning",
                    "film",
                    "photo"
                ]
            ],
            "y_data": [
                [
                    238704.33333333328,
                    11385515.333333336,
                    5102691.666666667
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U každého odlišného názvu výrobku uveď jeho průměrnou cenu. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Customers",
            "Ref_Payment_Methods"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "868": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000 GROUP BY Order_Date",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Order_Date , COUNT(Order_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000 GROUP BY Order_Date"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "line",
            "x_name": "Order_Date",
            "y_name": "COUNT(Order_Date)",
            "x_data": [
                [
                    "1981-06-20",
                    "1985-05-29",
                    "1988-11-13",
                    "1994-08-03",
                    "1998-03-10",
                    "1999-11-20",
                    "2000-07-03",
                    "2008-04-02",
                    "2011-01-05",
                    "2014-07-10"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Order_Date",
            "sort": null
        },
        "nl_queries": [
            "Zjisti data objednávek s cenou nad 21 750 a spočítej je pomocí čárového grafu",
            "Jaká jsou data objednávek s cenou vyšší než 21 750 a spočítej je pomocí čárového grafu",
            "Čárový graf pro zjištění počtu dat objednávek s cenou nad 21 750.",
            "Čárový graf o tom, jaký je počet dat objednávek s cenou vyšší než 21 750?"
        ],
        "irrelevant_tables": [
            "Performers",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "874": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Service_Type_Description , COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Service_Type_Description , COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Service_Type_Description",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "provide photo service",
                    "provide dinning service",
                    "provide filming service",
                    "provide adv promoting service"
                ]
            ],
            "y_data": [
                [
                    5,
                    5,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kolik služeb pro každý typ služby popisuje? Na zobrazení použij koláčový graf.",
            "Zobraz počet služeb pro každý typ popisu služby pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Clients",
            "Drama_Workshop_Groups"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "875": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Service_Type_Description , COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Service_Type_Description , COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Service_Type_Description",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "provide photo service",
                    "provide dinning service",
                    "provide filming service",
                    "provide adv promoting service"
                ]
            ],
            "y_data": [
                [
                    5,
                    5,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kolik služeb pro každý typ služby popisuje? Použij k tomu sloupcový graf.",
            "Zobraz počet služeb pro každý typ popisu služby pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Addresses",
            "Marketing_Regions"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "880": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1 GROUP BY Actual_Delivery_Date",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1 GROUP BY Actual_Delivery_Date"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "line",
            "x_name": "Actual_Delivery_Date",
            "y_name": "COUNT(Actual_Delivery_Date)",
            "x_data": [
                [
                    "1990-11-14",
                    "1992-07-21",
                    "1993-09-16",
                    "1998-08-22",
                    "2004-03-27",
                    "2011-04-13",
                    "2015-06-20"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Actual_Delivery_Date",
            "sort": null
        },
        "nl_queries": [
            "Čárový graf o tom, jaký je počet skutečných termínů dodání objednávek s množstvím 1.",
            "Jaké jsou skutečné termíny dodání objednávek s množstvím 1? Spočítej je pomocí čárového grafu",
            "Řádkový graf pro výpis počtu skutečných termínů dodání pro všechny objednávky s množstvím 1"
        ],
        "irrelevant_tables": [
            "Performers",
            "Ref_Service_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "883": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Service_Type_Description",
            "y_name": "COUNT(Service_Type_Description)",
            "x_data": [
                [
                    "provide adv promoting service",
                    "provide dinning service",
                    "provide filming service",
                    "provide photo service"
                ]
            ],
            "y_data": [
                [
                    2,
                    5,
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Service_Type_Description",
            "sort": null
        },
        "nl_queries": [
            "Uveď popisy typů služeb, které stojí více než 2 175, a spočítej je pomocí koláčového grafu",
            "Koláčový graf o tom, kolik je popisů typů služeb s cenou produktu nad 2 175.",
            "Koláčový graf, který mi poskytne počet popisů typů služeb, které stojí více než 2 175.",
            "Jaké jsou popisy typů služeb s cenou produktu nad 2 175 a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "Drama_Workshop_Groups",
            "Stores"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "887": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT How_to_Get_There , COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "cre_Theme_park",
        "vis_obj": {
            "chart": "pie",
            "x_name": "How_to_Get_There",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "bus",
                    "shuttle",
                    "walk"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "V koláčovém grafu zobraz různé způsoby, jak se k atrakcím dostat, a počet atrakcí, které lze příslušným způsobem navštívit.",
            "Vypiš všechny možné způsoby, jak se dostat k památkám, spolu s počtem památek, které jsou těmito způsoby dostupné, pomocí koláčového grafu.",
            "Vypiš všechny možné způsoby, jak se dostat k památkám, a počet památek, které jsou těmito způsoby dostupné. Zobraz koláčový graf.",
            "Vypočítej celkový počet napříč všemi způsoby, jak se k nim dostat, jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Museums",
            "Hotels"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "906": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Category , count(*) FROM book_club GROUP BY category",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Category , count(*) FROM book_club GROUP BY category"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "culture_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Category",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Gay M/SF",
                    "Gay SF/F",
                    "Lesb. M/SF"
                ]
            ],
            "y_data": [
                [
                    5,
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz všechny kategorie knih a počet knih v každé kategorii v koláčovém grafu.",
            "Zobraz všechny kategorie knih a počet knih v každé kategorii. Vykresli je jako koláčový graf.",
            "Vrať koláčový graf o tom, kolik knih spadá do jednotlivých kategorií?",
            "Koláčovýn graf o tom, kolik knih spadá do každé kategorie?",
            "Vytvoř koláčový graf zobrazující celkový počet v jednotlivých kategoriích."
        ],
        "irrelevant_tables": [
            "movie",
            "culture_company"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "908": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_category_code",
            "y_name": "avg(product_price)",
            "x_data": [
                [
                    "Book",
                    "Food",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    35,
                    2.88,
                    66.67
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať koláčový graf o tom, jaká je průměrná cena výrobků v jednotlivých kategoriích?",
            "Vizualizuj koláčový graf s průměrnou cenou produktů v jednotlivých kategoriích?",
            "Jaká je průměrná cena výrobků v jednotlivých kategoriích? Ukaž koláčový graf.",
            "Vrátí průměrnou cenu produktů s jednotlivými kódy kategorií v koláčovém grafu.",
            "Koláčový graf průměrné ceny produktů, které mají vlastní kódy kategorií."
        ],
        "irrelevant_tables": [
            "Complaints",
            "Staff"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "910": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Chocolate",
                    "Keyboard",
                    "Mouse",
                    "The Great Gatsby"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "V koláčovém grafu uveď názvy všech výrobků spolu s počtem stížností, které obdržely.",
            "Uveď názvy všech výrobků a počet stížností, které obdržely. Zobraz koláčový graf.",
            "Vrať koláčový graf, jaké jsou všechny různé názvy výrobků a kolik stížností každý z nich obdržel?",
            "Zobraz koláčový graf, který ukazuje, jaké jsou názvy všech různých produktů a kolik stížností každý z nich obdržel?"
        ],
        "irrelevant_tables": [
            "Customers",
            "Staff"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "912": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customer_deliveries",
        "vis_obj": {
            "chart": "bar",
            "x_name": "state_province_county",
            "y_name": "count(*)",
            "x_data": [
                [
                    "California",
                    "Colorado",
                    "Idaho",
                    "Illinois",
                    "Maine",
                    "Michigan",
                    "Nebraska",
                    "Tennessee",
                    "Wyoming"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vypiš názvy států a počet zákazníků žijících v jednotlivých státech pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Employees",
            "Order_Deliveries"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "914": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_name , COUNT(customer_name) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_name , COUNT(customer_name) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\" GROUP BY customer_name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_name",
            "y_name": "COUNT(customer_name)",
            "x_data": [
                [
                    "Clifford Pagac",
                    "Kitty Padberg III",
                    "Prof. Alexzander Hamill",
                    "Prof. Reyes Berge II"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_name",
            "sort": null
        },
        "nl_queries": [
            "Vrať sloupcový graf zobrazující počet objednávek se stavem \"Dodáno\" pro každé jméno zákazníka.",
            "Jaký je počet objednávek, které mají u každého jména zákazníka stav \"Dodáno\"? Vizualizuj ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Addresses",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "924": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20",
                "binning": "BIN date_became_customer BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_became_customer , COUNT(date_became_customer) FROM customers WHERE customer_id BETWEEN 10 AND 20 BIN date_became_customer BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_became_customer",
            "y_name": "COUNT(date_became_customer)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    3,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_became_customer BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Kolik zákazníků s id mezi 10 a 20 se stalo zákazníky v jednom dni v týdnu? Zobraz pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Addresses",
            "Customer_Contact_Channels"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "926": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_account_details , COUNT(other_account_details) FROM Accounts GROUP BY other_account_details"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_account_details",
            "y_name": "COUNT(other_account_details)",
            "x_data": [
                [
                    "Regular",
                    "VIP"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_account_details",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet účtů ve sloupcovém grafu, který se seskupuje podle dalších údajů o účtu.",
            "Kolik existuje účtů pro různé údaje o účtu? Nakresli sloupcový graf.",
            "Sloupcový graf: osa x - ostatní údaje o účtu, osa y - kolik ostatních údajů o účtu"
        ],
        "irrelevant_tables": [
            "Product_Categories",
            "Invoice_Line_Items"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "961": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "sum(T1.product_quantity)",
            "x_data": [
                [
                    "Arts",
                    "Beer Menus",
                    "Chocolate",
                    "Fans",
                    "Hard Drive",
                    "Harry Potter 2",
                    "Harry Potter 3",
                    "Harry Potter 4",
                    "Learning English",
                    "TV"
                ]
            ],
            "y_data": [
                [
                    5,
                    2,
                    1,
                    9,
                    10,
                    8,
                    15,
                    3,
                    5,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz všechny názvy produktů a celkové objednané množství pro každý název produktu ve sloupcovém grafu.",
            "Nakresli sloupcový graf, jak se jmenují jednotlivé výrobky a jaký je součet objednaného množství pro každý výrobek?",
            "Sloupcový graf o tom, jaké jsou názvy jednotlivých produktů a jaký je součet objednaného množství pro každý produkt?",
            "Jaké jsou názvy jednotlivých produktů a jaký je součet objednaného množství pro každý produkt. Vizualizace pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Orders",
            "Product_Categories"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "971": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT transaction_type , sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "pie",
            "x_name": "transaction_type",
            "y_name": "sum(transaction_amount)",
            "x_data": [
                [
                    "Payment",
                    "Refund"
                ]
            ],
            "y_data": [
                [
                    8743.15,
                    11192.69
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz typy transakcí a celkové částky transakcí pomocí koláčového grafu.",
            "Jaké jsou celkové částky transakcí pro jednotlivé typy transakcí? Zobraz koláčový graf.",
            "Vytvoř koláčový graf zobrazující celkový počet transakcí v jednotlivých typech transakcí."
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "975": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan' BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    2,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet účtů pro všechny účty zákazníka s křestním jménem \"Meaghan\" otevřené v jednotlivých dnech. Rozděl den otevření účtu podle dnů v týdnu ve sloupcovém grafu.",
            "Kolik účtů si každý den otevře zákazník s křestním jménem \"Meaghan\" u všech účtů? Rozděl den otevření účtu podle dnů v týdnu ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Invoices",
            "Orders"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "990": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_last_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_last_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Schaefer",
                    "Leuschke",
                    "Keeling",
                    "Ruecker",
                    "Muller",
                    "Auer",
                    "Boyle"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4,
                    1,
                    1,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet účtů pro každého zákazníka ve sloupcovém grafu seskupeném podle příjmení zákazníka.",
            "Kolik existuje účtů pro každého zákazníka? Zobraz sloupcový graf, který se seskupuje podle příjmení zákazníka."
        ],
        "irrelevant_tables": [
            "Orders",
            "Invoices"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "994": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id",
                "binning": "BIN date_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id BIN date_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    5,
                    0,
                    2,
                    3,
                    6,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet historie adres zákazníků v jednotlivých dnech a rozděl „date from“ jednotlivých dnů v týdnu pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "998": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY date_to",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_to , COUNT(date_to) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY date_to"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "2018-02-25",
                    "2018-02-27",
                    "2018-03-07",
                    "2018-03-08",
                    "2018-03-09",
                    "2018-03-10",
                    "2018-03-11",
                    "2018-03-13",
                    "2018-03-14",
                    "2018-03-16",
                    "2018-03-18",
                    "2018-03-19",
                    "2018-03-20",
                    "2018-03-22",
                    "2018-03-24"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    1,
                    2,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_to",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet adres zákazníků v jednotlivých dnech a seskup je podle data do čárového grafu."
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Contacts"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "999": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "Sony",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz podíl názvu výrobku pro každý výrobek pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "Customer_Orders",
            "Customer_Address_History"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1001": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "SUM(T2.order_quantity)",
            "x_data": [
                [
                    "Apple",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    23,
                    21,
                    40
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz název produktu a celkového objednaného množství pro každý produkt ve sloupcovém grafu.",
            "Zobraz název produktu a celkové objednané množství pro každý produkt. Vykresli je jako sloupcový graf."
        ],
        "irrelevant_tables": [
            "Contacts",
            "Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1003": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.product_name , SUM(sum(T2.order_quantity)) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_name",
            "y_name": "SUM(T2.order_quantity)",
            "x_data": [
                [
                    "Apple",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    23,
                    21,
                    40
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz název produktu a celkové objednané množství pro každý produkt pomocí koláčového grafu.",
            "Zobraz název produktu a celkové objednané množství pro každý produkt. Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Customer_Orders",
            "Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1007": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_type_code",
            "y_name": "COUNT(product_type_code)",
            "x_data": [
                [
                    "Clothes",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet produktů s cenou vyšší než 1000 nebo nižší než 500 pro každý kód typu produktu v koláčovém grafu."
        ],
        "irrelevant_tables": [
            "Customers",
            "Customer_Orders"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1008": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "Sony",
                    "gucci",
                    "jcrew"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet produktů s cenou vyšší než 21 750 Kč nebo nižší než 10 875 pro každý název produktu v koláčovém grafu."
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1012": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT premises_type , count(*) FROM premises GROUP BY premises_type",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT premises_type , count(*) FROM premises GROUP BY premises_type"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customers_campaigns_ecommerce",
        "vis_obj": {
            "chart": "bar",
            "x_name": "premises_type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Office",
                    "Residence",
                    "Warehouse"
                ]
            ],
            "y_data": [
                [
                    7,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz jednotlivé typy prostor a počet prostor v daném typu pomocí sloupcového grafu.",
            "Uveď jednotlivé typy provozoven a počet provozoven daného typu. Vizualizace pomocí sloupcového grafu.",
            "Vytvoř sloupcový graf zobrazujícího celkový počet v jednotlivých typech provozoven"
        ],
        "irrelevant_tables": [
            "Customer_Addresses",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1014": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_campaigns_ecommerce",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_category",
            "y_name": "count(*)",
            "x_data": [
                [
                    "clothes",
                    "food"
                ]
            ],
            "y_data": [
                [
                    9,
                    11
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "V koláčovém grafu zobraz všechny kategorie produktů spolu s počtem e-mailových zásilek v každé kategorii.",
            "Nakresli koláčový graf se všemi jednotlivými kategoriemi produktů spolu s počtem e-mailových zásilek v každé kategorii."
        ],
        "irrelevant_tables": [
            "Customer_Orders",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1018": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT premises_type , COUNT(premises_type) FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id GROUP BY premises_type",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT premises_type , COUNT(premises_type) FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id GROUP BY premises_type"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "customers_campaigns_ecommerce",
        "vis_obj": {
            "chart": "pie",
            "x_name": "premises_type",
            "y_name": "COUNT(premises_type)",
            "x_data": [
                [
                    "Office",
                    "Residence",
                    "Warehouse"
                ]
            ],
            "y_data": [
                [
                    6,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY premises_type",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf zobrazující počet adres zákazníků v jednotlivých typech prostor."
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Mailshot_Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1021": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_campaigns_ecommerce",
        "vis_obj": {
            "chart": "pie",
            "x_name": "outcome_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "No Response",
                    "Order"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz kód výsledku mailshotů spolu s počtem mailshotů v každém kódu výsledku pomocí koláčového grafu.",
            "Vytvoř koláčový graf zobrazující celkový počet napříč kódy výsledků."
        ],
        "irrelevant_tables": [
            "Mailshot_Campaigns",
            "Customer_Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1024": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT premises_type , COUNT(premises_type) FROM premises GROUP BY premises_type ORDER BY premises_type",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT premises_type , COUNT(premises_type) FROM premises GROUP BY premises_type ORDER BY premises_type"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_campaigns_ecommerce",
        "vis_obj": {
            "chart": "bar",
            "x_name": "premises_type",
            "y_name": "COUNT(premises_type)",
            "x_data": [
                [
                    "Office",
                    "Residence",
                    "Warehouse"
                ]
            ],
            "y_data": [
                [
                    7,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY premises_type",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet provozoven pro různé typy provozoven ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Customer_Addresses",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1037": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_last_name , COUNT(customer_last_name) FROM Customers GROUP BY customer_last_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "customers_card_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_last_name",
            "y_name": "COUNT(customer_last_name)",
            "x_data": [
                [
                    "Brekke",
                    "Davis",
                    "Effertz",
                    "Erdman",
                    "Farrell",
                    "Feest",
                    "Huels",
                    "Langworth",
                    "Lind",
                    "Rath",
                    "Schinner",
                    "Swift",
                    "Turcotte",
                    "Wiza"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY customer_last_name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet zákazníků s různými příjmeními zákazníků ve sloupcovém grafu.",
            "Kolik existuje zákazníků s různým příjmením zákazníka? Nakresli sloupcový graf.",
            "Sloupcový graf: osa x - příjmení zákazníka, osa y - kolik příjmení mají zákazníci"
        ],
        "irrelevant_tables": [
            "Customers_Cards",
            "Financial_Transactions"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1059": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "customers_card_transactions",
        "vis_obj": {
            "chart": "pie",
            "x_name": "card_type_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Credit",
                    "Debit"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz kódy typů karet a počet transakcí v koláčovém grafu.",
            "Zobraz kódy typů karet a počet transakcí. Vizualizace pomocí koláčového grafu.",
            "Ukaž mi koláčový graf o tom, jaké jsou různé typy karet a kolik transakcí bylo provedeno s každou z nich.",
            "Jaké jsou různé typy karet a kolik transakcí bylo provedeno s každou z nich. Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "Accounts"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1061": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT card_type_code , count(*) FROM Customers_cards GROUP BY card_type_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "customers_card_transactions",
        "vis_obj": {
            "chart": "pie",
            "x_name": "card_type_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Credit",
                    "Debit"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz všechny kódy typů karet a počet karet jednotlivých typů v koláčovém grafu.",
            "Vizualizuj koláčový graf s různými typy karet a s počtem karet od každého z nich",
            "Koláčový graf o tom, jaké jsou různé typy karet a kolik karet každého typu existuje.",
            "Jaké jsou různé typy karet a kolik karet každého typu existuje? Zobraz koláčový graf.",
            "Udělej mi koláčový graf, který zobrazí celkový počet z různých kódů typu karty."
        ],
        "irrelevant_tables": [
            "Financial_Transactions",
            "Accounts"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1071": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue ORDER BY Num_of_Audience ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue ORDER BY Num_of_Audience ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "debate",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Abu Dhabi , UAE",
                    "Doha , Qatar",
                    "Dubai , UAE",
                    "Manama , Bahrain"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue",
            "sort": null
        },
        "nl_queries": [
            "Vypiš místa konání debat vzestupně podle počtu diváků a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "debate_people",
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1072": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Negative = T3.People_ID GROUP BY Venue ORDER BY T3.Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Negative = T3.People_ID GROUP BY Venue ORDER BY T3.Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "debate",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Abu Dhabi , UAE",
                    "Dubai , UAE",
                    "Manama , Bahrain"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet debat v jednotlivých místech konání pro ty, kteří jsou na negativní straně, seřazený vzestupně podle abecedy jména."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1073": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Negative = T3.People_ID GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Negative = T3.People_ID GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "debate",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Charles Van Wyck",
                    "George Briggs",
                    "Horace F. Clark",
                    "John Cochrane"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet debat pro každou osobu na záporné straně v koláčovém grafu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1074": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Negative = T3.People_ID GROUP BY Name ORDER BY T3.Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Negative = T3.People_ID GROUP BY Name ORDER BY T3.Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "debate",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Charles Van Wyck",
                    "George Briggs",
                    "Horace F. Clark",
                    "John Cochrane"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet debat pro každou osobu na záporné straně ve sloupcovém grafu, seřazeném vzestupně podle abecedy jména."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1079": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "debate",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "James Humphrey",
                    "Luther C. Carter",
                    "Thomas J. Barr",
                    "William B. Maclay"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet debat pro každou osobu na straně souhlasu v koláčovém grafu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1081": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID GROUP BY Venue",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Venue , COUNT(Venue) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID GROUP BY Venue"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "debate",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Abu Dhabi , UAE",
                    "Dubai , UAE",
                    "Manama , Bahrain"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf znázorňující počet debat na jednotlivých místech pro ty, kteří jsou na kladné straně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1082": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "debate",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "James Humphrey",
                    "Luther C. Carter",
                    "Thomas J. Barr",
                    "William B. Maclay"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz jména lidí a počet případů, kdy byli na kladné straně debat, pomocí koláčového grafu.",
            "Ukaž jména lidí a počet případů, kdy stáli na kladné straně v debatách. Zobraz koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1088": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.Name , COUNT(T1.Name) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY T1.Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "B.C. School",
                    "Calgary School",
                    "Edmonton School",
                    "Saskatchewan School",
                    "Toronto School"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Vrať koláčový graf ukazující, kolik členů navštívilo jednotlivé koleje."
        ],
        "irrelevant_tables": [
            "round"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1090": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM member GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(*) FROM member GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz jednotlivé země a počet členů z každé z nich pomocí koláčového grafu.",
            "Vizualizuj koláčový graf různých zemí a počtu členů z každé z nich."
        ],
        "irrelevant_tables": [
            "round",
            "college"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1104": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , SUM(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , SUM(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "department_management",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "SUM(Num_Employees)",
            "x_data": [
                [
                    "Homeland Security",
                    "Treasury"
                ]
            ],
            "y_data": [
                [
                    208000,
                    115897
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz název a počet zaměstnanců oddělení řízených vedoucími, jejichž dočasně působící hodnota je \"Ano\", pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "head"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1113": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , age FROM head ORDER BY age",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , age FROM head ORDER BY age"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "department_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "age",
            "x_data": [
                [
                    "P\u00e1draig Harrington",
                    "Stewart Cink",
                    "Dudley Hart",
                    "Jeff Maggert",
                    "Nick Faldo",
                    "Tiger Woods",
                    "Franklin Langham",
                    "Sergio Garc\u00eda",
                    "K. J. Choi",
                    "Billy Mayfair"
                ]
            ],
            "y_data": [
                [
                    43,
                    50,
                    52,
                    53,
                    56,
                    67,
                    67,
                    68,
                    69,
                    69
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš věk jednotlivých vedoucích oddělení do sloupcového grafu seřazeného vzestupně podle věku."
        ],
        "irrelevant_tables": [
            "department",
            "management"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1129": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , max(product_price) FROM products GROUP BY product_type_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "department_store",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "max(product_price)",
            "x_data": [
                [
                    "Clothes",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    939.57,
                    971.44
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Jaká je nejvyšší cena výrobku seskupeného podle typu výrobku? Zobraz sloupcový graf.",
            "Uveď maximální cenu výrobku pro každý typ výrobku ve sloupcovém grafu.",
            "Sloupcový graf: osa x - kód typu výrobku, osa y - maximální cena výrobku"
        ],
        "irrelevant_tables": [
            "Staff_Department_Assignments",
            "Customer_Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1130": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , min(product_price) FROM products GROUP BY product_type_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , min(product_price) FROM products GROUP BY product_type_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "department_store",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "min(product_price)",
            "x_data": [
                [
                    "Clothes",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    408.82,
                    612.46
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Jaká je nejnižší cena výrobku seskupeného podle typu výrobku? Zobraz sloupcový graf.",
            "Uveď minimální cenu výrobku pro každý typ výrobku ve sloupcovém grafu.",
            "Nakresli sloupcový graf závislosti kódu typu výrobku na minimální ceně výrobku"
        ],
        "irrelevant_tables": [
            "Addresses",
            "Staff_Department_Assignments"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1133": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT max(product_price) , min(product_price) FROM products GROUP BY product_type_code",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT max(product_price) , min(product_price) FROM products GROUP BY product_type_code"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "department_store",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "max(product_price)",
            "y_name": "min(product_price)",
            "x_data": [
                [
                    939.57
                ],
                [
                    971.44
                ]
            ],
            "y_data": [
                [
                    408.82
                ],
                [
                    612.46
                ]
            ],
            "classify": [
                "Clothes",
                "Hardware"
            ],
            "describe": "GROUP BY product_type_code",
            "sort": null
        },
        "nl_queries": [
            "Zobraz vztah mezi minimální cenou produktu a maximální cenou produktu a seskup je podle kódu typu produktu do skupiny do bodového grafu.",
            "Zobraz maximální cena produktu vs minimální cena produktu jako bodový graf. Použij jinou barvu pro každý kód product_type_code"
        ],
        "irrelevant_tables": [
            "Customer_Orders",
            "Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "1152": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_code , count(*) FROM users GROUP BY role_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_code , count(*) FROM users GROUP BY role_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "document_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "DBA",
                    "PROJ-MGR"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet uživatelů v jednotlivých rolích. Vykresli je jako sloupcový graf.",
            "Jaké jsou různé kódy rolí uživatelů a kolik uživatelů je má. Zobraz sloupcový graf.",
            "Sloupcový graf pro zobrazení celkového počtu z různých kódů rolí",
            "Vrať histogram o tom, jaké jsou různé kódy rolí uživatelů a kolik uživatelů je má?"
        ],
        "irrelevant_tables": [
            "Document_Sections_Images",
            "Document_Functional_Areas"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1153": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT document_name , access_count FROM documents ORDER BY document_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT document_name , access_count FROM documents ORDER BY document_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "document_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "document_name",
            "y_name": "access_count",
            "x_data": [
                [
                    "David CV",
                    "Fall Sails",
                    "How to cook pasta",
                    "Humanity: a fact",
                    "Joe CV",
                    "John CV",
                    "Learning Database",
                    "Learning English",
                    "Learning Japanese",
                    "Life about Claude Monet",
                    "Relationships between History and Arts",
                    "Research about Art history",
                    "Spring Sails",
                    "Summer Sails",
                    "Winter Sails"
                ]
            ],
            "y_data": [
                [
                    6345,
                    7509,
                    2045,
                    3479,
                    2294,
                    5924,
                    3769,
                    1864,
                    2910,
                    1219,
                    9948,
                    8208,
                    3289,
                    6661,
                    8623
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vyhledej název a počet přístupů ke všem dokumentům v abecedním pořadí podle názvu dokumentu. Zobraz sloupcový graf.",
            "Vrať sloupcový graf s názvy všech dokumentů a počty přístupů k nim, seřazené podle abecedy.",
            "Udělej mi histogram názvů všech dokumentů a počty přístupů k nim, seřazené podle abecedy."
        ],
        "irrelevant_tables": [
            "Images",
            "Roles"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1172": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT age , weight FROM Dogs WHERE abandoned_yn = 1 GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT age , weight FROM Dogs WHERE abandoned_yn = 1 GROUP BY name"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "age",
            "y_name": "weight",
            "x_data": [
                [
                    1
                ],
                [
                    6
                ],
                [
                    4
                ]
            ],
            "y_data": [
                [
                    4.01
                ],
                [
                    7.57
                ],
                [
                    4.36
                ]
            ],
            "classify": [
                "Evangeline",
                "Kacey",
                "Lyric"
            ],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Ukaž vztah mezi věkem a hmotností opuštěných psů ve skupinovém bodovém grafu, který se seskupuje podle jména psa.",
            "Jaký je vztah mezi věkem a hmotností opuštěných psů? Vrať skupinový bodový graf, který se seskupí podle jména psa."
        ],
        "irrelevant_tables": [
            "Charges",
            "Sizes"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1182": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs GROUP BY date_departed"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed",
            "sort": null
        },
        "nl_queries": [
            "Kolik psů odešlo za den? Vizualizuj pomocí sloupcového grafu, který se seskupuje podle data odchodu.",
            "Vypiš počet psů, kteří odešli v jednotlivých dnech, pomocí sloupcového grafu, který je seskupen podle data odjezdu."
        ],
        "irrelevant_tables": [
            "Breeds",
            "Charges"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1187": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
                "binning": "BIN date_arrived BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id BIN date_arrived BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    8,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Kolik psů, kteří prošli léčbou, přišlo v každém roce? Vrať sloupcový graf, který rozdělí příchozí datum podle ročního intervalu.",
            "Zobraz počet psů, kteří byli ošetřeni v jednotlivých letech, ve sloupcovém grafu, který rozděluje data příjezdu podle ročních intervalů."
        ],
        "irrelevant_tables": [
            "Breeds",
            "Treatment_Types"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1188": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_departed"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_departed",
            "sort": null
        },
        "nl_queries": [
            "Kolik psů, kteří prošli léčbou, odešlo za den? Vrať sloupcový graf.",
            "Zobraz ve sloupcovém grafu počet psů, kteří byli ošetřeni v jednotlivých dnech."
        ],
        "irrelevant_tables": [
            "Professionals",
            "Charges"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1192": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY date_arrived"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017-04-20",
                    "2017-05-06",
                    "2017-06-18",
                    "2017-09-08",
                    "2017-10-24",
                    "2017-12-22",
                    "2017-12-29",
                    "2018-01-02"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    1,
                    1,
                    2,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_arrived",
            "sort": null
        },
        "nl_queries": [
            "Kolik psů, kteří prošli léčbou, přišlo každý den? Vrať čárový graf, který se seskupí podle data příchodu.",
            "Zobraz počet psů, kteří byli ošetřeni v jednotlivých dnech, v čárovém grafu, který je seskupen podle data příjezdu."
        ],
        "irrelevant_tables": [
            "Owners",
            "Charges"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1198": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "pie",
            "x_name": "treatment_type_description",
            "y_name": "SUM(cost_of_treatment)",
            "x_data": [
                [
                    "Physical examination",
                    "Take for a Walk",
                    "Vaccination"
                ]
            ],
            "y_data": [
                [
                    2429,
                    2392,
                    2540
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description",
            "sort": null
        },
        "nl_queries": [
            "Uveď náklady na každé ošetření a odpovídající popis typu ošetření s koláčovým grafem.",
            "Uveď náklady na každé ošetření a odpovídající popis typu ošetření. Vizualizace pomocí koláčového grafu.",
            "Ukaž mi koláčový graf pro popis nákladů a typ léčby u každého ošetření."
        ],
        "irrelevant_tables": [
            "Owners",
            "Breeds"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1204": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY last_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "DuBuque",
                    "Feil",
                    "Fisher",
                    "Funk",
                    "Haley",
                    "Mertz",
                    "Nicolas",
                    "Price",
                    "Prohaska",
                    "Rippin",
                    "Schmitt",
                    "Stoltenberg"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY last_name",
            "sort": null
        },
        "nl_queries": [
            "Vypiš počet psů, které má každý majitel, do sloupcového grafu seskupeného podle příjmení majitele.",
            "Kolik psů má každý majitel? Vrať sloupcový graf seskupený podle příjmení vlastníka."
        ],
        "irrelevant_tables": [
            "Charges",
            "Breeds"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1211": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "gender",
            "y_name": "sum(student_capacity)",
            "x_data": [
                [
                    "F",
                    "M",
                    "X"
                ]
            ],
            "y_data": [
                [
                    128,
                    116,
                    1136
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti ve sloupcovém grafu celkovou kapacitu kolejí pro každé pohlaví.",
            "Jaká je celková kapacita kolejí pro obě pohlaví? Udělej mi sloupcový graf.",
            "Vytvoř sloupcový graf zobrazující celkovou kapacitu studentů podle pohlaví"
        ],
        "irrelevant_tables": [
            "Lives_in",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1213": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT gender , sum(student_capacity) FROM dorm GROUP BY gender"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "gender",
            "y_name": "sum(student_capacity)",
            "x_data": [
                [
                    "F",
                    "M",
                    "X"
                ]
            ],
            "y_data": [
                [
                    128,
                    116,
                    1136
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti celkovou kapacitu kolejí pro každé pohlaví pomocí koláčového grafu.",
            "Jaká je celková kapacita kolejí pro obě pohlaví? Ukaž mi koláčový graf.",
            "Vypočítej celkovou kapacitu studentů podle pohlaví do koláčového grafu."
        ],
        "irrelevant_tables": [
            "Lives_in",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1214": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , sum(student_capacity) FROM dorm GROUP BY gender",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , sum(student_capacity) FROM dorm GROUP BY gender"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "sum(student_capacity)",
            "x_data": [
                [
                    1
                ],
                [
                    1
                ],
                [
                    5
                ]
            ],
            "y_data": [
                [
                    128
                ],
                [
                    116
                ],
                [
                    1136
                ]
            ],
            "classify": [
                "F",
                "M",
                "X"
            ],
            "describe": "GROUP BY gender",
            "sort": null
        },
        "nl_queries": [
            "Zobraz vztah mezi počtem kolejí a celkovou kapacitou a seskup je podle pohlaví pomocí skupinového bodového grafu."
        ],
        "irrelevant_tables": [
            "Lives_in",
            "Dorm_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "1216": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Fname",
            "y_name": "COUNT(Fname)",
            "x_data": [
                [
                    "Michael",
                    "Sarah",
                    "Shiela",
                    "Stacy",
                    "Tracy"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Fname",
            "sort": null
        },
        "nl_queries": [
            "Zjisti křestní jména studentů, kteří bydlí ve Smith Hall, a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro zjištění počtu křestních jmen studentů, kteří bydlí ve Smith Hall.",
            "Koláčový graf: jaký je počet křestních jmen všech studentů ve Smith Hall?",
            "Jaká jsou křestní jména všech studentů ve Smith Hall? Spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "Dorm_amenity",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1223": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "dorm_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Anonymous Donor Hall",
                    "Dorm-plex 2000",
                    "Fawlty Towers",
                    "Smith Hall"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet studentů starších 20 let v každé koleji. Vizualizace pomocí koláčového grafu.",
            "Koláčový graf o tom, kolik studentů starších 20 let je na každé koleji?"
        ],
        "irrelevant_tables": [
            "Dorm_amenity",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1229": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT city_code , count(*) FROM student GROUP BY city_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT city_code , count(*) FROM student GROUP BY city_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ATL",
                    "BAL",
                    "BOS",
                    "CHI",
                    "DAL",
                    "DET",
                    "HKG",
                    "HOU",
                    "LON",
                    "LOS",
                    "NAR",
                    "NYC",
                    "PEK",
                    "PHL",
                    "PIT",
                    "ROC",
                    "SFO",
                    "WAS",
                    "YYZ"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    3,
                    4,
                    1,
                    1,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vytvoř sloupcový graf zobrazující celkový počet v jednotlivých městských obvodech"
        ],
        "irrelevant_tables": [
            "Has_amenity",
            "Dorm_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1232": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT city_code , avg(age) FROM student GROUP BY city_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT city_code , avg(age) FROM student GROUP BY city_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city_code",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "ATL",
                    "BAL",
                    "BOS",
                    "CHI",
                    "DAL",
                    "DET",
                    "HKG",
                    "HOU",
                    "LON",
                    "LOS",
                    "NAR",
                    "NYC",
                    "PEK",
                    "PHL",
                    "PIT",
                    "ROC",
                    "SFO",
                    "WAS",
                    "YYZ"
                ]
            ],
            "y_data": [
                [
                    20,
                    18.5,
                    18,
                    20,
                    18,
                    17,
                    18,
                    17,
                    27,
                    18,
                    18,
                    20.33333333333333,
                    17,
                    19.666666666666668,
                    19,
                    20,
                    21,
                    21.66666666666667,
                    22.5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti průměrný věk studentů žijících v jednotlivých městech pomocí sloupcového grafu.",
            "Jaký je průměrný věk studentů žijících v jednotlivých městech? Vrať sloupcový graf.",
            "Sloupcový graf průměrného věku z jednotlivých kódů měst"
        ],
        "irrelevant_tables": [
            "Dorm",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1233": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT city_code , avg(age) FROM student GROUP BY city_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT city_code , avg(age) FROM student GROUP BY city_code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city_code",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "ATL",
                    "BAL",
                    "BOS",
                    "CHI",
                    "DAL",
                    "DET",
                    "HKG",
                    "HOU",
                    "LON",
                    "LOS",
                    "NAR",
                    "NYC",
                    "PEK",
                    "PHL",
                    "PIT",
                    "ROC",
                    "SFO",
                    "WAS",
                    "YYZ"
                ]
            ],
            "y_data": [
                [
                    20,
                    18.5,
                    18,
                    20,
                    18,
                    17,
                    18,
                    17,
                    27,
                    18,
                    18,
                    20.33333333333333,
                    17,
                    19.666666666666668,
                    19,
                    20,
                    21,
                    21.66666666666667,
                    22.5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti průměrný věk všech studentů žijících v jednotlivých městech. Zobraz sloupcový graf.",
            "Nakresli sloupcový graf o tom, jaký je průměrný věk v jednotlivých městech a jaká jsou tato města.",
            "Sloupcový graf o tom, jaký je průměrný věk v jednotlivých městech a jaká jsou tato města?",
            "Jaký je průměrný věk v jednotlivých městech a jaká jsou tato města. Zobraz sloupcový graf.",
            "Sloupcový graf průměrného věku z jednotlivých kódů měst"
        ],
        "irrelevant_tables": [
            "Has_amenity",
            "Dorm"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1234": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Sex",
            "y_name": "count(*)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet studentů, jejichž věk je vyšší než průměrný věk pro každé pohlaví. Vizualizace pomocí koláčového grafu.",
            "Nakresli koláčový graf o tom, kolik studentů je starších, než je průměr pro každé pohlaví?",
            "Vrať koláčový graf o tom, kolik studentů je starších, než je průměr pro každé pohlaví?"
        ],
        "irrelevant_tables": [
            "Has_amenity",
            "Dorm_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1236": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Sex , avg(age) FROM student GROUP BY sex",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Sex , avg(age) FROM student GROUP BY sex"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Sex",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    19.7,
                    19.5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti průměrný věk studentů různého pohlaví v koláčovém grafu.",
            "Jaký je průměrný věk studentů jednotlivých pohlaví? Vrať koláčový graf."
        ],
        "irrelevant_tables": [
            "Lives_in",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1241": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(age) , max(age) FROM student GROUP BY Sex",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(age) , max(age) FROM student GROUP BY Sex"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(age)",
            "y_name": "max(age)",
            "x_data": [
                [
                    19.7
                ],
                [
                    19.5
                ]
            ],
            "y_data": [
                [
                    26
                ],
                [
                    27
                ]
            ],
            "classify": [
                "F",
                "M"
            ],
            "describe": "GROUP BY Sex",
            "sort": null
        },
        "nl_queries": [
            "Zobraz vztah mezi nejstarším věkem a průměrným věkem a seskup je podle pohlaví do skupinového bodového grafu.",
            "Bodový graf: maximální věk vs. průměrný věk podle pohlaví"
        ],
        "irrelevant_tables": [
            "Dorm",
            "Dorm_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "1274": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "pie",
            "x_name": "test_result",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Pass",
                    "Fail"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vypiš každý výsledek testu a jeho počet v sestupném pořadí podle počtu pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Courses",
            "Course_Authors_and_Tutors"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1275": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT test_result , COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "test_result",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Pass",
                    "Fail"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš jednotlivé výsledky testů a jejich počet v sestupném pořadí podle počtu pomocí sloupcového grafu.",
            "Vypiš každý výsledek testu a jeho počet v sestupném pořadí podle počtu. Vizualizace pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Course_Authors_and_Tutors",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1277": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "pie",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Arts",
                    "Language",
                    "Computer Science"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet předmětů pro každý předmět v koláčovém grafu.",
            "Kolik kurzů existuje pro každý předmět? Vytvoř koláčový graf."
        ],
        "irrelevant_tables": [
            "Student_Course_Enrolment",
            "Course_Authors_and_Tutors"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1285": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\"",
                "binning": "BIN date_test_taken BY DAY"
            },
            "VQL": "Visualize LINE SELECT date_test_taken , COUNT(date_test_taken) FROM Student_Tests_Taken WHERE test_result = \"Pass\" BIN date_test_taken BY DAY"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_test_taken",
            "y_name": "COUNT(date_test_taken)",
            "x_data": [
                [
                    "2018-03-19",
                    "2018-03-21",
                    "2018-03-23",
                    "2018-03-24",
                    "2018-03-25"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_test_taken BY DAY",
            "sort": null
        },
        "nl_queries": [
            "Které testy mají výsledek „prošel\"? Vrať data, kdy byly testy provedeny, a spočítej je pomocí čárového grafu"
        ],
        "irrelevant_tables": [
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1288": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "pie",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Computer Science",
                    "Arts",
                    "Language"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet předmětů pro každý předmět v koláčovém grafu.",
            "Kolik kurzů existuje pro každý předmět? Vytvoř koláčový graf."
        ],
        "irrelevant_tables": [
            "Course_Authors_and_Tutors",
            "Student_Course_Enrolment"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1296": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment",
                "binning": "BIN date_of_completion BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    4,
                    16
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY MONTH",
            "sort": null
        },
        "nl_queries": [
            "Vypiš počet studentů, kteří dokončili studium v jednotlivých měsících, a datum dokončení podle měsíčního intervalu pomocí sloupcového grafu.",
            "Kolik studentů dokončí studium v každém měsíci? Vrať sloupcový graf s rozdělením data dokončení podle měsíčních intervalů."
        ],
        "irrelevant_tables": [
            "Students",
            "Student_Tests_Taken"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1297": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment",
                "binning": "BIN date_of_completion BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment BIN date_of_completion BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    4,
                    4,
                    3,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_completion BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Uveď počet studentů, kteří dokončili studium v jednotlivých dnech, a datum dokončení rozděl podle dnů v týdnu pomocí sloupcového grafu.",
            "Kolik studentů dokončí každý den? Vrať sloupcový graf s rozdělením data dokončení podle dnů v týdnu."
        ],
        "irrelevant_tables": [
            "Student_Tests_Taken",
            "Subjects"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1303": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT County_name , Population FROM county",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT County_name , Population FROM county"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "election",
        "vis_obj": {
            "chart": "pie",
            "x_name": "County_name",
            "y_name": "Population",
            "x_data": [
                [
                    "Howard",
                    "Baltimore County",
                    "Colony",
                    "Mansfield",
                    "Manning"
                ]
            ],
            "y_data": [
                [
                    21000,
                    90000,
                    79000,
                    87200,
                    13300
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz název okresu a počet obyvatel všech okresů pomocí koláčového grafu.",
            "Vrať koláčový graf s názvem a počtem obyvatel jednotlivých krajů?",
            "Jaký je název a počet obyvatel jednotlivých krajů. Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "party",
            "election"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1309": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.Party , SUM(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.Party , SUM(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "election",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Party",
            "y_name": "SUM(COUNT(*))",
            "x_data": [
                [
                    "Democratic",
                    "Independence",
                    "Liberal",
                    "Working Families"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party",
            "sort": null
        },
        "nl_queries": [
            "Uveď název každé strany a odpovídající počet delegátů této strany. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1310": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "election",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Party",
            "y_name": "COUNT(Party)",
            "x_data": [
                [
                    "Democratic",
                    "Independence",
                    "Liberal",
                    "Working Families"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu zobraz počet delegátů v jednotlivých stranách.",
            "U každé strany znázorni pomocí koláčového grafu počet jejích delegátů."
        ],
        "irrelevant_tables": [
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1314": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "election",
        "vis_obj": {
            "chart": "pie",
            "x_name": "County_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Howard",
                    "Baltimore County",
                    "Colony",
                    "Mansfield"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U každého kraje zjisti jeho název a počet delegátů z tohoto kraje. Zobraz podíl pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "party"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1316": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Committee , COUNT(Committee) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = \"Democratic\" GROUP BY Committee",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Committee , COUNT(Committee) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = \"Democratic\" GROUP BY Committee"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "election",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Committee",
            "y_name": "COUNT(Committee)",
            "x_data": [
                [
                    "Appropriations",
                    "Economic Matters",
                    "Environmental Matters"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Committee",
            "sort": null
        },
        "nl_queries": [
            "Vrať všechny výbory, které mají delegáty Demokratické strany, a spočítej je pomocí koláčového grafu",
            "Které výbory mají delegáty Demokratické strany a spočítej je podle koláčového grafu"
        ],
        "irrelevant_tables": [
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1317": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Committee , COUNT(Committee) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = \"Democratic\" GROUP BY Committee",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Committee , COUNT(Committee) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = \"Democratic\" GROUP BY Committee"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "election",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Committee",
            "y_name": "COUNT(Committee)",
            "x_data": [
                [
                    "Appropriations",
                    "Economic Matters",
                    "Environmental Matters"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Committee",
            "sort": null
        },
        "nl_queries": [
            "Vrať všechny výbory, které mají delegáty Demokratické strany, a spočítej je pomocí sloupcového grafu",
            "Které výbory mají delegáty Demokratické strany? Spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1318": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Governor , COUNT(Governor) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 GROUP BY Governor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Governor , COUNT(Governor) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 GROUP BY Governor"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "election",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Governor",
            "y_name": "COUNT(Governor)",
            "x_data": [
                [
                    "Peter Vallone",
                    "Tom Golisano"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Governor",
            "sort": null
        },
        "nl_queries": [
            "Kdo byli guvernéři stran spojených s delegáty z okresu 1? Spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1319": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Governor , COUNT(Governor) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 GROUP BY Governor",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Governor , COUNT(Governor) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 GROUP BY Governor"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "election",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Governor",
            "y_name": "COUNT(Governor)",
            "x_data": [
                [
                    "Peter Vallone",
                    "Tom Golisano"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Governor",
            "sort": null
        },
        "nl_queries": [
            "Kdo byli guvernéři stran spojených s delegáty z okrsku 1? Spočítej je podle sloupcového grafu"
        ],
        "irrelevant_tables": [
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1325": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Date , Vote_Percent FROM election",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Date , Vote_Percent FROM election"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Date",
            "y_name": "Vote_Percent",
            "x_data": [
                [
                    "July 1942",
                    "October 1942",
                    "1946",
                    "1949",
                    "1953"
                ]
            ],
            "y_data": [
                [
                    16.2,
                    18.5,
                    19.5,
                    19.5,
                    16
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Uveď data a procenta hlasů ve volbách. Vykresli je jako koláčový graf.",
            "Dej mi koláčový graf, který zobrazí procenta hlasů z různých dat."
        ],
        "irrelevant_tables": [
            "representative"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1326": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , Vote_Percent FROM election",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , Vote_Percent FROM election"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Vote_Percent",
            "x_data": [
                [
                    "July 1942",
                    "October 1942",
                    "1946",
                    "1949",
                    "1953"
                ]
            ],
            "y_data": [
                [
                    16.2,
                    18.5,
                    19.5,
                    19.5,
                    16
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vypiš data a procenta hlasů ve volbách do sloupcového grafu.",
            "Uveď data a procenta hlasů ve volbách. Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "representative"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1354": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "employee_hire_evaluation",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Is_full_time",
            "y_name": "COUNT(Is_full_time)",
            "x_data": [
                [
                    "F",
                    "T"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Is_full_time",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj pomocí koláčového grafu podíl „Is_full_time“ a množství „Is_full_time“.",
            "Zobraz podíl pro atribut „Is_full_time“ a množství „Is_full_time“ pomocí koláčového grafu.",
            "Nakresli koláčový graf o podílu „Is_full_time“ a množství „Is_full_time“.",
            "Udělej mi koláčový graf, který ukáže, kolik je plný úvazek od různých je plný úvazek."
        ],
        "irrelevant_tables": [
            "evaluation",
            "shop"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1363": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT City , count(*) FROM employee GROUP BY city",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT City , count(*) FROM employee GROUP BY city"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "employee_hire_evaluation",
        "vis_obj": {
            "chart": "bar",
            "x_name": "City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bath",
                    "Bristol",
                    "Leicester",
                    "Sale",
                    "Wasps"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Nakresli sloupcový graf o tom, kolik zaměstnanců je z jednotlivých měst?",
            "Spočítej počet zaměstnanců v jednotlivých městech pomocí sloupcového grafu.",
            "Spočítej počet zaměstnanců pro každé město. Vykresli je jako sloupcový graf.",
            "Sloupcový graf celkového počtu z každého města"
        ],
        "irrelevant_tables": [
            "evaluation",
            "hiring"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1376": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "epinions_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Helen",
                    "Mark"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U každého uživatele najdi jeho jméno a počet recenzí, které napsal. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "trust",
            "item"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1377": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "epinions_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Helen",
                    "Mark"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U každého uživatele najdi jeho jméno a počet recenzí, které napsal. Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "item",
            "trust"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1379": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "epinions_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "avg(trust)",
            "x_data": [
                [
                    "Mark",
                    "Terry",
                    "Nancy",
                    "Rosie",
                    "Roxi"
                ]
            ],
            "y_data": [
                [
                    4.666666666666667,
                    5,
                    8,
                    4.5,
                    10
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti jméno každého cílového uživatele a jeho průměrné skóre důvěryhodnosti. Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "review",
            "item"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1381": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "epinions_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "avg(T2.rating)",
            "x_data": [
                [
                    "Helen",
                    "Mark"
                ]
            ],
            "y_data": [
                [
                    7.333333333333332,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro každého uživatele vrať jeho jméno a průměrné hodnocení recenzí, které zadal. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "trust",
            "item"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1383": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Status , avg(Population) FROM city GROUP BY Status",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Status , avg(Population) FROM city GROUP BY Status"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "farm",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Status",
            "y_name": "avg(Population)",
            "x_data": [
                [
                    "Town",
                    "Village"
                ]
            ],
            "y_data": [
                [
                    5706,
                    1009.75
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Chci znát podíl průměrné populace pro každý stav pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "farm_competition",
            "farm"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1389": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Official_Name , COUNT(Official_Name) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Official_Name , COUNT(Official_Name) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "farm",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Official_Name",
            "y_name": "COUNT(Official_Name)",
            "x_data": [
                [
                    "Aroostook",
                    "Drummond",
                    "Grand Falls/Grand-Sault",
                    "Perth-Andover",
                    "Plaster Rock"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Official_Name",
            "sort": null
        },
        "nl_queries": [
            "Kolik soutěží se koná v jednotlivých městech? Nakresli koláčový graf.",
            "Zobraz počet soutěží konaných v jednotlivých městech pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "competition_record"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1392": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "film_rank",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "COUNT(Type)",
            "x_data": [
                [
                    "Mass human sacrifice",
                    "Mass suicide",
                    "Mass suicide murder"
                ]
            ],
            "y_data": [
                [
                    1,
                    6,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type",
            "sort": null
        },
        "nl_queries": [
            "Uveď prosím počet filmů pro každý typ ve sloupcovém grafu.",
            "Kolik filmů každého typu existuje? Vrať sloupcový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1395": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type , COUNT(Type) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID GROUP BY Type"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "film_rank",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type",
            "y_name": "COUNT(Type)",
            "x_data": [
                [
                    "Mass human sacrifice",
                    "Mass suicide",
                    "Mass suicide murder"
                ]
            ],
            "y_data": [
                [
                    1,
                    6,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet filmů každého typu v koláčovém grafu.",
            "Kolik filmů v jednotlivých typech existuje? Ukaž mi koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1398": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Low_Estimate , High_Estimate FROM film_market_estimation",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Low_Estimate , High_Estimate FROM film_market_estimation"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "film_rank",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Low_Estimate",
            "y_name": "High_Estimate",
            "x_data": [
                [
                    80000,
                    8000,
                    3000,
                    960,
                    913,
                    300,
                    53,
                    39,
                    16
                ]
            ],
            "y_data": [
                [
                    80400,
                    8000,
                    80400,
                    960,
                    913,
                    1000,
                    53,
                    39,
                    16
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Nakresli bodový graf o tom, jaký je nejnižší a nejvyšší odhad filmových trhů.",
            "Vrať bodový graf o tom, jaké jsou nízké a vysoké odhady filmových trhů.",
            "Jaké jsou nízké a vysoké odhady filmových trhů. Vizualizace pomocí bodového grafu.",
            "Vrať nejnižší a nejvyšší odhady pro všechny filmové trhy v bodovém grafu",
            "Vrať nejnižší a nejvyšší odhady pro všechny filmové trhy. Zobraz bodový graf.",
            "Vykresli bodový graf, nízký odhad podle high_estimate."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1400": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT origin , COUNT(origin) FROM Flight GROUP BY origin",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT origin , COUNT(origin) FROM Flight GROUP BY origin"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "flight_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "origin",
            "y_name": "COUNT(origin)",
            "x_data": [
                [
                    "Chicago",
                    "Los Angeles"
                ]
            ],
            "y_data": [
                [
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY origin",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet letů pro každé město původu pomocí koláčového grafu.",
            "Kolik letů existuje pro každé město původu? Vrať koláčový graf.",
            "Dávám přednost koláčovému grafu, abych pochopil, kolik letů letí z jednotlivých měst původu. ",
            "Ukaž mi podíl počtu letů podle jednotlivých měst původu pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "aircraft",
            "employee"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1408": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT destination , count(*) FROM Flight GROUP BY destination",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT destination , count(*) FROM Flight GROUP BY destination"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "flight_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "destination",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Boston",
                    "Chicago",
                    "Dallas",
                    "Honolulu",
                    "Los Angeles",
                    "New York",
                    "Sydney",
                    "Tokyo",
                    "Washington D.C."
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz všechny destinace a počet letů do každé destinace pomocí sloupcového grafu.",
            "Zobraz všechny destinace a počet letů do každé destinace. Vykresli je jako sloupcový graf.",
            "Nakresli sloupcový graf o tom, jaké jsou letové destinace a počet letů do každé z nich?",
            "Sloupcový graf o tom, jaké jsou letové destinace a počet letů do každé z nich?",
            "Jaké jsou letové destinace a počet letů do každé z nich. Vizualizace pomocí sloupcového grafu.",
            "Nakresli sloupcový graf cílového místa v porovnání s celkovým počtem "
        ],
        "irrelevant_tables": [
            "certificate",
            "employee"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1411": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT origin , count(*) FROM Flight GROUP BY origin",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT origin , count(*) FROM Flight GROUP BY origin"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "flight_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "origin",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Chicago",
                    "Los Angeles"
                ]
            ],
            "y_data": [
                [
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz všechna místa odletu a počet letů z každého místa odletu pomocí sloupcového grafu.",
            "Zobraz všechny výchozí destinace a počet letů z každé z nich. Zobraz sloupcový graf.",
            "Pro každou zemi původu, kolik letů odtamtud přiletělo. Zobraz sloupcový graf.",
            "Sloupcový graf celkového počtu z každé země původu"
        ],
        "irrelevant_tables": [
            "employee",
            "aircraft"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1434": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Honda",
                    "Toyota"
                ]
            ],
            "y_data": [
                [
                    45,
                    95
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf pro zjištění počtu jmen japonských konstruktérů, kteří jednou získali více než 5 bodů.",
            "Koláčový graf o tom, kolik je počet jmen všech japonských konstruktérů, kteří získali více než 5 bodů.",
            "Jak se jmenují všichni japonští konstruktéři, kteří získali více než 5 bodů, a spočítej je pomocí koláčového grafu",
            "Najdi jména japonských konstruktérů, kteří jednou získali více než 5 bodů, a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "seasons",
            "circuits"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1435": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5 GROUP BY name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Honda",
                    "Toyota"
                ]
            ],
            "y_data": [
                [
                    45,
                    95
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Jak se jmenují všichni japonští konstruktéři, kteří získali více než 5 bodů, a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf o tom, kolik je jmen všech japonských konstruktérů, kteří získali více než 5 bodů?",
            "Sloupcový graf pro zjištění počtu jmen japonských konstruktérů, kteří jednou získali více než 5 bodů?",
            "Najdi jména japonských konstruktérů, kteří jednou získali více než 5 bodů, a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "status",
            "races"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1460": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM races WHERE YEAR BETWEEN 2009 AND 2011 GROUP BY name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Abu Dhabi Grand Prix",
                    "Australian Grand Prix",
                    "Bahrain Grand Prix",
                    "Belgian Grand Prix",
                    "Brazilian Grand Prix",
                    "British Grand Prix",
                    "Canadian Grand Prix",
                    "Chinese Grand Prix",
                    "European Grand Prix",
                    "German Grand Prix",
                    "Hungarian Grand Prix",
                    "Indian Grand Prix",
                    "Italian Grand Prix",
                    "Japanese Grand Prix",
                    "Korean Grand Prix",
                    "Malaysian Grand Prix",
                    "Monaco Grand Prix",
                    "Singapore Grand Prix",
                    "Spanish Grand Prix",
                    "Turkish Grand Prix"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    3,
                    1,
                    3,
                    3,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Jak se jmenují všechny závody, které se konaly v letech 2009 až 2011, a spočítej je pomocí sloupcového grafu",
            "Jak se jmenují závody, které se konaly v letech 2009 až 2011, a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf o tom, jaký je počet názvů závodů, které se konaly v letech 2009 až 2011?",
            "Sloupcový graf o tom, jaký je počet názvů všech závodů konaných v letech 2009 až 2011?"
        ],
        "irrelevant_tables": [
            "circuits",
            "constructorStandings"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1465": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(age) , min(age) FROM Student GROUP BY major",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM Student GROUP BY major"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "game_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(age)",
            "y_name": "min(age)",
            "x_data": [
                [
                    22,
                    17,
                    19.33333333333333,
                    17.5,
                    19.8,
                    19.666666666666668
                ]
            ],
            "y_data": [
                [
                    18,
                    17,
                    18,
                    17,
                    18,
                    16
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz vztah mezi průměrným věkem a minimálním věkem pro různé obory v bodovém grafu."
        ],
        "irrelevant_tables": [
            "Plays_Games",
            "SportsInfo"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1468": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT min(age) , max(age) , major FROM Student GROUP BY major",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT min(age) , max(age) , major FROM Student GROUP BY major"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "game_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "min(age)",
            "y_name": "max(age)",
            "x_data": [
                [
                    18
                ],
                [
                    17
                ],
                [
                    18
                ],
                [
                    17
                ],
                [
                    18
                ],
                [
                    16
                ]
            ],
            "y_data": [
                [
                    26
                ],
                [
                    17
                ],
                [
                    22
                ],
                [
                    18
                ],
                [
                    21
                ],
                [
                    27
                ]
            ],
            "classify": [
                50,
                100,
                520,
                540,
                550,
                600
            ],
            "describe": "GROUP BY major",
            "sort": null
        },
        "nl_queries": [
            "Zobraz vztah mezi maximálním a minimálním věkem pro různé obory ve skupinovém bodovém grafu.",
            "Bodový graf pro zobrazení minimálního věku na ose x a maximálního věku na ose y, použij různé barvy pro různé obory."
        ],
        "irrelevant_tables": [
            "SportsInfo",
            "Video_Games"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "1482": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ,  Season",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Home_team ,  Season"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "line",
            "x_name": "Season",
            "y_name": "COUNT(Season)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    0,
                    2,
                    1,
                    1,
                    1,
                    3,
                    1
                ],
                [
                    2,
                    1,
                    2,
                    1,
                    1,
                    2,
                    1
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "Bunyodkor",
                "Pakhtakor",
                "Quruvchi"
            ],
            "describe": "GROUP BY Home_team, GROUP BY Season",
            "sort": null
        },
        "nl_queries": [
            "Vypiš počet zápasů v každé sezóně a seskup je podle domácího týmu do skupinového grafu."
        ],
        "irrelevant_tables": [
            "injury_accident",
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "1496": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Home_team",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Home_team"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Home_team",
            "y_name": "COUNT(Home_team)",
            "x_data": [
                [
                    "Bunyodkor",
                    "Pakhtakor",
                    "Quruvchi"
                ]
            ],
            "y_data": [
                [
                    9,
                    10,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Home_team",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet zápasů každého domácího týmu v koláčovém grafu."
        ],
        "irrelevant_tables": [
            "stadium",
            "injury_accident"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1497": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Headquarters , count(*) FROM company GROUP BY headquarters",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Headquarters , count(*) FROM company GROUP BY headquarters"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Headquarters",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "Netherlands",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vypiš všechna ústředí a počet společností v každém ústředí do koláčového grafu.",
            "Uveď všechna sídla a počet společností v každém sídle. Zobraz koláčový graf.",
            "Udělej mi koláčový graf, který ukáže celkový počet z různých poboček."
        ],
        "irrelevant_tables": [
            "gas_station",
            "station_company"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1499": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , Rank FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion, profits_billion",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , Rank FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion, profits_billion"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "Rank",
            "x_data": [
                [
                    "Industrial and Commercial Bank of China",
                    "Wells Fargo",
                    "HSBC"
                ]
            ],
            "y_data": [
                [
                    5,
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zjisti pořadí společností v bankovnictví podle jejich tržeb a zisku v miliardách."
        ],
        "irrelevant_tables": [
            "gas_station",
            "station_company"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1500": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking'",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Company , Market_Value FROM company WHERE main_industry = 'Banking'"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Company",
            "y_name": "Market_Value",
            "x_data": [
                [
                    "Industrial and Commercial Bank of China",
                    "Wells Fargo",
                    "HSBC"
                ]
            ],
            "y_data": [
                [
                    237.4,
                    178.7,
                    164.3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti tržní hodnoty společností v bankovním sektoru pomocí koláčového grafu.",
            "Jaká je tržní hodnota každé společnosti v bankovním sektoru? Vrať koláčový graf."
        ],
        "irrelevant_tables": [
            "station_company",
            "gas_station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1504": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking' GROUP BY Company",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Rank , Market_Value FROM company WHERE main_industry = 'Banking' GROUP BY Company"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Rank",
            "y_name": "Market_Value",
            "x_data": [
                [
                    6
                ],
                [
                    5
                ],
                [
                    9
                ]
            ],
            "y_data": [
                [
                    164.3
                ],
                [
                    237.4
                ],
                [
                    178.7
                ]
            ],
            "classify": [
                "HSBC",
                "Industrial and Commercial Bank of China",
                "Wells Fargo"
            ],
            "describe": "GROUP BY Company",
            "sort": null
        },
        "nl_queries": [
            "Ukaž vztah mezi pořadím a tržními hodnotami společností v bankovním odvětví a seskup je podle společností pomocí skupinového bodového grafu."
        ],
        "irrelevant_tables": [
            "gas_station",
            "station_company"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "1507": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Main_Industry",
            "y_name": "sum(market_value)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    580.4000000000002,
                    415.9,
                    1257.1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz všechna hlavní odvětví a celkovou tržní hodnotu v každém odvětví v koláčovém grafu.",
            "Nakresli koláčový graf, který zobrazí všechna hlavní odvětví a celkovou tržní hodnotu v každém odvětví.",
            "Ukaž mi koláčový graf pro hlavní odvětví a celkovou tržní hodnotu pro každé odvětví?",
            "Jaké jsou hlavní odvětví a celková tržní hodnota jednotlivých odvětví. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "station_company",
            "gas_station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1509": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry",
            "sort": null
        },
        "nl_queries": [
            "Koláčovým grafem znázorni počet podniků bez čerpací stanice v jednotlivých hlavních odvětvích.",
            "Kolik společností bez čerpací stanice v jednotlivých hlavních odvětvích? Nakresli koláčový graf."
        ],
        "irrelevant_tables": [
            "gas_station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1515": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Company",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ExxonMobil",
                    "Royal Dutch Shell",
                    "PetroChina",
                    "Petrobras",
                    "BP"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz název společnosti s počtem čerpacích stanic v koláčovém grafu."
        ],
        "irrelevant_tables": [
            "gas_station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1517": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Headquarters",
            "y_name": "COUNT(Headquarters)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "Netherlands",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarters",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet společností v jednotlivých ústředích pomocí koláčového grafu.",
            "Kolik společností je v jednotlivých pobočkách? Vytvoř koláčový graf."
        ],
        "irrelevant_tables": [
            "station_company",
            "gas_station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1520": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "gymnast",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Hometown",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Bonao",
                    "Los Alcarrizos",
                    "Santiago de los Caballeros",
                    "Santo Domingo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj koláčový graf, ve kterém jsou uvedena rodná města gymnastů a odpovídající počet gymnastů.",
            "Ukaž mi koláčový graf pro rodná města gymnastů a odpovídající počet gymnastů.",
            "Jaká jsou rodná města gymnastů a odpovídající počet gymnastek. Zobraz koláčový graf.",
            "Zobraz koláčový graf, kolik gymnastů pochází z každého rodného města.",
            "Vizualizuj koláčový graf s počtem gymnastů z každého rodného města."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1522": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "General Medicine",
                    "Psychiatry",
                    "Surgery"
                ]
            ],
            "y_data": [
                [
                    5,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "V koláčovém grafu zobraz, kolik lékařů je primárně zařazeno na jednotlivých odděleních."
        ],
        "irrelevant_tables": [
            "Patient",
            "Trained_In"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1524": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Christopher Turk",
                    "Elliot Reid",
                    "John Dorian",
                    "Molly Clock",
                    "Percival Cox"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Jaká jsou jména všech lékařů, kteří přijali návštěvy, a spočítej je pomocí koláčového grafu",
            "Vypiš jména lékařů, kteří přijali nějaký termín, a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro výpis počtu jmen lékařů, kteří přijali nějakou schůzku."
        ],
        "irrelevant_tables": [
            "Block",
            "Affiliated_With"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1526": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Cost FROM procedures ORDER BY cost DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Cost FROM procedures ORDER BY cost DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Cost",
            "x_data": [
                [
                    "Complete Walletectomy",
                    "Reversible Pancreomyoplasty",
                    "Obfuscated Dermogastrotomy",
                    "Folded Demiophtalmectomy",
                    "Obtuse Pyloric Recombobulation",
                    "Reverse Rhinopodoplasty",
                    "Follicular Demiectomy"
                ]
            ],
            "y_data": [
                [
                    10000,
                    5600,
                    4899,
                    4500,
                    3750,
                    1500,
                    25
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš název a náklady všech procedur seřazených podle nákladů od nejvyšší po nejnižší pomocí sloupcového grafu.",
            "Seznam názvů a nákladů všech postupů seřazených podle nákladů od nejvyššího po nejnižší. Vykresli je jako sloupcový graf."
        ],
        "irrelevant_tables": [
            "Affiliated_With",
            "Appointment"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1527": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Christopher Turk",
                    "John Wen",
                    "Todd Quinlan"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Najdi lékaře, kteří jsou vyškoleni v postupu, který stojí více než 5000, a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro zjištění počtu lékařů, kteří jsou vyškoleni v postupu, který stojí více než 5000.",
            "Kteří lékaři jsou vyškoleni v postupech, které jsou dražší než 5000, a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "Nurse",
            "Department"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1528": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , COUNT(T1.Name) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000 GROUP BY T1.Name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Christopher Turk",
                    "John Wen",
                    "Todd Quinlan"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Kteří lékaři jsou vyškoleni v postupech, které jsou dražší než 5000, a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf pro zjištění počtu lékařů, kteří jsou vyškoleni v postupu, který stojí více než 5000.",
            "Najdi lékaře, kteří jsou vyškoleni v postupu, který stojí více než 5000, a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Medication",
            "Prescribes"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1529": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Dennis Doe",
                    "Grace Ritchie",
                    "John Smith",
                    "Random J. Patient"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Vypiš jména pacientů, kteří se objednali, a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro výpis počtu jmen pacientů, kteří si domluvili schůzku.",
            "Jaká jsou jména pacientů, kteří se objednali, a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "Medication",
            "Trained_In"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1530": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY Name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Dennis Doe",
                    "Grace Ritchie",
                    "John Smith",
                    "Random J. Patient"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf pro výpis počtu jmen pacientů, kteří si domluvili schůzku.",
            "Vypiš jména pacientů, kteří se objednali, a spočítej je pomocí sloupcového grafu",
            "Jaká jsou jména pacientů, kteří se objednali, a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Prescribes",
            "Affiliated_With"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1531": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Foo Labs",
                    "X"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf o tom, kolik léků je předepsáno pro každou značku?",
            "Vrať koláčový graf o tom, kolik léků je předepsáno pro každou značku?",
            "Kolik léků je předepsáno pro každou značku? Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Physician",
            "Block"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1534": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "John Dorian",
                    "Elliot Reid",
                    "Christopher Turk"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať koláčový graf, o kolik pacientů se každý lékař stará. Uveď jejich jména a počet pacientů, o které se starají.",
            "Nakresli koláčový graf, kolik pacientů má každý lékař v péči? Uveď jejich jména a počet pacientů, o které se starají.",
            "O kolik pacientů se každý lékař stará? Vypiš jejich jména a počet pacientů, o které se starají, do koláčového grafu.",
            "O kolik pacientů se každý lékař stará? Uveď jejich jména a počet pacientů, o které se starají. Vizualizace pomocí koláčového grafu.",
            "Vrať jméno každého lékaře a počet pacientů, které ošetřuje, pomocí koláčového grafu.",
            "Vrať jméno každého lékaře a počet pacientů, které ošetřuje. Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "Department",
            "On_Call"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1535": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "John Dorian",
                    "Elliot Reid",
                    "Christopher Turk"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať sloupcový graf, kolik pacientů má každý lékař v péči? Uveď jejich jména a počet pacientů, o které se starají.",
            "Nakresli sloupcový graf, kolik pacientů má každý lékař v péči? Uveď jejich jména a počet pacientů, o které se starají.",
            "O kolik pacientů se každý lékař stará? Vypiš jejich jména a počet pacientů, o které se starají, do sloupcového grafu.",
            "O kolik pacientů se každý lékař stará? Uveď jejich jména a počet pacientů, o které se starají. Zobraz sloupcový graf.",
            "Vrať jméno každého lékaře a počet pacientů, které ošetřuje, ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Prescribes",
            "Undergoes"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1537": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\")",
                "binning": "BIN HIRE_DATE BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\") BIN HIRE_DATE BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "HIRE_DATE",
            "y_name": "COUNT(HIRE_DATE)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    5,
                    5,
                    5,
                    4,
                    5,
                    5,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN HIRE_DATE BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Prosím o sloupcový graf, který by kategorizoval hire_date všech zaměstnanců ve stejném oddělení jako zaměstnanec s křestním jménem Clara podle týdenních intervalů a počítal, kolik zaměstnanců je tam za den."
        ],
        "irrelevant_tables": [
            "locations",
            "regions"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1556": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "HIRE_DATE",
            "y_name": "SALARY",
            "x_data": [
                [
                    "1987-06-17",
                    "1987-09-30",
                    "1987-08-24",
                    "1987-07-01",
                    "1987-08-04",
                    "1987-08-25",
                    "1987-08-07",
                    "1987-08-19",
                    "1987-06-20",
                    "1987-06-26",
                    "1987-08-31",
                    "1987-07-08",
                    "1987-08-09",
                    "1987-08-15",
                    "1987-06-29",
                    "1987-06-28",
                    "1987-08-16",
                    "1987-08-17",
                    "1987-06-30",
                    "1987-08-21",
                    "1987-07-10",
                    "1987-09-28",
                    "1987-08-22",
                    "1987-09-04",
                    "1987-08-29",
                    "1987-06-22",
                    "1987-06-24",
                    "1987-09-09",
                    "1987-09-10",
                    "1987-09-17",
                    "1987-07-24",
                    "1987-07-20",
                    "1987-07-25",
                    "1987-09-05",
                    "1987-09-19",
                    "1987-07-02",
                    "1987-07-29",
                    "1987-07-03",
                    "1987-07-04",
                    "1987-09-08",
                    "1987-07-30",
                    "1987-09-23",
                    "1987-09-24",
                    "1987-07-18",
                    "1987-07-27",
                    "1987-09-16",
                    "1987-07-14",
                    "1987-07-15"
                ]
            ],
            "y_data": [
                [
                    24000,
                    12000,
                    11500,
                    11000,
                    11000,
                    10000,
                    9500,
                    9500,
                    9000,
                    9000,
                    8800,
                    8200,
                    8000,
                    8000,
                    7800,
                    7700,
                    7500,
                    7000,
                    6900,
                    6800,
                    6500,
                    6500,
                    6400,
                    6200,
                    6100,
                    4800,
                    4200,
                    4200,
                    4100,
                    4000,
                    3600,
                    3300,
                    3200,
                    3200,
                    3200,
                    3100,
                    3100,
                    2900,
                    2800,
                    2800,
                    2600,
                    2600,
                    2600,
                    2500,
                    2500,
                    2500,
                    2400,
                    2200
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, zobraz čárový graf změny platu v průběhu hire_date.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, zobraz čárový graf vývoj platu v závislosti na hire_date.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, zobraz čárový graf změnu platu v průběhu hire_date do zaměstnání ",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, mi ukaž trend vývoje platu v závislosti na hire_date do zaměstnání pomocí čárového grafu."
        ],
        "irrelevant_tables": [
            "job_history",
            "countries"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1563": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT JOB_ID , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' GROUP BY JOB_ID"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "JOB_ID",
            "y_name": "AVG(SALARY)",
            "x_data": [
                [
                    "AC_MGR",
                    "AD_PRES",
                    "FI_ACCOUNT",
                    "HR_REP",
                    "IT_PROG",
                    "PU_CLERK",
                    "PU_MAN",
                    "SA_MAN",
                    "SA_REP",
                    "SH_CLERK",
                    "ST_CLERK",
                    "ST_MAN"
                ]
            ],
            "y_data": [
                [
                    12000,
                    24000,
                    7850,
                    6500,
                    6000,
                    2933.3333333333335,
                    11000,
                    11000,
                    8100,
                    3244.4444444444443,
                    2822.222222222222,
                    7350
                ]
            ],
            "classify": [],
            "describe": "GROUP BY JOB_ID",
            "sort": null
        },
        "nl_queries": [
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, mi ukaž rozdělení job_id a průměrný plat, a seskup je podle atributu job_id do sloupcového grafu.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, nakresli sloupcový graf o rozložení job_id a průměru platu, a seskup je podle atributu job_id.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, vrať sloupcový graf o rozložení job_id a průměru platu , a seskup data podle atributu job_id.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, najdi job_id a průměrný plat, seskup je podle atributu job_id a vizualizuj je pomocí sloupcového grafu.",
            "Pro všechny zaměstnance, kteří mají v křestním jménu písmena D nebo S, mi udělej porovnání o průměru platu přes job_id, a seskup data podle atributu job_id sloupcovým grafem."
        ],
        "irrelevant_tables": [
            "locations",
            "departments"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1574": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT SALARY , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'"
        },
        "chart": "Scatter",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "SALARY",
            "y_name": "COMMISSION_PCT",
            "x_data": [
                [
                    24000,
                    12000,
                    11500,
                    11000,
                    11000,
                    10000,
                    9500,
                    9500,
                    9000,
                    9000,
                    8800,
                    8200,
                    8000,
                    8000,
                    7800,
                    7700,
                    7500,
                    7000,
                    6900,
                    6800,
                    6500,
                    6500,
                    6400,
                    6200,
                    6100,
                    4800,
                    4200,
                    4200,
                    4100,
                    4000,
                    3600,
                    3300,
                    3200,
                    3200,
                    3200,
                    3100,
                    3100,
                    2900,
                    2800,
                    2800,
                    2600,
                    2600,
                    2600,
                    2500,
                    2500,
                    2500,
                    2400,
                    2200
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0.25,
                    0,
                    0.3,
                    0.2,
                    0.25,
                    0.15,
                    0,
                    0,
                    0.25,
                    0,
                    0.2,
                    0.3,
                    0,
                    0,
                    0.3,
                    0.25,
                    0,
                    0.1,
                    0,
                    0,
                    0.1,
                    0.1,
                    0.1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, mi v bodovém grafu ukaž závislost mezi platem a commission_pct.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, nakresli bodový graf závislosti mezi platem a commission_pct.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, zobraz bodový graf závislosti mezi platem a commission_pct.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, ukazuje bodový graf závislost mezi platem a commission_pct ."
        ],
        "irrelevant_tables": [
            "job_history",
            "locations"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1580": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40",
                "binning": "BIN HIRE_DATE BY MONTH"
            },
            "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40 BIN HIRE_DATE BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "HIRE_DATE",
            "y_name": "COUNT(HIRE_DATE)",
            "x_data": [
                [
                    "June",
                    "July",
                    "Aug",
                    "Sept",
                    "Oct"
                ]
            ],
            "y_data": [
                [
                    14,
                    31,
                    31,
                    29,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN HIRE_DATE BY MONTH",
            "sort": null
        },
        "nl_queries": [
            "Pro ty zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, zobraz sloupcový graf o rozložení hire_date a částky rozděl hire_date podle měsíců.",
            "Pro ty zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, mi ve sloupcovém grafu ukaž rozložení hire_date a částky hire_date. Rozděl hire_date podle měsíců.",
            "Pro zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, najdi hire_date a částku hire_date. Rozděl hire_date podle měsíců a vizualizuj je pomocí sloupcového grafu.",
            "Pro zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, nakresli sloupcový graf o rozložení hire_date a částky rozděl hire_date podle měsíců."
        ],
        "irrelevant_tables": [
            "job_history",
            "regions"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1611": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT SALARY , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "SALARY",
            "y_name": "COMMISSION_PCT",
            "x_data": [
                [
                    24000,
                    17000,
                    17000,
                    9000,
                    6000,
                    4800,
                    4800,
                    4200,
                    12000,
                    9000,
                    8200,
                    7700,
                    7800,
                    6900,
                    11000,
                    3100,
                    2900,
                    2800,
                    2600,
                    2500,
                    8000,
                    8200,
                    7900,
                    6500,
                    5800,
                    3200,
                    2700,
                    2400,
                    2200,
                    3300,
                    2800,
                    2500,
                    2100,
                    3300,
                    2900,
                    2400,
                    2200,
                    3600,
                    3200,
                    2700,
                    2500,
                    3500,
                    3100,
                    2600,
                    2500,
                    14000,
                    13500,
                    12000,
                    11000,
                    10500,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10500,
                    9500,
                    7200,
                    6800,
                    6400,
                    6200,
                    11500,
                    10000,
                    9600,
                    7400,
                    7300,
                    6100,
                    11000,
                    8800,
                    8600,
                    8400,
                    7000,
                    6200,
                    3200,
                    3100,
                    2500,
                    2800,
                    4200,
                    4100,
                    3400,
                    3000,
                    3800,
                    3600,
                    2900,
                    2500,
                    4000,
                    3900,
                    3200,
                    2800,
                    3100,
                    3000,
                    2600,
                    2600,
                    4400,
                    13000,
                    6000,
                    10000,
                    12000,
                    8300
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.4,
                    0.3,
                    0.3,
                    0.3,
                    0.2,
                    0.3,
                    0.25,
                    0.25,
                    0.2,
                    0.2,
                    0.15,
                    0.35,
                    0.35,
                    0.35,
                    0.3,
                    0.3,
                    0.25,
                    0.25,
                    0.15,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.25,
                    0.2,
                    0.2,
                    0.15,
                    0.15,
                    0.1,
                    0.3,
                    0.25,
                    0.2,
                    0.2,
                    0.15,
                    0.1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, zobraz bodový graf závislost mezi platem a commission_pct.",
            "Pro ty zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, mi zobraz korelaci mezi platem a commission_pct v bodovém grafu.",
            "Pro ty zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, zobraz bodový graf o korelaci mezi platem a commission_pct."
        ],
        "irrelevant_tables": [
            "countries",
            "locations"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1621": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR department_id != 40"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "HIRE_DATE",
            "y_name": "COMMISSION_PCT",
            "x_data": [
                [
                    "1987-06-17",
                    "1987-06-18",
                    "1987-06-19",
                    "1987-06-20",
                    "1987-06-21",
                    "1987-06-22",
                    "1987-06-23",
                    "1987-06-24",
                    "1987-06-25",
                    "1987-06-26",
                    "1987-06-27",
                    "1987-06-28",
                    "1987-06-29",
                    "1987-06-30",
                    "1987-07-01",
                    "1987-07-02",
                    "1987-07-03",
                    "1987-07-04",
                    "1987-07-05",
                    "1987-07-06",
                    "1987-07-07",
                    "1987-07-08",
                    "1987-07-09",
                    "1987-07-10",
                    "1987-07-11",
                    "1987-07-12",
                    "1987-07-13",
                    "1987-07-14",
                    "1987-07-15",
                    "1987-07-16",
                    "1987-07-17",
                    "1987-07-18",
                    "1987-07-19",
                    "1987-07-20",
                    "1987-07-21",
                    "1987-07-22",
                    "1987-07-23",
                    "1987-07-24",
                    "1987-07-25",
                    "1987-07-26",
                    "1987-07-27",
                    "1987-07-28",
                    "1987-07-29",
                    "1987-07-30",
                    "1987-07-31",
                    "1987-08-01",
                    "1987-08-02",
                    "1987-08-03",
                    "1987-08-04",
                    "1987-08-05",
                    "1987-08-06",
                    "1987-08-07",
                    "1987-08-08",
                    "1987-08-09",
                    "1987-08-10",
                    "1987-08-11",
                    "1987-08-12",
                    "1987-08-13",
                    "1987-08-14",
                    "1987-08-15",
                    "1987-08-16",
                    "1987-08-17",
                    "1987-08-18",
                    "1987-08-19",
                    "1987-08-20",
                    "1987-08-21",
                    "1987-08-22",
                    "1987-08-23",
                    "1987-08-24",
                    "1987-08-25",
                    "1987-08-26",
                    "1987-08-27",
                    "1987-08-28",
                    "1987-08-29",
                    "1987-08-30",
                    "1987-08-31",
                    "1987-09-01",
                    "1987-09-02",
                    "1987-09-03",
                    "1987-09-04",
                    "1987-09-05",
                    "1987-09-06",
                    "1987-09-07",
                    "1987-09-08",
                    "1987-09-09",
                    "1987-09-10",
                    "1987-09-11",
                    "1987-09-12",
                    "1987-09-13",
                    "1987-09-14",
                    "1987-09-15",
                    "1987-09-16",
                    "1987-09-17",
                    "1987-09-18",
                    "1987-09-19",
                    "1987-09-20",
                    "1987-09-21",
                    "1987-09-22",
                    "1987-09-23",
                    "1987-09-24",
                    "1987-09-25",
                    "1987-09-26",
                    "1987-09-27",
                    "1987-09-29",
                    "1987-09-30",
                    "1987-10-01"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.4,
                    0.3,
                    0.3,
                    0.3,
                    0.2,
                    0.3,
                    0.25,
                    0.25,
                    0.2,
                    0.2,
                    0.15,
                    0.35,
                    0.35,
                    0.35,
                    0.3,
                    0.3,
                    0.25,
                    0.25,
                    0.15,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.25,
                    0.2,
                    0.2,
                    0.15,
                    0.15,
                    0.1,
                    0.3,
                    0.25,
                    0.2,
                    0.2,
                    0.15,
                    0.1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, zobraz čárový graf pro vývoj commission_pct v závislosti na hire_date.",
            "Pro ty zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, nakresli čárový graf o změně commission_pct v závislosti na hire_date.",
            "Pro zaměstnance, jejichž mzda je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, mi ukaž změnu commission_pct v závislosti na hire_date do zaměstnání v čárovém grafu.",
            "Pro zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, vrať řádkový graf o změně commission_pct v průběhu hire_date.",
            "Pro zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, zobrazuje čárový graf změnu commission_pct v průběhu hire_date ",
            "Pro zaměstnance, jejichž plat je v rozmezí 8000 a 12000 a provize není nulová nebo číslo oddělení není rovno 40, zobraz čárový graf o změně commission_pct v závislosti na hire_date ."
        ],
        "irrelevant_tables": [
            "countries",
            "departments"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1630": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT LAST_NAME , COUNT(LAST_NAME) FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163 ) GROUP BY LAST_NAME",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT LAST_NAME , COUNT(LAST_NAME) FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163 ) GROUP BY LAST_NAME"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "LAST_NAME",
            "y_name": "COUNT(LAST_NAME)",
            "x_data": [
                [
                    "Abel",
                    "Baer",
                    "Bloom",
                    "Cambrault",
                    "De Haan",
                    "Errazuriz",
                    "Fox",
                    "Greenberg",
                    "Hartstein",
                    "Higgins",
                    "King",
                    "Kochhar",
                    "Ozer",
                    "Partners",
                    "Raphaely",
                    "Russell",
                    "Tucker",
                    "Vishney",
                    "Zlotkey"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY LAST_NAME",
            "sort": null
        },
        "nl_queries": [
            "Uveď četnost příjmení zaměstnanců, kteří vydělávají více než zaměstnanec s id 163, pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "jobs",
            "regions"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1652": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",
                "binning": "BIN HIRE_DATE BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) BIN HIRE_DATE BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "HIRE_DATE",
            "y_name": "COUNT(HIRE_DATE)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN HIRE_DATE BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Pro zaměstnance, kteří nepracují v odděleních s vedoucími, kteří mají id mezi 100 a 200, mi udělej srovnání o množství hire_date nad hire_date. Rozděl hire_date podle pracovních dnů pomocí sloupcového grafu.",
            "Pro zaměstnance, kteří nepracují v odděleních s vedoucími, kteří mají id mezi 100 a 200, zjisti hire_date a množství hire_date. Rozděl hire_date podle dnů v týdnu a vizualizuj je pomocí sloupcového grafu.",
            "U zaměstnanců, kteří nepracují v odděleních s vedoucími pracovníky, kteří mají id v rozmezí 100 až 200, je ve sloupcovém grafu zobrazeno rozložení hire_date a množství hire_date. Rozděl hire_date podle dnů v týdnu.",
            "Pro zaměstnance, kteří nepracují v odděleních s vedoucími pracovníky, kteří mají id mezi 100 a 200, mi ve sloupcovém grafu ukaž rozložení hire_date a množství hire_date rozděl hire_date podle dnů v týdnu."
        ],
        "irrelevant_tables": [
            "countries",
            "job_history"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1663": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) Group by HIRE_DATE",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "HIRE_DATE",
            "y_name": "AVG(SALARY)",
            "x_data": [
                [
                    "1987-09-03",
                    "1987-09-26",
                    "1987-09-27",
                    "1987-09-28",
                    "1987-09-29",
                    "1987-09-30",
                    "1987-10-01"
                ]
            ],
            "y_data": [
                [
                    7000.0,
                    13000.0,
                    6000.0,
                    6500.0,
                    10000.0,
                    12000.0,
                    8300.0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro zaměstnance, kteří nepracují v odděleních s vedoucími, kteří mají id mezi 100 a 200, mi v čárovém grafu ukaž změnu průměrného platu v průběhu hire_date.",
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají id mezi 100 a 200, zobraz čárový graf o změně průměrného platu v závislosti na hire_date."
        ],
        "irrelevant_tables": [
            "regions",
            "locations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1690": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT SALARY , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"
        },
        "chart": "Scatter",
        "hardness": "Extra Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "SALARY",
            "y_name": "COMMISSION_PCT",
            "x_data": [
                [
                    7000,
                    13000,
                    6000,
                    6500,
                    10000,
                    12000,
                    8300
                ]
            ],
            "y_data": [
                [
                    0.15,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají id mezi 100 a 200, vrať bodový graf o korelaci mezi platem a commission_pct.",
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají ID mezi 100 a 200, zobraz bodový graf o korelaci mezi platem a commission_pct.",
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají ID mezi 100 a 200, nakresli bodový graf závislosti mezi platem a commission_pct.",
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají ID mezi 100 a 200, ukazuje bodový graf závislost mezi platem a commission_pct.",
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají ID mezi 100 a 200, mi ukaž korelaci mezi platem a commission_pct v bodovém grafu."
        ],
        "irrelevant_tables": [
            "job_history",
            "countries"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1715": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",
                "binning": "BIN HIRE_DATE BY MONTH"
            },
            "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) BIN HIRE_DATE BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "HIRE_DATE",
            "y_name": "AVG(SALARY)",
            "x_data": [
                [
                    "June",
                    "July",
                    "Aug",
                    "Sept",
                    "Oct"
                ]
            ],
            "y_data": [
                [
                    8700,
                    3382.7586206896553,
                    9074.193548387097,
                    4459.259259259259,
                    8300
                ]
            ],
            "classify": [],
            "describe": "BIN HIRE_DATE BY MONTH",
            "sort": null
        },
        "nl_queries": [
            "Pro zaměstnance, kteří v minulosti neměli žádné zaměstnání, nakresli sloupcový graf o rozložení hire_date do zaměstnání a průměru mzdy. Rozděl hire_date do zaměstnání podle měsíců.",
            "Pro zaměstnance, kteří v minulosti neměli žádné zaměstnání, vrať sloupcový graf o rozložení hire_date do zaměstnání a průměru mzdy. Rozděl hire_date do zaměstnání podle měsíců.",
            "Pro zaměstnance, kteří v minulosti neměli žádné zaměstnání, zobraz sloupcový graf o rozložení hire_date do zaměstnání a průměru mzdy. Rozděl hire_date do zaměstnání v jednotlivých měsících.",
            "U těch zaměstnanců, kteří v minulosti neměli žádné zaměstnání, mi ve sloupcovém grafu ukaž rozložení hire_date do zaměstnání a průměrný platový koš hire_date do zaměstnání podle měsíců.",
            "U zaměstnanců, kteří v minulosti neměli žádnou práci, zjisti hire_date a průměrný plat. Rozděl hire_date podle měsíců a vizualizuj je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "jobs",
            "regions"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1741": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT SALARY , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT SALARY , COMMISSION_PCT FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "SALARY",
            "y_name": "COMMISSION_PCT",
            "x_data": [
                [
                    24000,
                    9000,
                    6000,
                    4800,
                    4800,
                    4200,
                    12000,
                    9000,
                    8200,
                    7700,
                    7800,
                    6900,
                    3100,
                    2900,
                    2800,
                    2600,
                    2500,
                    8000,
                    8200,
                    6500,
                    5800,
                    3200,
                    2700,
                    2400,
                    2200,
                    3300,
                    2800,
                    2500,
                    2100,
                    3300,
                    2900,
                    2400,
                    2200,
                    3600,
                    3200,
                    2700,
                    2500,
                    3500,
                    3100,
                    2600,
                    2500,
                    14000,
                    13500,
                    12000,
                    11000,
                    10500,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10500,
                    9500,
                    7200,
                    6800,
                    6400,
                    6200,
                    11500,
                    10000,
                    9600,
                    7400,
                    7300,
                    6100,
                    11000,
                    8800,
                    8400,
                    7000,
                    6200,
                    3200,
                    3100,
                    2500,
                    2800,
                    4200,
                    4100,
                    3400,
                    3000,
                    3800,
                    3600,
                    2900,
                    2500,
                    4000,
                    3900,
                    3200,
                    2800,
                    3100,
                    3000,
                    2600,
                    2600,
                    6000,
                    6500,
                    10000,
                    12000,
                    8300
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.4,
                    0.3,
                    0.3,
                    0.3,
                    0.2,
                    0.3,
                    0.25,
                    0.25,
                    0.2,
                    0.2,
                    0.15,
                    0.35,
                    0.35,
                    0.35,
                    0.3,
                    0.3,
                    0.25,
                    0.25,
                    0.15,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.25,
                    0.2,
                    0.2,
                    0.15,
                    0.15,
                    0.1,
                    0.3,
                    0.25,
                    0.2,
                    0.15,
                    0.1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U těch zaměstnanců, kteří v minulosti neměli žádnou práci, mi v rozptylovém grafu ukaž korelaci mezi platem a commission_pct.",
            "Pro zaměstnance, kteří v minulosti neměli žádné zaměstnání, vrať bodový graf o korelaci mezi platem a commission_pct .",
            "U zaměstnanců, kteří v minulosti neměli žádné zaměstnání, ukaž bodový graf závislost mezi platem a commission_pct .",
            "Pro zaměstnance, kteří v minulosti neměli žádné zaměstnání, nakresli bodový graf závislosti mezi platem a commission_pct ."
        ],
        "irrelevant_tables": [
            "locations",
            "departments"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1807": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "FIRST_NAME",
            "y_name": "COUNT(FIRST_NAME)",
            "x_data": [
                [
                    "Adam",
                    "Payam",
                    "William"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY FIRST_NAME",
            "sort": null
        },
        "nl_queries": [
            "U zaměstnanců s křestními jmény končícími na písmeno \"m\" seskup a spočítej křestní jména a zobraz koláčový graf.",
            "U zaměstnanců, jejichž křestní jméno končí na písmeno m, zobraz podíl křestního jména pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "job_history",
            "regions"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1831": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%'",
                "binning": "BIN HIRE_DATE BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT HIRE_DATE , SUM(SALARY) FROM employees WHERE first_name NOT LIKE '%M%' BIN HIRE_DATE BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "HIRE_DATE",
            "y_name": "SUM(SALARY)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    75800,
                    68100,
                    116200,
                    70400,
                    92000,
                    78700,
                    72300
                ]
            ],
            "classify": [],
            "describe": "BIN HIRE_DATE BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "U zaměstnanců, jejichž křestní jméno neobsahuje písmeno M, sečti jejich mzdu tak, že datum nástupu do zaměstnání rozdělíš do intervalu dnů v týdnu pro vizualizaci ve sloupcovém grafu.",
            "Rozděl datum nástupu do intervalu den v týdnu a poté vypočítej celkový plat zaměstnanců v jednotlivých dnech pro sloupcový graf, všimni si, že stačí vybrat zaměstnance bez písmene M v křestním jménu."
        ],
        "irrelevant_tables": [
            "locations",
            "job_history"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1839": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees",
                "binning": "BIN HIRE_DATE BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees BIN HIRE_DATE BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "HIRE_DATE",
            "y_name": "COUNT(HIRE_DATE)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    15,
                    15,
                    16,
                    16,
                    15,
                    15,
                    15
                ]
            ],
            "classify": [],
            "describe": "BIN HIRE_DATE BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Zařaď datum nástupu zaměstnanců do intervalu dnů v týdnu a spočítej je pro vizualizaci sloupcového grafu.",
            "Uveď sloupcový graf, který zobrazuje počet zaměstnanců podle jednotlivých dat nástupu, a rozděl datum nástupu se řadí do intervalu dnů v týdnu."
        ],
        "irrelevant_tables": [
            "departments",
            "countries"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1955": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "JOB_TITLE",
            "y_name": "COUNT(JOB_TITLE)",
            "x_data": [
                [
                    "Sales Manager",
                    "Sales Representative"
                ]
            ],
            "y_data": [
                [
                    5,
                    29
                ]
            ],
            "classify": [],
            "describe": "GROUP BY JOB_TITLE",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu zobraz podíl názvu pracovní pozice pro všechna pracovní místa v oddělení 80.",
            "Jaký je podíl pracovních pozic zaměstnanců v oddělení 80? Můžeš mi udělat koláčový graf."
        ],
        "irrelevant_tables": [
            "departments",
            "job_history"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1961": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance' GROUP BY JOB_ID",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT JOB_ID , COUNT(JOB_ID) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance' GROUP BY JOB_ID"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "JOB_ID",
            "y_name": "COUNT(JOB_ID)",
            "x_data": [
                [
                    "FI_ACCOUNT",
                    "FI_MGR"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY JOB_ID",
            "sort": null
        },
        "nl_queries": [
            "Pro všechny zaměstnance finančního oddělení mi pomocí koláčového grafu ukaž proporce jejich pracovního ID."
        ],
        "irrelevant_tables": [
            "regions",
            "countries"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1966": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT bedType , count(*) FROM Rooms GROUP BY bedType",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT bedType , count(*) FROM Rooms GROUP BY bedType"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "bedType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj koláčový graf s počtem pokojů pro jednotlivé typy lůžek.",
            "Vrať koláčový graf počtu pokojů pro jednotlivé typy lůžek",
            "Jaký je počet pokojů pro jednotlivé typy lůžek? Zobraz koláčový graf.",
            "Udělej mi koláčový graf, který ukáže celkový počet různých typů postelí."
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1968": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "decor",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    112.5,
                    162.5,
                    187.5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz průměrnou cenu pokojů s různým dekorem pomocí koláčového grafu.",
            "Jaký je podíl průměrné základní ceny pokojů pro jednotlivé dekory? Ukaž mi koláčový graf!",
            "Pro zobrazení podílu průměrné ceny pokojů s různým dekorem prosím použij koláčový graf."
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1969": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , avg(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    112.5,
                    162.5,
                    187.5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz průměrnou cenu pokojů s různým dekorem pomocí sloupcového grafu.",
            "Jaká je průměrná cena pokojů s různým dekorem? Ukaž mi sloupcový graf!",
            "Použij sloupcový graf, který zobrazuje průměrnou cenu pokojů s různým dekorem.",
            "Uveď mi sloupcový graf pro průměrnou základní cenu každého dekoru"
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1971": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT decor , min(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "decor",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    75,
                    150,
                    150
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Jaký je podíl minimální ceny pokojů pro jednotlivé dekory? Ukaž mi koláčový graf!",
            "Pro zobrazení podílu minimální ceny pokojů s různým dekorem použij koláčový graf.",
            "Pomocí koláčového grafu zobraz minimální cenu pokojů s různým dekorem."
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1972": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(basePrice)",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    112.5,
                    162.5,
                    187.5
                ]
            ],
            "y_data": [
                [
                    75,
                    150,
                    150
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Prosím o rozptyl pro vizualizaci dvou atributů: průměrné a minimální ceny pokojů v různých dekorech pomocí bodového grafu."
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1973": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(basePrice) , min(basePrice) FROM Rooms GROUP BY decor"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(basePrice)",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    112.5
                ],
                [
                    162.5
                ],
                [
                    187.5
                ]
            ],
            "y_data": [
                [
                    75
                ],
                [
                    150
                ],
                [
                    150
                ]
            ],
            "classify": [
                "modern",
                "rustic",
                "traditional"
            ],
            "describe": "GROUP BY decor",
            "sort": null
        },
        "nl_queries": [
            "Prosím o rozptyl pro vizualizaci tří atributů: průměrné a minimální ceny pokojů v různých dekorech pomocí bodového grafu.",
            "Zobraz průměrnou vs minimální baseprice jako bodový graf. Pro každý dekor použij jinou barvu"
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "1974": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet pokojů s manželskou postelí King pro každý typ dekoru. Vykresli je jako koláčový graf.",
            "Nakresli koláčový graf o tom, kolik pokojů má manželskou postel. Uveď počet pro každý typ dekoru."
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1975": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať sloupcový graf o tom, kolik pokojů má manželskou postel. Uveď počet pro každý typ dekoru.",
            "Kolik pokojů má manželskou postel? Uveď počet pro každý typ dekoru. Vykresli je jako sloupcový graf."
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "1976": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "bedType",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    100,
                    181.25,
                    150
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať koláčový graf o tom, jaká je průměrná základní cena různých typů postelí. Uveď typ lůžka a průměrnou základní cenu.",
            "Vrať koláčový graf o tom, jaká je průměrná základní cena různých typů postelí. Uveď typ lůžka a průměrnou základní cenu.",
            "Jaká je průměrná základní cena různých typů postelí? Uveď typ lůžka a průměrnou základní cenu. Vizualizace pomocí koláčového grafu.",
            "Pro každý typ lůžka zjisti průměrnou základní cenu různých typů lůžek. Vykresli je jako koláčový graf.",
            "Vrať koláčový graf o tom, jaká je průměrná základní cena pokojů pro každý typ lůžka.",
            "Vrať koláčový graf průměrné základní ceny pokojů pro jednotlivé typy lůžek",
            "Jaká je průměrná základní cena pokojů pro jednotlivé typy lůžek. Zobraz koláčový graf.",
            "Vytvoř koláčový graf zobrazující průměrnou základní cenu pro jednotlivé typy lůžek."
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1978": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf o tom, kolik pokojů stojí více než 120, pro každý dekor?",
            "Kolik pokojů stojí více než 120, pro každý dekor. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1980": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "roomName",
            "y_name": "COUNT(roomName)",
            "x_data": [
                [
                    "Convoke and sanguine",
                    "Frugal not apropos",
                    "Harbinger but bequest",
                    "Thrift and accolade"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY roomName",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf o tom, kolik je počet názvů pokojů rezervovaných zákazníky, jejichž křestní jméno obsahuje slovo \"ROY\"?",
            "Jak se jmenují pokoje rezervované zákazníky, jejichž křestní jméno obsahuje slovo \"ROY\", a spočítej je pomocí koláčového grafu",
            "Zjisti názvy pokojů rezervovaných některými zákazníky, jejichž křestní jméno obsahuje ROY, a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro zjištění počtu jmen pokojů rezervovaných některými zákazníky, jejichž křestní jméno obsahuje ROY."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "1990": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Closed , COUNT(Date_Closed) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"",
                "binning": "BIN Date_Closed BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Closed , COUNT(Date_Closed) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\" BIN Date_Closed BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "insurance_fnol",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Closed",
            "y_name": "COUNT(Date_Closed)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Closed BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Získej data uzavření všech pojistek přidružených k zákazníkovi, jehož jméno obsahuje \"Diana“. Rozděl data uzavření do intervalu dnů v týdnu a spočítej je pro sloupcový graf."
        ],
        "irrelevant_tables": [
            "Services",
            "Claims"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "1992": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )",
                "binning": "BIN Date_Claim_Settled BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims ) BIN Date_Claim_Settled BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    2,
                    0,
                    0,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Které ze všech pohledávek mají nárokovanou částku vyšší než průměr? Uveď prosím datum, kdy bylo vypořádáno, do intervalu dnů v týdnu a spočítej je pro zobrazení sloupcového grafu.",
            "U všech pohledávek, jejichž nárokovaná částka je vyšší než průměr, rozděl datum vypořádání do intervalů dnů v týdnu a spočítej je pro vizualizaci sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Customers",
            "Customer_Policies"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2005": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , Amount_Payment FROM Payments GROUP BY Payment_Method_Code ,  Date_Payment_Made ORDER BY Date_Payment_Made ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Payment_Made , Amount_Payment FROM Payments GROUP BY Payment_Method_Code ,  Date_Payment_Made ORDER BY Date_Payment_Made ASC"
        },
        "chart": "Grouping Line",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Payment_Made",
            "y_name": "Amount_Payment",
            "x_data": [
                [
                    "2017-05-03",
                    "2017-05-04",
                    "2017-05-28",
                    "2017-06-24",
                    "2017-07-31",
                    "2017-08-06",
                    "2017-10-07",
                    "2017-12-16",
                    "2018-01-10",
                    "2018-01-19",
                    "2018-01-28",
                    "2018-02-16",
                    "2018-02-18",
                    "2018-02-24"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    177130,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    123255,
                    0,
                    0,
                    0,
                    38324,
                    71246,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    448613,
                    456098,
                    423154,
                    0,
                    0,
                    0,
                    407235,
                    0,
                    319142,
                    241730,
                    235893,
                    0
                ],
                [
                    172309,
                    0,
                    155654,
                    0,
                    0,
                    0,
                    0,
                    459407,
                    0,
                    0,
                    0,
                    0,
                    0,
                    7343
                ]
            ],
            "classify": [
                "American Express",
                "Discover Card",
                "MasterCard",
                "Visa"
            ],
            "describe": "GROUP BY Payment_Method_Code, GROUP BY Date_Payment_Made",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Uveď čárový graf, který zobrazí vývoj částek jednotlivých plateb různých platebních metod seřazených vzestupně podle data platby."
        ],
        "irrelevant_tables": [
            "Settlements",
            "Customer_Policies"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "field"
            }
        ]
    },
    "2009": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Payment_Method_Code",
            "y_name": "COUNT(Payment_Method_Code)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    7,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi podíl jednotlivých kódů platebních metod pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Customer_Policies",
            "Settlements"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2011": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    177130,
                    232825,
                    2531865,
                    794713
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code",
            "sort": null
        },
        "nl_queries": [
            "Kolik činí celkové částky plateb podle jednotlivých kódů metod? Můžeš mi dát sloupcový graf.",
            "Použij sloupcový graf pro zobrazení celkové částky platby podle jednotlivých kódů platebních metod.",
            "Sloupcový graf součtu plateb z jednotlivých kódů platebních metod"
        ],
        "irrelevant_tables": [
            "Customers",
            "Customer_Policies"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2012": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , AVG(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    177130,
                    77608.33333333333,
                    361695,
                    198678.25
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code",
            "sort": null
        },
        "nl_queries": [
            "Jaké jsou průměrné částky plateb podle jednotlivých kódů metod? Můžeš mi dát sloupcový graf.",
            "Použij sloupcový graf pro zobrazení průměrné výše platby podle jednotlivých kódů platebních metod.",
            "Sloupcový graf pro zobrazení průměru platebních částek z různých kódů platebních metod"
        ],
        "irrelevant_tables": [
            "Customer_Policies",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2013": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Payment_Method_Code , SUM(Amount_Payment) FROM Payments GROUP BY Payment_Method_Code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Payment_Method_Code",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "American Express",
                    "Discover Card",
                    "MasterCard",
                    "Visa"
                ]
            ],
            "y_data": [
                [
                    177130,
                    232825,
                    2531865,
                    794713
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code",
            "sort": null
        },
        "nl_queries": [
            "Jaký je podíl celkových částek plateb podle jednotlivých kódů metod? Můžeš mi udělat koláčový graf.",
            "Pomocí koláčového grafu znázorni podíl jednotlivých kódů způsobu platby na celkové částce.",
            "Vytvoř koláčový graf zobrazující celkový počet platebních částek podle kódu platební metody."
        ],
        "irrelevant_tables": [
            "Settlements",
            "Claims"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2014": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "2017-05-03",
                    "2017-05-04",
                    "2017-05-28",
                    "2017-06-24",
                    "2017-07-31",
                    "2017-08-06",
                    "2017-10-07",
                    "2017-12-16",
                    "2018-01-10",
                    "2018-01-19",
                    "2018-01-28",
                    "2018-02-16",
                    "2018-02-18",
                    "2018-02-24"
                ]
            ],
            "y_data": [
                [
                    172309,
                    123255,
                    604267,
                    456098,
                    423154,
                    38324,
                    71246,
                    459407,
                    407235,
                    177130,
                    319142,
                    241730,
                    235893,
                    7343
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_Payment_Made",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz trend celkové částky každé platby v den platby, čárový graf. Dej pozor, abys měl den platby seřazen vzestupně.",
            "Vrať trendovou lini s vzestupným řazením dne platby, která zobrazí celkovou částku platby podle jednotlivých dnů platby."
        ],
        "irrelevant_tables": [
            "Claims",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "2015": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments GROUP BY Date_Payment_Made ORDER BY Date_Payment_Made ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "2017-05-03",
                    "2017-05-04",
                    "2017-05-28",
                    "2017-06-24",
                    "2017-07-31",
                    "2017-08-06",
                    "2017-10-07",
                    "2017-12-16",
                    "2018-01-10",
                    "2018-01-19",
                    "2018-01-28",
                    "2018-02-16",
                    "2018-02-18",
                    "2018-02-24"
                ]
            ],
            "y_data": [
                [
                    172309,
                    123255,
                    302133.5,
                    456098,
                    423154,
                    38324,
                    71246,
                    459407,
                    407235,
                    177130,
                    319142,
                    241730,
                    235893,
                    7343
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_Payment_Made",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať trendovou linii, která zobrazí průměrnou částku platby podle jednotlivých platebních dnů.",
            "Zobrazení trendu průměrné výše každé platby v den platby, čárový graf. Dej pozor, abys měl den platby seřazen vzestupně.",
            "Vrať trendovou linii s vzestupným řazením dne platby, která zobrazí průměrnou částku platby podle jednotlivých dnů platby."
        ],
        "irrelevant_tables": [
            "Customers",
            "Claims"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "2018": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements",
                "binning": "BIN Date_Claim_Settled BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements BIN Date_Claim_Settled BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    4,
                    2,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Settled BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Zařaď datum vypořádání pro každý případ vypořádání do intervalu dne v týdnu a spočítej je pro vizualizaci sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Payments",
            "Customer_Policies"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2019": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements",
                "binning": "BIN Date_Claim_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Settlements BIN Date_Claim_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "2016",
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    4,
                    8,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Zařaď datum reklamace do intervalu Rok a spočítej je pro vizualizaci sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Payments",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2021": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_Claim_Settled , COUNT(Date_Claim_Settled) FROM Settlements GROUP BY Date_Claim_Settled"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_Claim_Settled",
            "y_name": "COUNT(Date_Claim_Settled)",
            "x_data": [
                [
                    "2017-10-06",
                    "2017-11-04",
                    "2017-11-15",
                    "2017-11-30",
                    "2017-12-24",
                    "2018-01-16",
                    "2018-01-27",
                    "2018-02-04",
                    "2018-02-11",
                    "2018-02-14",
                    "2018-02-15",
                    "2018-02-20",
                    "2018-03-02"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_Claim_Settled",
            "sort": null
        },
        "nl_queries": [
            "Vykresli datum vyřízené reklamace podle počtu vyřízených reklamací v podobě čárového grafu"
        ],
        "irrelevant_tables": [
            "Customers",
            "Claims"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2027": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , SUM(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa' BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "SUM(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    787370,
                    7343
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu sečti částku za všechny platby zpracované pomocí karty Visa v jednotlivých letech."
        ],
        "irrelevant_tables": [
            "Settlements",
            "Claims"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2036": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa' BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    172309,
                    0,
                    0,
                    233375,
                    155654
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu vypočítej průměrnou částku za všechny platby zpracované kartou Visa v jednotlivých dnech týdne."
        ],
        "irrelevant_tables": [
            "Claims",
            "Customer_Policies"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2059": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Gra\u017cyna Wolszczak",
                    "Kamila Porczyk",
                    "Maria G\u00f3ralczyk",
                    "W\u0142adys\u0142aw Grzywna"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf zobrazující počet jmen redaktorů, kteří jsou členy výboru časopisů s obratem vyšším než 3000 výtisků.",
            "Uveď jména redaktorů, kteří jsou členy výboru časopisů s obratem vyšším než 3000 výtisků, a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2065": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%'"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "loan_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "cust_name",
            "y_name": "acc_bal",
            "x_data": [
                [
                    "Mary",
                    "Jack"
                ]
            ],
            "y_data": [
                [
                    2000,
                    1000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti jméno a zůstatek na účtu zákazníka, jehož jméno obsahuje písmeno \"a\". Zobraz koláčový graf.",
            "Nakresli koláčový graf, jaká jsou jména a zůstatky na účtech zákazníků s písmenem a ve jméně.",
            "Vrať koláčový graf, jaká jsou jména a zůstatky na účtech zákazníků s písmenem a ve jméně."
        ],
        "irrelevant_tables": [
            "loan",
            "bank"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2067": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT acc_type , avg(acc_bal) FROM customer WHERE credit_score < 50 GROUP BY acc_type"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "loan_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "acc_type",
            "y_name": "avg(acc_bal)",
            "x_data": [
                [
                    "checking",
                    "saving"
                ]
            ],
            "y_data": [
                [
                    1000,
                    2000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro každý typ účtu zjisti průměrný zůstatek na účtu zákazníků s úvěrovým skóre nižším než 50. Zobraz koláčový graf.",
            "Ukaž mi koláčový graf, jaký je průměrný zůstatek na účtu zákazníků s úvěrovým skóre nižším než 50 pro různé typy účtů?"
        ],
        "irrelevant_tables": [
            "loan",
            "bank"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2071": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "loan_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "bname",
            "y_name": "sum(amount)",
            "x_data": [
                [
                    "broadway",
                    "downtown",
                    "morningside"
                ]
            ],
            "y_data": [
                [
                    5000,
                    3000,
                    2050
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf o tom, jak se jmenují jednotlivé pobočky bank a jaká je jejich celková výše úvěrů?",
            "Zobraz koláčový graf: jak se jmenují jednotlivé pobočky banky a jaké jsou jejich celkové částky úvěrů?"
        ],
        "irrelevant_tables": [
            "customer"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2074": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    7,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code",
            "sort": null
        },
        "nl_queries": [
            "Uveď mi koláčový graf, který zobrazí podíl jednotlivých typů věcí, které mají stav \"Zavřít\" nebo mají záznam o stavu před datem \"2017-06-19 02:59:21\"."
        ],
        "irrelevant_tables": [
            "Customer_Events",
            "Properties"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2093": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "pie",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Denesik and Sons Party",
                    "Reinger, Hudson and Nolan Group",
                    "Robel-Schulist Group"
                ]
            ],
            "y_data": [
                [
                    10,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organization_details",
            "sort": null
        },
        "nl_queries": [
            "Udělej mi koláčový graf, kde na ose X jsou údaje o organizaci a osa Y je počet věcí, které vlastní.",
            "Zobraz počet položek podle údajů o organizaci, která je vlastní, pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Properties",
            "Timed_Locations_of_Things"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2096": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY date_moved_in"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015-03-27",
                    "2016-09-27"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in",
            "sort": null
        },
        "nl_queries": [
            "Použij sloupcový graf pro porovnání počtu zákazníků jednotlivých dat nastěhování."
        ],
        "irrelevant_tables": [
            "Residents",
            "Residents_Services"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2110": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events",
                "binning": "BIN date_moved_in BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Seskup a spočítej pohyb v datu ve sloupcovém grafu a chci abys rozdělil X do intervalu Rok.",
            "Udělej mi sloupcový graf, kde na ose X je date_moved_in a na ose Y je Počet. Prosím, rozděl osu X do intervalu Rok."
        ],
        "irrelevant_tables": [
            "Services",
            "Timed_Locations_of_Things"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2119": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    4,
                    0,
                    0,
                    9,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Seskup a spočítej datum pohybu ve sloupcovém grafu a rozděl osu X na intervaly v týdnu.",
            "Udělej mi sloupcový graf, na jehož ose X je date_moved_in a na ose Y je Počet. Prosím, rozděl osu X do intervalu Den v týdnu."
        ],
        "irrelevant_tables": [
            "Things",
            "Organizations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2132": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Event_Details , COUNT(Event_Details) FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage' GROUP BY Event_Details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Event_Details , COUNT(Event_Details) FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage' GROUP BY Event_Details"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "local_govt_in_alabama",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Event_Details",
            "y_name": "COUNT(Event_Details)",
            "x_data": [
                [
                    "Fail",
                    "Success"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Event_Details",
            "sort": null
        },
        "nl_queries": [
            "Jaké jsou podrobnosti o událostech služeb, které mají kód typu \"Manželství\", a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "Participants",
            "Participants_in_Events"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2144": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Participant_Type_Code , AVG(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Participant_Type_Code , AVG(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_in_alabama",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Participant_Type_Code",
            "y_name": "AVG(count(*))",
            "x_data": [
                [
                    "Organizer",
                    "Participant"
                ]
            ],
            "y_data": [
                [
                    1.5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Participant_Type_Code",
            "sort": null
        },
        "nl_queries": [
            "Kolika akcí se jednotliví účastníci zúčastnili? Zobraz jejich průměrný počet podle jednotlivých kódů typů účastníků pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Services"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2155": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "pie",
            "x_name": "cmi_details",
            "y_name": "COUNT(cmi_details)",
            "x_data": [
                [
                    "Reynolds-McClure",
                    "Schmidt, Kertzmann and Lubowitz",
                    "Schmitt-Lang",
                    "Volkman, Mills and Ferry"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY cmi_details",
            "sort": null
        },
        "nl_queries": [
            "Jaké jsou podrobnosti o cmi masters, které mají křížový referenční kód \"Daň\", a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "Rent_Arrears",
            "Benefits_Overpayments"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2161": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Eddie Collins",
                    "Joe Sewell",
                    "Tony Sewell"
                ]
            ],
            "y_data": [
                [
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf pro počet jmen techniků, kteří jsou přiděleni k opravě strojů s více bodovými hodnotami než 70?",
            "Jak se jmenují technici, kteří jsou přiděleni k opravě strojů s více bodovými hodnotami než 70, a spočítej je pomocí koláčového grafu",
            "Zobraz jména techniků, kteří jsou přiděleni k opravě strojů s bodovou hodnotou vyšší než 70, a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2166": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Charlie Hollocher",
                    "Eddie Collins",
                    "Joe Sewell",
                    "John Brown",
                    "Tony Sewell"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu zobraz jména techniků a počet strojů, které mají opravit."
        ],
        "irrelevant_tables": [
            "machine"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2167": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Charlie Hollocher",
                    "Eddie Collins",
                    "Joe Sewell",
                    "John Brown",
                    "Tony Sewell"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zobraz jména techniků a počet strojů, které mají opravit.",
            "Zobraz jména techniků a počet strojů, které jsou jim přiděleny k opravě. Vizualizace pomocí sloupcového grafu.",
            "Zobraz sloupcový graf: jaká jsou jména techniků a kolik strojů je jim přiděleno k opravě?"
        ],
        "irrelevant_tables": [
            "machine"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2168": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM technician GROUP BY Team",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM technician GROUP BY Team"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "CHC",
                    "CLE",
                    "CWS",
                    "NYY",
                    "PHA"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz různé týmy techniků a počet techniků v jednotlivých týmech v koláčovém grafu.",
            "Zobraz různé týmy techniků a počet techniků v každém týmu. Zobraz koláčový graf.",
            "Kolik je v každém týmu techniků? Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "repair",
            "machine"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2170": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID GROUP BY Name ORDER BY T2.quality_rank",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID GROUP BY Name ORDER BY T2.quality_rank"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Charlie Hollocher",
                    "Eddie Collins",
                    "Joe Sewell",
                    "John Brown",
                    "Tony Sewell"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz jména techniků ve vzestupném pořadí podle stupně kvality stroje, který jim byl přidělen, a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2171": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID GROUP BY Name ORDER BY T2.quality_rank",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID GROUP BY Name ORDER BY T2.quality_rank"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Charlie Hollocher",
                    "Eddie Collins",
                    "Joe Sewell",
                    "John Brown",
                    "Tony Sewell"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz jména techniků ve vzestupném pořadí podle stupně kvality stroje, který jim byl přidělen, a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf o tom, jaký je počet jmen techniků podle vzestupného pořadí stupně kvality pro stroj, který jim byl přidělen.",
            "Jaká jsou jména techniků podle vzestupného pořadí stupně kvality pro stroj, který jim byl přidělen, a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2172": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM products WHERE price <= 200 GROUP BY Name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "CD drive",
                    "DVD burner",
                    "DVD drive",
                    "Floppy disk",
                    "Memory",
                    "Toner cartridge",
                    "ZIP drive"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Vyber názvy produktů s cenou nižší nebo rovnou 200 USD a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf pro jaký počet názvů výrobků s cenou nejvýše 200?",
            "Jak se jmenují výrobky s cenou nejvýše 200 a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Manufacturers"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2174": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , max(revenue) FROM manufacturers GROUP BY Headquarter",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , max(revenue) FROM manufacturers GROUP BY Headquarter"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "max(revenue)",
            "x_data": [
                [
                    "Creative Labs",
                    "Iomega",
                    "Hewlett-Packard",
                    "Winchester",
                    "Fujitsu",
                    "Sony"
                ]
            ],
            "y_data": [
                [
                    100,
                    200,
                    50,
                    30,
                    130,
                    120
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Uveď sloupcový graf, který zobrazuje názvy a tržby společností, které dosahují nejvyšších tržeb v jednotlivých městech sídla."
        ],
        "irrelevant_tables": [
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2180": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM Products GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM Products GROUP BY Name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "CD drive",
                    "DVD burner",
                    "DVD drive",
                    "Floppy disk",
                    "Hard drive",
                    "Memory",
                    "Monitor",
                    "Printer",
                    "Toner cartridge",
                    "ZIP drive"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf pro jaký počet názvů všech výrobků?",
            "Vyber názvy všech produktů v obchodě a spočítej je pomocí sloupcového grafu",
            "Jaké jsou názvy všech výrobků? Spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Manufacturers"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2181": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , sum(revenue) FROM manufacturers GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , sum(revenue) FROM manufacturers GROUP BY name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "sum(revenue)",
            "x_data": [
                [
                    "Creative Labs",
                    "Fujitsu",
                    "Hewlett-Packard",
                    "Iomega",
                    "Sony",
                    "Winchester"
                ]
            ],
            "y_data": [
                [
                    100,
                    130,
                    50,
                    200,
                    120,
                    30
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti celkové tržby každého výrobce. Vykresli je jako sloupcový graf.",
            "Sloupcový graf o tom, jaké jsou celkové tržby jednotlivých výrobců.",
            "Vrať sloupcový graf o tom, jaké jsou celkové tržby jednotlivých výrobců?",
            "Sloupcový graf pro zobrazení součtu příjmů z různých názvů"
        ],
        "irrelevant_tables": [
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2218": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarter , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarter",
            "y_name": "SUM(Price)",
            "x_data": [
                [
                    "Austin",
                    "Beijing",
                    "Los Angeles",
                    "Paris",
                    "Taiwan",
                    "Tokyo"
                ]
            ],
            "y_data": [
                [
                    450,
                    150,
                    486,
                    125,
                    240,
                    240
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarter",
            "sort": null
        },
        "nl_queries": [
            "Pro tyto záznamy z výrobků a výrobce každého výrobku nakresli sloupcový graf o rozložení sídla a součtu ceny , a seskup je podle atributu sídlo.",
            "Pro tyto záznamy z produktů a výrobce každého produktu najdi sídlo a součet ceny a seskup je podle atributu sídlo a vizualizuj je pomocí sloupcového grafu.",
            "Pro tyto záznamy z produktů a výrobce každého produktu vrať sloupcový graf o rozdělení sídla a součtu cen a seskup je podle atributu sídlo.",
            "Pro tyto záznamy z produktů a výrobce každého produktu mi udělej srovnání součtu cen za sídlo a seskup je podle atributu sídlo pomocí sloupcového grafu.",
            "U těchto záznamů z produktů a každého výrobce produktu se ve sloupcovém grafu zobrazí rozdělení sídla a součet ceny a seskupení podle atributu sídlo."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2219": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarter , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarter",
            "y_name": "AVG(Price)",
            "x_data": [
                [
                    "Austin",
                    "Beijing",
                    "Los Angeles",
                    "Paris",
                    "Taiwan",
                    "Tokyo"
                ]
            ],
            "y_data": [
                [
                    150,
                    150,
                    162,
                    62.5,
                    240,
                    240
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarter",
            "sort": null
        },
        "nl_queries": [
            "Pro tyto záznamy z produktů a výrobce každého produktu mi udělej srovnání o průměru ceny přes sídlo, a seskup je podle atributu sídlo pomocí sloupcového grafu.",
            "Pro tyto záznamy z výrobků a výrobce každého výrobku vrať sloupcový graf o rozdělení sídla a průměru ceny , a seskup je podle atributu sídlo.",
            "Pro tyto záznamy z výrobků a výrobce každého výrobku nakresli sloupcový graf o rozdělení sídla a průměru ceny, a seskup je podle atributu sídlo.",
            "U těchto záznamů z výrobků a každého výrobce výrobku je ve sloupcovém grafu zobrazeno rozdělení sídla a průměr ceny, seskupeno podle atributu sídlo."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2226": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Founder , COUNT(Founder) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Founder , COUNT(Founder) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Founder",
            "y_name": "COUNT(Founder)",
            "x_data": [
                [
                    "Andy",
                    "James",
                    "John",
                    "Mary",
                    "Owen",
                    "Robert"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1,
                    1,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Founder",
            "sort": null
        },
        "nl_queries": [
            "Pro tyto záznamy z výrobků a každého výrobce výrobku nakresli sloupcový graf o rozložení zakladatele a množství zakladatele , a seskup je podle atributu zakladatel.",
            "Pro tyto záznamy z výrobků a každého výrobce výrobku vrať sloupcový graf o rozložení zakladatele a množství zakladatele, a seskup je podle atributu zakladatel.",
            "Pro tyto záznamy z výrobků a každého výrobce výrobku vizualizuj sloupcový graf o rozložení zakladatele a množství zakladatele, a seskup je podle atributu zakladatel.",
            "Pro tyto záznamy z výrobků a každého výrobce výrobku mi poskytni srovnání o množství zakladatele nad zakladatelem, a seskup podle atributu zakladatel pomocí sloupcového grafu.",
            "U těchto záznamů z výrobků a každého výrobce výrobku mi ukaž o rozložení zakladatele a množství zakladatele, a seskup je podle atributu zakladatel do sloupcového grafu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2229": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Founder , SUM(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Founder",
            "y_name": "SUM(Price)",
            "x_data": [
                [
                    "Andy",
                    "James",
                    "John",
                    "Mary",
                    "Owen",
                    "Robert"
                ]
            ],
            "y_data": [
                [
                    240,
                    486,
                    240,
                    150,
                    450,
                    125
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Founder",
            "sort": null
        },
        "nl_queries": [
            "U těchto záznamů z výrobků a každého výrobce výrobku mi zobraz o rozdělení zakladatele a součtu ceny, a seskup podle atributu zakladatel ve sloupcovém grafu.",
            "Pro tyto záznamy z výrobků a výrobce každého výrobku vizualizuj sloupcový graf o rozložení zakladatele a součtu ceny, a seskup je podle atributu zakladatel.",
            "Pro tyto záznamy z výrobků a každého výrobce výrobku najdi zakladatele a součet ceny, seskup je podle atributu zakladatel a vizualizuj je pomocí sloupcového grafu.",
            "Pro tyto záznamy z výrobků a výrobce každého výrobku mi udělej srovnání o součtu ceny nad zakladatelem, a seskup podle příznaku zakladatel pomocí sloupcového grafu.",
            "U těchto záznamů z výrobků a každého výrobce výrobku je ve sloupcovém grafu zobrazeno rozdělení zakladatele a součet ceny, seskupeno podle atributu zakladatel."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2230": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Founder , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Founder , AVG(Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Founder",
            "y_name": "AVG(Price)",
            "x_data": [
                [
                    "Andy",
                    "James",
                    "John",
                    "Mary",
                    "Owen",
                    "Robert"
                ]
            ],
            "y_data": [
                [
                    240,
                    162,
                    240,
                    150,
                    150,
                    62.5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Founder",
            "sort": null
        },
        "nl_queries": [
            "U těchto záznamů z výrobků a každého výrobce výrobku mi ukaž rozdělení zakladatele a průměr ceny. Seskup je podle atributu zakladatel do sloupcového grafu.",
            "Pro tyto záznamy z výrobků a každého výrobce výrobku vizualizuj sloupcový graf o rozložení zakladatele a průměru ceny, a seskup je podle atributu zakladatel.",
            "Pro tyto záznamy z výrobků a každého výrobce výrobku najdi zakladatele a průměr ceny, seskup je podle atributu zakladatel a vizualizuj je pomocí sloupcového grafu.",
            "Pro tyto záznamy z výrobků a výrobce každého výrobku mi poskytněte srovnání o průměru ceny přes zakladatele, a seskup je podle příznaku zakladatel pomocí sloupcového grafu.",
            "Pro tyto záznamy z výrobků a výrobce každého výrobku vrať sloupcový graf o rozdělení zakladatele a průměru ceny, a seskup je podle atributu zakladatel."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2270": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Price",
            "y_name": "Revenue",
            "x_data": [
                [
                    240,
                    120,
                    150,
                    5,
                    240,
                    180,
                    90,
                    270,
                    66,
                    180,
                    150
                ]
            ],
            "y_data": [
                [
                    130,
                    30,
                    200,
                    30,
                    120,
                    100,
                    100,
                    50,
                    50,
                    100,
                    50
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro tyto záznamy o produktech a výrobcích jednotlivých produktů nakresli bodový graf závislosti mezi cenou a tržbami.",
            "Pro tyto záznamy z výrobků a výrobcích jednotlivých výrobků vrať bodový graf závislosti mezi cenou a tržbami.",
            "Pro tyto záznamy z výrobků a výrobcích jednotlivých produktů zobraz bodový graf o korelaci mezi cenou a tržbami",
            "Pro tyto záznamy z výrobků a výrobcích jednotlivých výrobků je v rozptylovém grafu znázorněna závislost mezi cenou a tržbami."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2280": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT T1.Price , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT T1.Price , T2.Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Name"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Price",
            "y_name": "Revenue",
            "x_data": [
                [
                    180,
                    90,
                    180
                ],
                [
                    240
                ],
                [
                    270,
                    66,
                    150
                ],
                [
                    150
                ],
                [
                    240
                ],
                [
                    120,
                    5
                ]
            ],
            "y_data": [
                [
                    100,
                    100,
                    100
                ],
                [
                    130
                ],
                [
                    50,
                    50,
                    50
                ],
                [
                    200
                ],
                [
                    120
                ],
                [
                    30,
                    30
                ]
            ],
            "classify": [
                "Creative Labs",
                "Fujitsu",
                "Hewlett-Packard",
                "Iomega",
                "Sony",
                "Winchester"
            ],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Pro tyto záznamy z výrobků a každého výrobce produktu je v rozptylovém grafu zobrazena korelace mezi cenou a tržbami, a to barevně podle názvu výrobce.",
            "Pro tyto záznamy z výrobků a každého výrobce výrobku mi ukaž korelaci mezi cenou a tržbami, a to barevně podle názvu výrobce v rozptylovém grafu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "2289": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Price",
            "y_name": "Revenue",
            "x_data": [
                [
                    180,
                    90,
                    180
                ],
                [
                    150
                ],
                [
                    270,
                    66,
                    150
                ],
                [
                    120,
                    5
                ],
                [
                    240
                ],
                [
                    240
                ]
            ],
            "y_data": [
                [
                    100,
                    100,
                    100
                ],
                [
                    200
                ],
                [
                    50,
                    50,
                    50
                ],
                [
                    30,
                    30
                ],
                [
                    130
                ],
                [
                    120
                ]
            ],
            "classify": [
                "Austin",
                "Beijing",
                "Los Angeles",
                "Paris",
                "Taiwan",
                "Tokyo"
            ],
            "describe": "GROUP BY Headquarter",
            "sort": null
        },
        "nl_queries": [
            "Pro tyto záznamy z výrobků a každého výrobce produktu nakresli bodový graf o korelaci mezi cenou a tržbami, a seskup je podle atributu sídlo.",
            "Pro tyto záznamy z výrobků a výrobce každého produktu vrať bodový graf o korelaci mezi cenou a tržbami, a seskup je podle atributu sídlo.",
            "Pro tyto záznamy z výrobků a každého výrobce produktu vizualizuj bodový graf o korelaci mezi cenou a tržbami, a seskup je podle atributu sídlo.",
            "Pro tyto záznamy z výrobků a výrobce každého výrobku mi ukaž korelaci mezi cenou a tržbami, a seskup je podle atributu sídlo do bodového grafu.",
            "Pro tyto záznamy z výrobků a každého výrobce výrobku je v rozptylovém grafu zobrazena korelace mezi cenou a tržbami, a to ve skupině podle atributu sídlo."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "2299": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Price , Revenue FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Price",
            "y_name": "Revenue",
            "x_data": [
                [
                    240
                ],
                [
                    270,
                    66,
                    150
                ],
                [
                    240
                ],
                [
                    150
                ],
                [
                    180,
                    90,
                    180
                ],
                [
                    120,
                    5
                ]
            ],
            "y_data": [
                [
                    120
                ],
                [
                    50,
                    50,
                    50
                ],
                [
                    130
                ],
                [
                    200
                ],
                [
                    100,
                    100,
                    100
                ],
                [
                    30,
                    30
                ]
            ],
            "classify": [
                "Andy",
                "James",
                "John",
                "Mary",
                "Owen",
                "Robert"
            ],
            "describe": "GROUP BY Founder",
            "sort": null
        },
        "nl_queries": [
            "Pro tyto záznamy z výrobků a každého výrobce výrobku zobraz vztah mezi cenou a tržbami pomocí bodového grafu a barevně podle zakladatele atributu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "2303": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Revenue FROM manufacturers ORDER BY revenue DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Revenue FROM manufacturers ORDER BY revenue DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Revenue",
            "x_data": [
                [
                    "Iomega",
                    "Fujitsu",
                    "Sony",
                    "Creative Labs",
                    "Hewlett-Packard",
                    "Winchester"
                ]
            ],
            "y_data": [
                [
                    200,
                    130,
                    120,
                    100,
                    50,
                    30
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Ukaž mi prosím sloupcový graf pro zobrazení názvu a příjmů všech výrobců seřazených podle jejich příjmů v sestupném pořadí.",
            "Jaké jsou názvy a tržby výrobců seřazené podle tržeb sestupně ve sloupcovém grafu?"
        ],
        "irrelevant_tables": [
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2304": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarter , Revenue FROM manufacturers ORDER BY revenue DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarter , Revenue FROM manufacturers ORDER BY revenue DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarter",
            "y_name": "Revenue",
            "x_data": [
                [
                    "Beijing",
                    "Taiwan",
                    "Tokyo",
                    "Austin",
                    "Los Angeles",
                    "Paris"
                ]
            ],
            "y_data": [
                [
                    200,
                    130,
                    120,
                    100,
                    50,
                    30
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Uveď sloupcový graf se sídly a příjmy výrobců seřazený sestupně podle příjmů."
        ],
        "irrelevant_tables": [
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2307": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "manufacturer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "Num_of_Component",
            "x_data": [
                [
                    "Billiard table",
                    "Dining set"
                ]
            ],
            "y_data": [
                [
                    14,
                    12
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti množství a názvy součástí všech nábytků, které mají více než 10 součástí. Ukaž mi poměr částí složek pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "furniture_manufacte",
            "manufacturer"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2309": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "manufacturer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Chevrolet House",
                    "Jiaju",
                    "Chevrolet",
                    "Tomorrow"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet typů nábytku vyráběných jednotlivými výrobci a názvy společností. Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2311": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , Market_Rate FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "manufacturer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "Market_Rate",
            "x_data": [
                [
                    "Bench",
                    "Four-poster bed"
                ]
            ],
            "y_data": [
                [
                    3.5,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj názvy a podíly na trhu nábytku, který v našich záznamech nevyrábí žádná společnost, pomocí koláčového grafu.",
            "Prosím o koláčový graf, který by znázornil podíl různých názvů nábytku na trhu, který v našich záznamech žádná společnost nevyrábí."
        ],
        "irrelevant_tables": [
            "manufacturer"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2343": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Panasonic Leica DG Nocticron 42.5mm f /1.2",
                    "Panasonic Lumix G 150mm f /2.8",
                    "Olympus 15mm f/8.0 Body Cap",
                    "Schneider Kreuznach Super Angulon 14mm f /2.0",
                    "Sigma 19mm f2.8 EX DN"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi koláčový graf o tom, jak se jmenují jednotlivé kontinenty a kolik je na nich výrobců automobilů? Seřaď výsledek podle počtu fotografií.",
            "Vizualizuj koláčový graf s názvem jednotlivých objektivů fotoaparátu a počtem fotografií jimi pořízených. Seřaď výsledek podle počtu fotografií.",
            "Jak se jmenuje každý objektiv fotoaparátu a počet fotografií, které jím byly pořízeny? Seřaď výsledek podle počtu fotografií. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "mountain"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2344": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Panasonic Leica DG Nocticron 42.5mm f /1.2",
                    "Panasonic Lumix G 150mm f /2.8",
                    "Olympus 15mm f/8.0 Body Cap",
                    "Schneider Kreuznach Super Angulon 14mm f /2.0",
                    "Sigma 19mm f2.8 EX DN"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o tom, jak se jmenuje každý objektiv fotoaparátu a počet fotografií jím pořízených? Seřaď výsledek podle počtu fotografií vzestupně.",
            "Zobraz sloupcový graf, jak se jmenují jednotlivé objektivy fotoaparátů a počet fotografií jimi pořízených. Seřaď výsledek podle počtu fotografií vzestupně.",
            "Jak se jmenuje každý objektiv fotoaparátu a počet fotografií, které jím byly pořízeny? Seřaď výsledek podle počtu fotografií vzestupně. Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "mountain"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2346": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.name , COUNT(T1.name) FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus' GROUP BY T1.name"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "deers",
                    "grass",
                    "life",
                    "monkey",
                    "rabbits",
                    "the mountain"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf pro počet názvů fotografií pořízených objektivem značky \"Sigma\" nebo \"Olympus\"?",
            "Jak se jmenují fotografie pořízené objektivem značky 'Sigma' nebo 'Olympus‘? Spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "mountain"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2348": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "pie",
            "x_name": "brand",
            "y_name": "COUNT(brand)",
            "x_data": [
                [
                    "Olympus",
                    "Panasonic",
                    "Schneider Kreuznach",
                    "Sigma"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY brand",
            "sort": null
        },
        "nl_queries": [
            "Spočítej značku každého objektivu fotoaparátu pomocí koláčového grafu.",
            "Vypočítej celkový počet značek napříč značkami jako koláčový graf."
        ],
        "irrelevant_tables": [
            "photos",
            "mountain"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2350": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT color , COUNT(color) FROM photos GROUP BY color"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "pie",
            "x_name": "color",
            "y_name": "COUNT(color)",
            "x_data": [
                [
                    "Black/White",
                    "RBG"
                ]
            ],
            "y_data": [
                [
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY color",
            "sort": null
        },
        "nl_queries": [
            "Seskup a spočítej barevné schéma všech fotografií pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "camera_lens",
            "mountain"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2351": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT color , COUNT(color) FROM photos GROUP BY color",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT color , COUNT(color) FROM photos GROUP BY color"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "color",
            "y_name": "COUNT(color)",
            "x_data": [
                [
                    "Black/White",
                    "RBG"
                ]
            ],
            "y_data": [
                [
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY color",
            "sort": null
        },
        "nl_queries": [
            "Porovnej počet položek v jednotlivých barevných schématech pomocí sloupcového grafu.",
            "Nakresli sloupcový graf, který zobrazí celkový počet různých barev.",
            "Sloupcový graf osa x barva osa y počet barev"
        ],
        "irrelevant_tables": [
            "camera_lens",
            "mountain"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2359": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "director",
            "y_name": "count(*)",
            "x_data": [
                [
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať koláčový graf o tom, kolik recenzí filmů získávají jednotliví režiséři.",
            "Kolik filmových recenzí získá každý režisér? Vizualizace pomocí koláčového grafu.",
            "Kolik recenzí obdržel každý režisér? Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2371": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.title , AVG(min(T1.stars)) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T2.title"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj titul a jeho nejnižší hodnocení filmu pomocí sloupcového grafu.",
            "Vrať mi prosím sloupcový graf, který ukáže, jaké je nejmenší hodnocení různých filmových titulů?",
            "Vizualizuj nejnižší hodnocení různých filmových titulů pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2387": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY director"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz režiséra a jeho nejnižší hodnocení mezi všemi filmy ve sloupcovém grafu.",
            "Porovnej nejnižší hodnocení mezi všemi filmy jednotlivých režisérů pomocí sloupcového grafu.",
            "Představ si prosím sloupcový graf, kde na ose X je režisér a na ose Y je odpovídající nejnižší hodnocení ze všech filmů. "
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2397": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "director",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "James Cameron",
                    "Robert Wise",
                    "Steven Spielberg",
                    "Victor Fleming"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro každého režiséra vrať jeho jméno spolu s nejvyšším hodnocením ze všech jeho filmů a ignorujte filmy, jejichž režisér je NULL. Mohl bys výsledek zobraz pomocí koláčového grafu?"
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2403": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars >= 4  ORDER BY T1.year"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "1937",
                    "1939",
                    "1981",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "V jakých letech získal film 4 nebo 5 hvězdiček a uveď roky od nejstaršího po nejnovější a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2416": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , Level_of_membership FROM visitor WHERE Level_of_membership > 4"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "museum_visit",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "Level_of_membership",
            "x_data": [
                [
                    "Fernando Gago",
                    "Gonzalo Higua\u00edn ",
                    "Guti Midfielder"
                ]
            ],
            "y_data": [
                [
                    6,
                    8,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti jméno a úroveň členství návštěvníků, jejichž úroveň členství je vyšší než 4. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "museum"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2422": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT languages , avg(rating) FROM song GROUP BY languages"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "music_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "languages",
            "y_name": "avg(rating)",
            "x_data": [
                [
                    "bangla",
                    "english"
                ]
            ],
            "y_data": [
                [
                    7.5,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Jaké je průměrné hodnocení písní v jednotlivých jazycích. Vykresli je jako koláčový graf.",
            "Vrať koláčový graf s průměrným hodnocením písní v jednotlivých jazycích",
            "Zobraz koláčový graf pro průměrné hodnocení písně v jednotlivých jazycích.",
            "Udělej mi koláčový graf, který zobrazí průměrné hodnocení z různých jazyků."
        ],
        "irrelevant_tables": [
            "genre",
            "files"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2428": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT g_name , rating FROM genre ORDER BY g_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT g_name , rating FROM genre ORDER BY g_name"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "music_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "g_name",
            "y_name": "rating",
            "x_data": [
                [
                    "blues",
                    "folk",
                    "modern",
                    "nazrul",
                    "pop",
                    "tagore"
                ]
            ],
            "y_data": [
                [
                    7,
                    9,
                    8,
                    7,
                    9,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš názvy všech žánrů v abecedním pořadí a jejich hodnocení ve sloupcovém grafu.",
            "Seznam názvů všech žánrů v abecedním pořadí spolu s jejich hodnocením. Vykresli je jako sloupcový graf.",
            "Ukaž mi sloupcový graf, kde jsou názvy všech žánrů v abecedním pořadí v kombinaci s jejich hodnocením.",
            "Vrať sloupcový graf s názvy všech žánrů v abecedním pořadí v kombinaci s jejich hodnocením.",
            "Jaké jsou názvy všech žánrů v abecedním pořadí v kombinaci s jejich hodnocením? Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "files",
            "song"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2429": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "music_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "country",
            "y_name": "COUNT(country)",
            "x_data": [
                [
                    "Bangladesh",
                    "India"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY country",
            "sort": null
        },
        "nl_queries": [
            "Jaká je země původu umělkyně, která je ženského pohlaví a vytvořila píseň v bengálštině, a spočítej je pomocí koláčového grafu",
            "Z jakých zemí pocházejí umělkyně, které zpívaly v bengálštině, a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "genre",
            "files"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2432": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT genre_is , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY genre_is ORDER BY T2.genre_is",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT genre_is , min(T2.rating) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY genre_is ORDER BY T2.genre_is"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "music_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "genre_is",
            "y_name": "min(T2.rating)",
            "x_data": [
                [
                    "blues",
                    "folk",
                    "modern",
                    "nazrul",
                    "pop",
                    "tagore"
                ]
            ],
            "y_data": [
                [
                    6,
                    7,
                    10,
                    5,
                    8,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké jsou písně a jaká jsou nejnižší hodnocení písní seskupených podle žánrů a seřazených podle žánru vzestupně? Vykresli je pomocí sloupcového grafu.",
            "Můžeš nakreslit sloupcový graf, kde X je žánr a Y je jejich nejnižší hodnocení písní seskupených podle žánru vzestupně a seřazených podle žánru?"
        ],
        "irrelevant_tables": [
            "artist"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "2437": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Famous_Title , Age FROM artist ORDER BY Age DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Famous_Title , Age FROM artist ORDER BY Age DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "music_4",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Artist",
            "y_name": "Age",
            "x_data": [
                [
                    "Gorgoroth",
                    "Ophiolatry",
                    "Black Flame",
                    "Tangorodrim",
                    "Triumfall"
                ]
            ],
            "y_data": [
                [
                    34,
                    22,
                    18,
                    27,
                    49
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik let bylo těmto zpěvákům, když poprvé obdrželi slavnou dlaždici, vizualizuj pomocí sloupcového grafu a v sestupném pořadí podle věku?"
        ],
        "irrelevant_tables": [
            "volume",
            "music_festival"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2440": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "music_4",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Awarded",
                    "Nominated"
                ]
            ],
            "y_data": [
                [
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result",
            "sort": null
        },
        "nl_queries": [
            "Vrať výsledky všech hudebních festivalů pomocí koláčového grafu.",
            "Jaký je podíl výsledků jednotlivých hudebních festivalů? Můžeš mi ukázat výsledek pomocí koláčového grafu?",
            "Prosím o koláčový graf, který by zobrazoval podíl výsledků všech hudebních festivalů.",
            "Vytvoř koláčový graf zobrazující počet výsledků v jednotlivých výsledcích."
        ],
        "irrelevant_tables": [
            "artist",
            "volume"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2442": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "musical",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "The Phantom of the Opera",
                    "Les Mis\u00e9rables",
                    "West Side Story",
                    "The Book of Mormon"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz názvy muzikálů a počet herců, kteří v nich účinkovali, pomocí koláčového grafu.",
            "Ukaž mi koláčový graf o tom, kolik herců se objevilo v jednotlivých muzikálech?",
            "Nakresli koláčový graf, kolik herců se objevilo v jednotlivých muzikálech?",
            "Kolik herců se objevilo v jednotlivých muzikálech? Zobraz koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2457": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "network_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Alexis",
                    "Andrew",
                    "Austin",
                    "Brittany",
                    "Cassandra",
                    "Gabriel",
                    "Jessica",
                    "John",
                    "Kyle"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet jmen středoškoláků, kteří mají lajky, pomocí sloupcového grafu.",
            "Udělej mi sloupcový graf, který ukáže počet jmen středoškoláků, kteří mají lajky.",
            "Ukaž mi četnost jmen středoškoláků, kteří mají rádi, pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Friend"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2464": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "network_2",
        "vis_obj": {
            "chart": "pie",
            "x_name": "gender",
            "y_name": "count(*)",
            "x_data": [
                [
                    "female",
                    "male"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf o tom, kolik lidí je mladších 40 let pro každé pohlaví?",
            "Kolik lidí je mladších 40 let v každém pohlaví. Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "PersonFriend"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2466": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT job , COUNT(job) FROM Person GROUP BY job",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT job , COUNT(job) FROM Person GROUP BY job"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "network_2",
        "vis_obj": {
            "chart": "pie",
            "x_name": "job",
            "y_name": "COUNT(job)",
            "x_data": [
                [
                    "doctor",
                    "engineer",
                    "student"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY job",
            "sort": null
        },
        "nl_queries": [
            "Spočítej pracovní pozice všech osob pomocí koláčového grafu.",
            "Jaké jsou pracovní pozice jednotlivých osob? Výsledek znázorni pomocí koláčového grafu.",
            "Vypočítej celkový počet pracovních míst napříč pracovními místy jako koláčový graf."
        ],
        "irrelevant_tables": [
            "PersonFriend"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2471": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT friend , age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT avg(age) FROM person)"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "network_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "friend",
            "y_name": "age",
            "x_data": [
                [
                    "Bob",
                    "Zach"
                ]
            ],
            "y_data": [
                [
                    35,
                    45
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kdo má přátele starší, než je průměrný věk? Pomocí sloupcového grafu vytiskni také jejich kamarády a jejich věk."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2473": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT gender , avg(age) FROM Person GROUP BY gender",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT gender , avg(age) FROM Person GROUP BY gender"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "network_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "gender",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "female",
                    "male"
                ]
            ],
            "y_data": [
                [
                    25.5,
                    40
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať sloupcový graf, jaký je průměrný věk pro jednotlivá pohlaví?",
            "Nakresli sloupcový graf, který ukáže, jaký je průměrný věk pro jednotlivá pohlaví.",
            "Jaký je průměrný věk pro jednotlivá pohlaví? Vizualizace pomocí sloupcového grafu.",
            "Kolik let je průměrně jednotlivým pohlavím? Vykresli je jako sloupcový graf.",
            "Sloupcový graf zobrazující průměrný věk osob různého pohlaví",
            "Udělej mi histogram, kolik let je v průměru jednotlivým pohlavím?",
            "Vrať histogram o tom, jak stará jsou v průměru jednotlivá pohlaví?"
        ],
        "irrelevant_tables": [
            "PersonFriend"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2474": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Work_Type",
            "y_name": "avg(t1.age)",
            "x_data": [
                [
                    "Host",
                    "Music",
                    "Screening"
                ]
            ],
            "y_data": [
                [
                    43,
                    35.5,
                    30.33333333333333
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti průměrný věk novinářů pracujících na různých typech pozic a výsledek znázorni pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "event"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2476": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Work_Type",
            "y_name": "avg(Years_working)",
            "x_data": [
                [
                    "Host",
                    "Music",
                    "Screening"
                ]
            ],
            "y_data": [
                [
                    16.5,
                    14,
                    4.666666666666667
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať mi sloupcový graf, který zobrazuje průměrnou délku praxe novinářů pracujících na různých typech pozic.",
            "Vizualizuj průměrnou délku praxe novinářů pracujících na různých typech rolí pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "event"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2478": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Work_Type , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Work_Type",
            "y_name": "avg(Years_working)",
            "x_data": [
                [
                    "Host",
                    "Music",
                    "Screening"
                ]
            ],
            "y_data": [
                [
                    16.5,
                    14,
                    4.666666666666667
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj průměrnou délku praxe novinářů pracujících na různých typech pozic pomocí koláčového grafu.",
            "Vrať mi koláčový graf, který zobrazuje průměrnou délku praxe novinářů pracujících na různých typech pozic."
        ],
        "irrelevant_tables": [
            "event"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2479": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY Work_Type",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(t1.age) , avg(Years_working) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY Work_Type"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(t1.age)",
            "y_name": "avg(Years_working)",
            "x_data": [
                [
                    43
                ],
                [
                    35.5
                ],
                [
                    30.33333333333333
                ]
            ],
            "y_data": [
                [
                    16.5
                ],
                [
                    14
                ],
                [
                    4.666666666666667
                ]
            ],
            "classify": [
                "Host",
                "Music",
                "Screening"
            ],
            "describe": "GROUP BY Work_Type",
            "sort": null
        },
        "nl_queries": [
            "Zjisti korelaci mezi průměrným věkem a průměrnou délkou praxe novinářů pracujících na různých typech pozic pomocí skupinového bodového grafu.",
            "Vrať prosím seskupený bodový graf se třemi atributy: průměrný věk a průměrná délka praxe novinářů pracujících na různých typech pozic."
        ],
        "irrelevant_tables": [
            "event"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2483": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM journalist GROUP BY Nationality"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Nationality",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "England",
                    "Northern Ireland",
                    "Wales"
                ]
            ],
            "y_data": [
                [
                    9,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu znázorni různé národnosti a počet novinářů jednotlivých národností.",
            "Vytvoř koláčový graf zobrazující celkový počet podle národnosti."
        ],
        "irrelevant_tables": [
            "news_report",
            "event"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2485": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Nationality",
            "y_name": "COUNT(Nationality)",
            "x_data": [
                [
                    "England",
                    "Northern Ireland",
                    "Wales"
                ]
            ],
            "y_data": [
                [
                    9,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Nationality",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi poměr národnosti novináře pomocí koláčového grafu.",
            "Vizualizuj koláčový graf, počítejte a seskupuj podle národnosti z tabulky novinářů."
        ],
        "irrelevant_tables": [
            "news_report",
            "event"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2489": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Nationality , SUM(Age) FROM journalist GROUP BY Nationality"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Nationality",
            "y_name": "SUM(Age)",
            "x_data": [
                [
                    "England",
                    "Northern Ireland",
                    "Wales"
                ]
            ],
            "y_data": [
                [
                    308,
                    29,
                    27
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Nationality",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi koláčový graf, z něhož je patrné, jaké jsou národnosti a celkový věk novinářů?",
            "Vizualizuj koláčový graf s údaji o národnostech a celkovém věku novinářů?",
            "Jaké jsou národnosti a celkový věk novinářů? Vrať mi koláčový graf."
        ],
        "irrelevant_tables": [
            "news_report",
            "event"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2503": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM HOST GROUP BY Nationality"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "party_host",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nationality",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Argentina",
                    "Hungary",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz různé národnosti spolu s počtem hostitelů každé národnosti ve sloupcovém grafu.",
            "Zobraz různé národnosti a počet hostitelů každé národnosti. Vizualizace pomocí sloupcového grafu.",
            "Sloupcový graf o tom, kolik hostitelů mají jednotlivé národnosti? Uveď státní příslušnost a počet.",
            "Kolik hostitelů mají jednotlivé národnosti? Uveď národnost a počet pomocí sloupcového grafu.",
            "Kolik hostitelů mají jednotlivé národnosti? Uveď státní příslušnost a počet. Vizualizace pomocí sloupcového grafu.",
            "Sloupcový graf: osa - x národnost osa - y celkový počet ",
            "Vrať histogram o tom, kolik hostitelů má každá národnost? Uveď státní příslušnost a počet."
        ],
        "irrelevant_tables": [
            "party",
            "party_host"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2506": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM party GROUP BY Location"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "party_host",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Heineken Music Hall Amsterdam",
                    "Hemkade 48 Zaandam",
                    "Hemkade 48 Zaandam, Heineken Music Hall Amsterdam",
                    "RAI Amsterdam",
                    "Various locations"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu spočítej celkový počet různých umístění stran.",
            "Uveď podíl umístění jednotlivých stran pomocí koláčového grafu.",
            "Vytvoř koláčový graf zobrazující počet umístění v jednotlivých lokalitách."
        ],
        "irrelevant_tables": [
            "party_host",
            "host"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2508": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "party_people",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Party_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Convention Peoples Party",
                    "Progress Party",
                    "3"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz názvy stran a počet událostí pro každou stranu pomocí koláčového grafu.",
            "Zobraz názvy stran a počet událostí pro každou stranu. Vizualizace pomocí koláčového grafu.",
            "Vizualizuj koláčový graf s počtem událostí pro každou stranu.",
            "Vrať koláčový graf o tom, kolik událostí je pro každou stranu.",
            "Kolik událostí je pro každou stranu připraveno? Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "region",
            "member"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2512": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "party_people",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Party_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Convention Peoples Party",
                    "Progress Party",
                    "3"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz názvy všech stran a počet členů v každé straně pomocí koláčového grafu.",
            "Vrať koláčový graf, kolik členů má každá strana?",
            "Kolik členů má každá strana? Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "party_events",
            "region"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2516": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "party_people",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Minister",
            "y_name": "COUNT(Minister)",
            "x_data": [
                [
                    "Dr. Kwame Nkrumah (MP)",
                    "Ebenezer Ako-Adjei (MP)",
                    "Imoru Egala (MP)"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Minister",
            "sort": null
        },
        "nl_queries": [
            "Kteří ministři nejsou součástí Strany pokroku a spočítej je v koláčovém grafu",
            "Ukaž všechny ministry, kteří nepatří ke Straně pokroku, a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "member",
            "region"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2526": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Minister , COUNT(Minister) FROM party GROUP BY Minister"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "party_people",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Minister",
            "y_name": "COUNT(Minister)",
            "x_data": [
                [
                    "Dr. Kwame Nkrumah (MP)",
                    "Ebenezer Ako-Adjei (MP)",
                    "Imoru Egala (MP)",
                    "Kojo Botsio (MP)"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Minister",
            "sort": null
        },
        "nl_queries": [
            "Zobraz podíl všech ministrů pomocí koláčového grafu.",
            "Vypočítej celkový počet ministrů napříč ministerstvy jako koláčový graf."
        ],
        "irrelevant_tables": [
            "region",
            "member"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2536": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "performance_attendance",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Date",
            "y_name": "COUNT(Date)",
            "x_data": [
                [
                    "February 11",
                    "February 2",
                    "February 5"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf pro zobrazení počtu termínů představení s účastí členů, jejichž role jsou \"housle\".",
            "Zobraz data představení s účastí členů, jejichž role je \"Housle\", a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2543": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "perpetrator",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "China",
                    "India",
                    "Japan",
                    "South Korea"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj koláčový graf, v jakých zemích jsou pachatelé. Uveď jednotlivé země a odpovídající počet pachatelů v nich."
        ],
        "irrelevant_tables": [
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2548": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY pettype",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY pettype"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "pets_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(pet_age)",
            "y_name": "max(pet_age)",
            "x_data": [
                [
                    3,
                    1.5
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti vztah mezi průměrným a maximálním věkem každého typu domácího zvířete pomocí bodového grafu.",
            "Sestav prosím bodový graf, který mi řekne, jaká je korelace mezi průměrným a maximálním věkem pro každý typ domácího zvířete."
        ],
        "irrelevant_tables": [
            "Has_Pet",
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2549": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT PetType , avg(pet_age) FROM pets GROUP BY pettype"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "pets_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "PetType",
            "y_name": "avg(pet_age)",
            "x_data": [
                [
                    "cat",
                    "dog"
                ]
            ],
            "y_data": [
                [
                    3,
                    1.5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti průměrný věk jednotlivých typů domácích zvířat. Vizualizuj je jako koláčový graf.",
            "Udělej mi koláčový graf, který ukáže průměrný věk zvířat z různých typů domácích mazlíčků."
        ],
        "irrelevant_tables": [
            "Student",
            "Has_Pet"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2550": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(pet_age) , max(pet_age) FROM pets GROUP BY PetType"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "pets_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(pet_age)",
            "y_name": "max(pet_age)",
            "x_data": [
                [
                    3
                ],
                [
                    1.5
                ]
            ],
            "y_data": [
                [
                    3
                ],
                [
                    2
                ]
            ],
            "classify": [
                "cat",
                "dog"
            ],
            "describe": "GROUP BY PetType",
            "sort": null
        },
        "nl_queries": [
            "Zjisti vztah mezi průměrným a maximálním věkem jednotlivých typů domácích zvířat pomocí skupinového bodového grafu.",
            "Prosím, nakresli bodový graf, který mi řekne, jaká je korelace mezi průměrným a maximálním věkem s různými barvami pro každý typ domácího zvířete?",
            "Zobrazení vztahu mezi průměrným věkem zvířete a maximálním věkem zvířete pro každý typ zvířete pomocí seskupeného bodového grafu"
        ],
        "irrelevant_tables": [
            "Student",
            "Has_Pet"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2564": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.Company_name , COUNT(T2.Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY T2.Company_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.Company_name , COUNT(T2.Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY T2.Company_name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "phone_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Company_name",
            "y_name": "COUNT(Company_name)",
            "x_data": [
                [
                    "Nokia Corporation",
                    "Samsung Electronics Co Ltd",
                    "Sony Mobile Communications"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Company_name",
            "sort": null
        },
        "nl_queries": [
            "Řekni mi podíl počtu čipů od různých společností pro telefon, jehož typ režimu obrazovky je \"Grafika\", pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "chip_model"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2567": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Carrier",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Sprint",
                    "TMobile"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz různé operátory telefonů spolu s počtem telefonů u jednotlivých operátorů pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "phone_market",
            "market"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2568": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Carrier , COUNT(*) FROM phone GROUP BY Carrier"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Carrier",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Sprint",
                    "TMobile"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zobraz různé operátory telefonů spolu s počtem telefonů u jednotlivých operátorů.",
            "Zobraz různé operátory telefonů spolu s počtem telefonů u jednotlivých operátorů. Vykresli je jako sloupcový graf.",
            "Celkový počet seskupený podle dopravců vykresli jako sloupcový graf"
        ],
        "irrelevant_tables": [
            "market",
            "phone_market"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2569": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Carrier",
            "y_name": "COUNT(Carrier)",
            "x_data": [
                [
                    "Sprint",
                    "TMobile"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Carrier",
            "sort": null
        },
        "nl_queries": [
            "Jaký je počet nosičů telefonů? Udělej mi sloupcový graf.",
            "Můžeš zobraz sloupcový graf pro vizualizaci počtu dopravců?",
            "Sloupcový graf: osa - x nosič osa - y počet nosičů"
        ],
        "irrelevant_tables": [
            "market",
            "phone_market"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2570": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Carrier , COUNT(Carrier) FROM phone GROUP BY Carrier"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Carrier",
            "y_name": "COUNT(Carrier)",
            "x_data": [
                [
                    "Sprint",
                    "TMobile"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Carrier",
            "sort": null
        },
        "nl_queries": [
            "Dokážeš vizualizovat koláčový graf, který zobrazuje podíl nosičů?",
            "Vytvoř koláčový graf zobrazující počet dopravců v jednotlivých dopravcích."
        ],
        "irrelevant_tables": [
            "phone_market",
            "market"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2571": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Carrier , SUM(Memory_in_G) FROM phone GROUP BY Carrier"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Carrier",
            "y_name": "SUM(Memory_in_G)",
            "x_data": [
                [
                    "Sprint",
                    "TMobile"
                ]
            ],
            "y_data": [
                [
                    160,
                    208
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Carrier",
            "sort": null
        },
        "nl_queries": [
            "Uveď koláčový graf, který zobrazí celkový počet pamětí v g od různých operátorů."
        ],
        "irrelevant_tables": [
            "market",
            "phone_market"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2576": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "IPhone 5s",
                    "IPhone 6s",
                    "IPhone 7",
                    "IPhone X"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu zobraz, na kolika trzích se jednotlivé telefony prodávají."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2578": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY T2.Ranking",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY T2.Ranking"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "bar",
            "x_name": "District",
            "y_name": "COUNT(District)",
            "x_data": [
                [
                    "Alberta",
                    "British Columbia",
                    "Ontario",
                    "Quebec"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY District",
            "sort": null
        },
        "nl_queries": [
            "Udělej mi sloupcový graf pro vizualizaci počtu okresů trhů, na kterých se nacházejí, ve vzestupném pořadí podle pořadí na trhu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2579": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "pie",
            "x_name": "District",
            "y_name": "COUNT(District)",
            "x_data": [
                [
                    "Alberta",
                    "British Columbia",
                    "Ontario",
                    "Quebec"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY District",
            "sort": null
        },
        "nl_queries": [
            "Zobraz podíl okrsků na trzích, na kterých se nacházejí, koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2593": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "poker_player",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Nationality",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Bulgaria",
                    "Russia"
                ]
            ],
            "y_data": [
                [
                    1,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať koláčový graf, kolik lidí je jednotlivých národností?",
            "Kolik lidí je jednotlivých národností. Vizualizace pomocí koláčového grafu.",
            "Ukaž mi celkový počet osob různých národností."
        ],
        "irrelevant_tables": [
            "poker_player"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2595": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "pie",
            "x_name": "attribute_name",
            "y_name": "COUNT(attribute_name)",
            "x_data": [
                [
                    "Black",
                    "Sweet",
                    "Yellow"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY attribute_name",
            "sort": null
        },
        "nl_queries": [
            "Vypočítej, kolik atributů v každém názvu definic atributů má hodnotu 0. Výsledek zobraz pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Catalog_Structure",
            "Catalogs"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2604": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "pie",
            "x_name": "catalog_level_name",
            "y_name": "catalog_level_number",
            "x_data": [
                [
                    "Sub-Category",
                    "Product"
                ]
            ],
            "y_data": [
                [
                    8,
                    9
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Nakresli koláčový graf o tom, jaký je název a úroveň katalogové struktury s číslem úrovně mezi 5 a 10"
        ],
        "irrelevant_tables": [
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2605": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_level_name , catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_level_name",
            "y_name": "catalog_level_number",
            "x_data": [
                [
                    "Sub-Category",
                    "Product"
                ]
            ],
            "y_data": [
                [
                    8,
                    9
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj sloupcového grafu pro název a úroveň katalogové struktury s číslem úrovně mezi 5 a 10",
            "Udělej mi histogram o tom, jaký je název a úroveň struktury katalogu s číslem úrovně mezi 5 a 10"
        ],
        "irrelevant_tables": [
            "Catalogs",
            "Attribute_Definitions"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2606": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "pie",
            "x_name": "catalog_entry_name",
            "y_name": "capacity",
            "x_data": [
                [
                    "Vimto",
                    "Sprite Lemo",
                    "Dr Pepper",
                    "Diet Pepsi",
                    "Diet Mountain Dew"
                ]
            ],
            "y_data": [
                [
                    6,
                    8,
                    1,
                    9,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti název a kapacitu výrobků s cenou vyšší než 15 225 (v CZK). Vizualizace pomocí koláčového grafu.",
            "Koláčový graf o tom, který obsah katalogu má cenu vyšší než 15 225 korun. Zobraz názvy a kapacity jejich katalogových položek.",
            "Který obsah katalogu má cenu vyšší než 15 225 korun? Zobraz názvy a kapacity jejich položek v katalogu pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Attribute_Definitions",
            "Catalog_Structure"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2615": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check'",
                "binning": "BIN payment_date BY MONTH"
            },
            "VQL": "Visualize BAR SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' BIN payment_date BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "products_for_hire",
        "vis_obj": {
            "chart": "bar",
            "x_name": "payment_date",
            "y_name": "COUNT(payment_date)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    1,
                    13
                ]
            ],
            "classify": [],
            "describe": "BIN payment_date BY MONTH",
            "sort": null
        },
        "nl_queries": [
            "Jaká jsou data plateb s částkou vyšší než 300 nebo s typem platby \"Check“? Rozděl data plateb podle měsíců a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Bookings",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2617": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT payment_date , COUNT(payment_date) FROM payments WHERE amount_paid > 300 OR payment_type_code = 'Check' GROUP BY payment_date"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "products_for_hire",
        "vis_obj": {
            "chart": "line",
            "x_name": "payment_date",
            "y_name": "COUNT(payment_date)",
            "x_data": [
                [
                    "2018-02-27",
                    "2018-03-02",
                    "2018-03-03",
                    "2018-03-09",
                    "2018-03-12",
                    "2018-03-17",
                    "2018-03-19",
                    "2018-03-22",
                    "2018-03-23"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    1,
                    2,
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY payment_date",
            "sort": null
        },
        "nl_queries": [
            "Jaká jsou data plateb s částkou vyšší než 300 nebo s typem platby \"Šek“? spočítej je pomocí řádkového grafu"
        ],
        "irrelevant_tables": [
            "Bookings",
            "Products_for_Hire"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2620": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "products_gen_characteristics",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_category_description",
            "y_name": "COUNT(product_category_description)",
            "x_data": [
                [
                    "Herbs",
                    "Seeds",
                    "Spices"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_category_description",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf pro jaký počet popisů kategorií jsou zařazeny produkty s popisem produktu obsahujícím písmeno t?",
            "Jaké jsou popisy kategorií, do kterých patří produkty s popisy produktů obsahujícími písmeno t? Spočítej je pomocí koláčového grafu",
            "Najdi popisy kategorií produktů, jejichž popis obsahuje písmeno \"t\", a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro zjištění počtu popisů kategorií produktů, jejichž popis obsahuje písmeno \"t\"."
        ],
        "irrelevant_tables": [
            "Product_Characteristics",
            "Ref_Colors"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2622": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Time_of_day , count(*) FROM broadcast GROUP BY time_of_day"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "program_share",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Time_of_day",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Morning",
                    "Night",
                    "Noon"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Spočítej počet vysílaných pořadů v jednotlivých časových úsecích dne pomocí koláčového grafu.",
            "Spočítej počet vysílaných pořadů pro každý časový úsek dne. Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "program",
            "channel"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2624": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "program_share",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Owner",
            "y_name": "sum(Rating_in_percent)",
            "x_data": [
                [
                    "Anhui Television",
                    "CCTV",
                    "HBS",
                    "Shandong Television"
                ]
            ],
            "y_data": [
                [
                    0.2,
                    2.43,
                    0.53,
                    0.19
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti celkový poměr hodnocení pro každého vlastníka kanálu. Zobraz koláčový graf.",
            "Vrať koláčový graf o tom, jaké je celkové hodnocení kanálu pro každého vlastníka kanálu?",
            "Jaké je celkové hodnocení kanálu pro každého vlastníka kanálu. Vykresli je jako koláčový graf.",
            "Vypočítej celkový počet hodnocení v procentech u všech vlastníků jako koláčový graf."
        ],
        "irrelevant_tables": [
            "broadcast_share",
            "program"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2630": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7868,
                    5267,
                    1000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Prosím o koláčový graf zobrazující typy institucí spolu s celkovým počtem studentů pro každý typ.",
            "Sděl mi prosím podíl jednotlivých typů na celkovém počtu zapsaných pomocí koláčového grafu.",
            "Udělej mi koláčový graf, který ukáže součet zápisů z různých typů."
        ],
        "irrelevant_tables": [
            "building",
            "protein"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2631": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , sum(enrollment) FROM institution GROUP BY TYPE"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7868,
                    5267,
                    1000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Prosím o sloupcový graf zobrazující typy institucí spolu s celkovým počtem studentů pro každý typ.",
            "Srovnej prosím celkový počet přihlášených pro jednotlivé typy pomocí sloupcového grafu.",
            "Sloupcový graf: osa x - typ, osa y - celkový počet zápisů"
        ],
        "irrelevant_tables": [
            "building",
            "protein"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2633": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY TYPE"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    7,
                    3,
                    1
                ]
            ],
            "y_data": [
                [
                    7868,
                    5267,
                    1000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz vztah mezi počtem institucí a celkovým počtem studentů pro každý typ pomocí bodového grafu."
        ],
        "irrelevant_tables": [
            "protein",
            "building"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2634": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM institution GROUP BY Type"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    7
                ],
                [
                    3
                ],
                [
                    1
                ]
            ],
            "y_data": [
                [
                    7868
                ],
                [
                    5267
                ],
                [
                    1000
                ]
            ],
            "classify": [
                "Private",
                "Public",
                "Tribal"
            ],
            "describe": "GROUP BY Type",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet(*) vs. součet zápisů jako bodový graf, pro každý typ použij jinou barvu"
        ],
        "irrelevant_tables": [
            "protein",
            "building"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "2635": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , Height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "Height_feet",
            "x_data": [
                [
                    "Citizens Bank Building",
                    "Tampa City Hall",
                    "One Tampa City Center"
                ]
            ],
            "y_data": [
                [
                    145,
                    160,
                    537
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz v koláčovém grafu názvy a výšky budov alespoň dvou institucí založených po roce 1880."
        ],
        "irrelevant_tables": [
            "protein"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2637": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Floors FROM building ORDER BY floors",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Floors FROM building ORDER BY floors"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Floors",
            "x_data": [
                [
                    "Tampa City Hall",
                    "Citizens Bank Building",
                    "Floridan Hotel",
                    "Franklin Exchange Building",
                    "Park Tower",
                    "One Tampa City Center",
                    "Bank of America Tower",
                    "100 North Tampa"
                ]
            ],
            "y_data": [
                [
                    10,
                    12,
                    17,
                    22,
                    36,
                    39,
                    42,
                    42
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf s názvem jako osou X a počtem podlaží pro všechny budovy jako osou Y. Seřaď vzestupně podle počtu podlaží.",
            "Porovnej prosím počet podlaží všech názvů budov pomocí sloupcového grafu a seřaď je vzestupně podle počtu podlaží."
        ],
        "irrelevant_tables": [
            "Institution",
            "protein"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2638": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Street_address , Floors FROM building ORDER BY floors",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Street_address , Floors FROM building ORDER BY floors"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Street_address",
            "y_name": "Floors",
            "x_data": [
                [
                    "315 John F. Kennedy Boulevard",
                    "701 North Franklin Street",
                    "905 Franklin Street",
                    "655 North Franklin Street",
                    "400 North Tampa Street",
                    "201 North Franklin Street",
                    "101 East Kennedy Boulevard",
                    "100 North Tampa Street"
                ]
            ],
            "y_data": [
                [
                    10,
                    12,
                    17,
                    22,
                    36,
                    39,
                    42,
                    42
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Porovnej prosím počet podlaží pro všechny adresy pomocí sloupcového grafu a seřaď je vzestupně podle počtu podlaží.",
            "Vrať sloupcový graf s adresou ulice jako osou X a počtem podlaží pro všechny budovy jako osou Y a seřazený vzestupně podle počtu podlaží."
        ],
        "irrelevant_tables": [
            "protein",
            "Institution"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "2640": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Institution , count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Institution",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Dakota State University",
                    "Haskell Indian Nations University",
                    "Lindenwood University-Belleville",
                    "Valley City State University"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz názvy institucí spolu s počtem proteinů pro každou instituci ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "building"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2641": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Auto Club Speedway",
                    "Chicagoland Speedway",
                    "Daytona International Speedway",
                    "Homestead-Miami Speedway",
                    "Kansas Speedway",
                    "Martinsville Speedway"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz název dráhy a počet závodů na každé dráze pomocí sloupcového grafu.",
            "Zobraz název dráhy a počet závodů na každé dráze. Vizualizace pomocí sloupcového grafu.",
            "Zobraz sloupcový graf, jak se jmenují různé tratě a kolik závodů se na každé z nich jelo?",
            "Jak se jmenují jednotlivé tratě a kolik závodů se na každé z nich jelo? Vykresli je jako sloupcový graf.",
            "Vrať histogram o tom, jak se jmenují různé tratě a kolik závodů se na každé z nich jelo."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2642": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM race GROUP BY Class"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "DP/GT",
                    "GT"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi podíl tříd všech ras pomocí koláčového grafu.",
            "Jaký je podíl tříd všech ras? Udělej mi koláčový graf."
        ],
        "irrelevant_tables": [
            "track"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2645": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , Seating FROM track WHERE year_opened > 2000"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "Seating",
            "x_data": [
                [
                    "Chicagoland Speedway",
                    "Kansas Speedway"
                ]
            ],
            "y_data": [
                [
                    75000,
                    81687
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobrazení názvů a míst k sezení pro všechny dráhy otevřené po roce 2000 pomocí koláčového grafu.",
            "Vizualizuj koláčový graf s názvy a místy pro všechny dráhy otevřené po roce 2000."
        ],
        "irrelevant_tables": [
            "race"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2646": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Seating FROM track WHERE year_opened > 2000 ORDER BY seating"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Seating",
            "x_data": [
                [
                    "Chicagoland Speedway",
                    "Kansas Speedway"
                ]
            ],
            "y_data": [
                [
                    75000,
                    81687
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobrazení názvů a míst k sezení seřazených podle počtu míst u všech tratí vzestupně otevřených po roce 2000 ve sloupcovém grafu.",
            "Zobraz názvy a obsazení sedadel seřazené podle počtu míst na všech tratích vzestupně po roce 2000. Vykresli je jako sloupcový graf.",
            "Vrať sloupcový graf s názvy a počty míst k sezení pro všechny dráhy otevřené po roce 2000, seřazené vzestupně podle počtu míst k sezení?",
            "Jaké jsou názvy a počet míst na všech tratích otevřených po roce 2000, seřazené vzestupně podle počtu míst? Vizualizace pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "race"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2652": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Builder , COUNT(Builder) FROM railway GROUP BY Builder ORDER BY Builder ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Builder , COUNT(Builder) FROM railway GROUP BY Builder ORDER BY Builder ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "railway",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Builder",
            "y_name": "COUNT(Builder)",
            "x_data": [
                [
                    "Avonside",
                    "GER Hartford",
                    "GER Stratford",
                    "GNR Doncaster",
                    "GWR Swindon",
                    "MR Derby",
                    "SECR Ashford",
                    "Stephenson",
                    "Swindon Works"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Builder",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro seřazení stavitelů železnic vzestupně podle abecedy.",
            "Vyjmenuj stavitele železnic ve vzestupném abecedním pořadí a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "railway_manage",
            "manager"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2656": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "railway",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Australia",
                    "England",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": null
        },
        "nl_queries": [
            "Ukaž země, které mají manažery ve věku nad 50 let nebo pod 46 let, a spočítej je pomocí koláčového grafu",
            "Koláčový graf znázorňující počet zemí, které mají manažery ve věku nad 50 let nebo pod 46 let."
        ],
        "irrelevant_tables": [
            "railway",
            "railway_manage"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2657": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM manager WHERE Age > 50 OR Age < 46 GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "railway",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Australia",
                    "England",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": null
        },
        "nl_queries": [
            "Ukaž země, které mají manažery ve věku nad 50 let nebo pod 46 let, a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf znázorňující počet zemí, které mají manažery ve věku nad 50 let nebo pod 46 let."
        ],
        "irrelevant_tables": [
            "railway_manage",
            "train"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2693": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "school_bus",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Private",
                    "Public"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Koláčovým grafem znázorni typ školy a počet autobusů pro každý typ.",
            "Uveď typ školy a počet autobusů pro každý typ. Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "driver"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2694": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_bus",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Private",
                    "Public"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz typ školy a počet autobusů pro každý typ ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "driver"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2695": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Home_city , COUNT(Home_city) FROM driver GROUP BY Home_city"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "school_bus",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Home_city",
            "y_name": "COUNT(Home_city)",
            "x_data": [
                [
                    "Bethel",
                    "Coventry",
                    "East Hartford",
                    "Hartford",
                    "Manchester"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    6,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Home_city",
            "sort": null
        },
        "nl_queries": [
            "Zobraz podíl domovského města všech řidičů pomocí koláčového grafu.",
            "Prosím o koláčový graf, který by zobrazoval podíl domovského města všech řidičů ",
            "Udělej mi koláčový graf, který ukáže, kolik domovských měst z různých domovských měst."
        ],
        "irrelevant_tables": [
            "school_bus",
            "school"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2703": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT donator_name , sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "donator_name",
            "y_name": "sum(amount)",
            "x_data": [
                [
                    "San Jos\u00e9 de Ocoa",
                    "Valverde",
                    "Distrito Nacional",
                    "Monte Plata",
                    "San Crist\u00f3bal",
                    "Santo Domingo Este",
                    "Santiago",
                    "La Vega",
                    "Duarte",
                    "Com. Dom. En Estados Unidos",
                    "Peravia"
                ]
            ],
            "y_data": [
                [
                    9.83,
                    9.73,
                    9.55,
                    9.51,
                    9.05,
                    8.99,
                    8.85,
                    8.82,
                    8.53,
                    8.43,
                    8.33
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Uveď jména jednotlivých dárců a výši nadačního příspěvku v sestupném pořadí podle výše nadačního příspěvku pomocí sloupcového grafu.",
            "Uveď jména jednotlivých dárců a výši daru v sestupném pořadí podle výše daru. Vykresli je jako sloupcový graf."
        ],
        "irrelevant_tables": [
            "School",
            "budget"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2705": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT County , sum(enrollment) FROM school GROUP BY county"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "pie",
            "x_name": "County",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "20 Elkhart",
                    "46 LaPorte 71 St. Joseph",
                    "50 Marshall",
                    "71 St. Joseph",
                    "75 Starke"
                ]
            ],
            "y_data": [
                [
                    601,
                    852,
                    1098,
                    984,
                    620
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu znázorni podíl celkového počtu zapsaných v jednotlivých okresech.",
            "Prosím o koláčový graf podílu celkového počtu zapsaných v jednotlivých okresech.",
            "Vypočítej celkový součet zápisů v jednotlivých okresech jako koláčový graf."
        ],
        "irrelevant_tables": [
            "endowment",
            "budget"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2708": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY county",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY county"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    1,
                    1,
                    3,
                    2,
                    1
                ]
            ],
            "y_data": [
                [
                    601,
                    852,
                    1098,
                    984,
                    620
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz vztah mezi počtem škol v jednotlivých okresech a celkovým počtem žáků v jednotlivých okresech pomocí bodového grafu.",
            "Pomocí bodového grafu znázorni počet škol a celkový počet žáků v jednotlivých okresech."
        ],
        "irrelevant_tables": [
            "budget",
            "endowment"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2709": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT count(*) , sum(enrollment) FROM school GROUP BY County",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT count(*) , sum(enrollment) FROM school GROUP BY County"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(*)",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    1
                ],
                [
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    1
                ]
            ],
            "y_data": [
                [
                    601
                ],
                [
                    852
                ],
                [
                    1098
                ],
                [
                    984
                ],
                [
                    620
                ]
            ],
            "classify": [
                "20 Elkhart",
                "46 LaPorte 71 St. Joseph",
                "50 Marshall",
                "71 St. Joseph",
                "75 Starke"
            ],
            "describe": "GROUP BY County",
            "sort": null
        },
        "nl_queries": [
            "Zobraz vztah mezi počtem škol v jednotlivých okresech a celkovým počtem žáků v jednotlivých okresech pomocí seskupeného bodového grafu.",
            "Vytvoř graf počtu škol a celkového počtu žáků v jednotlivých okresech pomocí seskupeného bodového grafu.",
            "Zobraz počet(*) vs. celkový počet zápisů jako bodový graf, pro každý kraj použij jinou barvu"
        ],
        "irrelevant_tables": [
            "endowment",
            "budget"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "2724": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Denomination , COUNT(*) FROM school GROUP BY Denomination"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "school_player",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Denomination",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Anglican",
                    "Catholic",
                    "Uniting Church"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro každé označení vrať označení a počet škol s tímto označením. Vizualizace pomocí sloupcového grafu.",
            "Vytvoř sloupcový graf zobrazující celkový počet v jednotlivých nominálních hodnotách"
        ],
        "irrelevant_tables": [
            "school_details",
            "player"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2734": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Flag",
            "y_name": "COUNT(Flag)",
            "x_data": [
                [
                    "Malta",
                    "Panama"
                ]
            ],
            "y_data": [
                [
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Flag",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi pomocí koláčového grafu podíl lodí, které neřídí žádný kapitán s hodností poddůstojníka.",
            "Jaký je podíl vlajek lodí, které nemají kapitána v hodnosti poddůstojníka? Výsledek zobraz pomocí koláčového grafu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2736": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Rank",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Commander, junior captain",
                    "Lieutenant",
                    "Midshipman"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Nakresli koláčový graf, kolik kapitánů mladších 50 let je v každé hodnosti?",
            "Kolik kapitánů mladších 50 let je v každé hodnosti. Vizualizace pomocí koláčového grafu.",
            "Spočítej v koláčovém grafu počet kapitánů mladších 50 let každé hodnosti.",
            "Spočítej počet kapitánů mladších 50 let v každé hodnosti. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2743": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY CLASS",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY CLASS"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(age)",
            "y_name": "min(age)",
            "x_data": [
                [
                    45,
                    43,
                    38,
                    38,
                    51.33333333333334
                ]
            ],
            "y_data": [
                [
                    45,
                    43,
                    38,
                    38,
                    40
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi graf závislosti mezi průměrným a minimálním věkem kapitánů v jednotlivých třídách."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2745": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT avg(age) , min(age) FROM captain GROUP BY Class",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT avg(age) , min(age) FROM captain GROUP BY Class"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "avg(age)",
            "y_name": "min(age)",
            "x_data": [
                [
                    45
                ],
                [
                    43
                ],
                [
                    38
                ],
                [
                    38
                ],
                [
                    51.33333333333334
                ]
            ],
            "y_data": [
                [
                    45
                ],
                [
                    43
                ],
                [
                    38
                ],
                [
                    38
                ],
                [
                    40
                ]
            ],
            "classify": [
                "Armed schooner",
                "Cutter",
                "Frigate",
                "Sloop-of-war",
                "Third-rate ship of the line"
            ],
            "describe": "GROUP BY Class",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi graf závislosti mezi průměrným a minimálním věkem kapitánů v jednotlivých třídách a vybarvi různé třídy."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "2748": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "GL",
                    "KR"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class",
            "sort": null
        },
        "nl_queries": [
            "U lodí, které nemají kapitána, mi pomocí koláčového grafu řekni, jaký je podíl jejich tříd.",
            "Uveď koláčový graf, který ukazuje podíl tříd lodí, které nemají kapitána."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2749": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain) GROUP BY Class"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "GL",
                    "KR"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class",
            "sort": null
        },
        "nl_queries": [
            "Uveď sloupcový graf celkového počtu tříd lodí, které nemají kapitána."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2750": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Rank ,  Class"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "Armed schooner",
                    "Cutter",
                    "Frigate",
                    "Sloop-of-war",
                    "Third-rate ship of the line"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    1,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    0,
                    1
                ],
                [
                    1,
                    1,
                    0,
                    0,
                    2
                ]
            ],
            "classify": [
                "Commander, junior captain",
                "Lieutenant",
                "Midshipman"
            ],
            "describe": "GROUP BY Rank, GROUP BY Class",
            "sort": null
        },
        "nl_queries": [
            "Jaký je celkový počet kapitánů v jednotlivých hodnostech a třídách? Jako osu X nech třídu a pomocí sloupcového grafu ji rozděl do kategorií.",
            "Sloupcový graf ukazuje celkový počet kapitánů rozdělených podle hodností v různých třídách."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "stacked_bar": true
            },
            {
                "channel_specified": [],
                "stacked_bar": true
            }
        ]
    },
    "2752": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Class , COUNT(Class) FROM captain GROUP BY Class"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "Armed schooner",
                    "Cutter",
                    "Frigate",
                    "Sloop-of-war",
                    "Third-rate ship of the line"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi koláčový graf porovnávající celkový počet kapitánů v jednotlivých třídách.",
            "Pomocí koláčového grafu znázorni podíl celkového počtu kapitánů v jednotlivých třídách.",
            "Vypočítej celkový počet tříd v jednotlivých třídách jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2757": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Type",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type , COUNT(Type) FROM ship GROUP BY Type"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "ship_mission",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type",
            "y_name": "COUNT(Type)",
            "x_data": [
                [
                    "Battle ship",
                    "Cargo ship"
                ]
            ],
            "y_data": [
                [
                    3,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type",
            "sort": null
        },
        "nl_queries": [
            "Jaký je celkový počet jednotlivých typů lodí? Udělej mi koláčový graf.",
            "Ukaž mi koláčový graf celkového počtu jednotlivých typů lodí."
        ],
        "irrelevant_tables": [
            "mission"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2759": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "ship_mission",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Nationality",
            "y_name": "COUNT(Nationality)",
            "x_data": [
                [
                    "United Kingdom",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Nationality",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf zobrazující celkový počet lodí jednotlivých národností.",
            "Jaký je podíl státní příslušnosti všech lodí? Udělej mi koláčový graf.\n",
            "Vytvoř koláčový graf znázorňující počet národností v jednotlivých národnostech."
        ],
        "irrelevant_tables": [
            "mission"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2764": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "ship_mission",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type",
            "y_name": "avg(Tonnage)",
            "x_data": [
                [
                    "Battle ship",
                    "Cargo ship"
                ]
            ],
            "y_data": [
                [
                    4845,
                    3932.2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz různé typy lodí a průměrnou tonáž lodí každého typu v koláčovém grafu.",
            "Jaká je průměrná tonáž pro každý typ? Vykresli je jako koláčový graf.",
            "Udělej koláčový graf, který ukáže průměrnou tonáž z různých typů."
        ],
        "irrelevant_tables": [
            "mission"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2767": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT City , COUNT(City) FROM branch GROUP BY City",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT City , COUNT(City) FROM branch GROUP BY City"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "shop_membership",
        "vis_obj": {
            "chart": "pie",
            "x_name": "City",
            "y_name": "COUNT(City)",
            "x_data": [
                [
                    "London",
                    "Oxford"
                ]
            ],
            "y_data": [
                [
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY City",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi podíl měst v tabulce poboček pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "member",
            "purchase"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2775": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "singer",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Citizenship",
            "y_name": "max(Net_Worth_Millions)",
            "x_data": [
                [
                    "Australia",
                    "Chile",
                    "France",
                    "Germany",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    17,
                    17.4,
                    30,
                    14.3,
                    28.8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz různá občanství a maximální čistou hodnotu zpěváků jednotlivých občanství pomocí koláčového grafu.",
            "Vizualizuj pomocí koláčového grafu různá občanství a maximální čistou hodnotu zpěváků jednotlivých občanství.",
            "Jaká je maximální čistá hodnota pro každé občanství. Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "song"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2780": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5",
                "binning": "BIN birthday BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5 BIN birthday BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "birthday",
            "y_name": "COUNT(birthday)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    0,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN birthday BY Month",
            "sort": null
        },
        "nl_queries": [
            "Najdi hráče s celkovým hodnocením vyšším nebo rovným 70 a pomocí sloupcového grafu zobraz rozložení jejich narozenin v jednotlivých letech."
        ],
        "irrelevant_tables": [
            "sqlite_sequence",
            "Team"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2781": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT birthday , COUNT(birthday),preferred_foot,T2.player_api_id  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id where overall_rating >=75 GROUP BY preferred_foot,T2.player_api_id",
                "binning": "BIN birthday BY YEAR"
            },
            "VQL": "Visualize LINE SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY player_name ORDER BY potential DESC LIMIT 5 BIN birthday BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "birthday",
            "y_name": "COUNT(birthday)",
            "x_data": [
                [
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    7,
                    7,
                    16,
                    15,
                    19,
                    28,
                    35,
                    53,
                    58,
                    50,
                    58,
                    59,
                    57,
                    63,
                    53,
                    51,
                    50,
                    37,
                    35,
                    32,
                    24,
                    21,
                    10,
                    4,
                    1
                ],
                [
                    1,
                    1,
                    1,
                    5,
                    6,
                    11,
                    22,
                    30,
                    49,
                    65,
                    79,
                    87,
                    141,
                    136,
                    162,
                    127,
                    152,
                    159,
                    150,
                    191,
                    171,
                    162,
                    158,
                    123,
                    97,
                    91,
                    62,
                    49,
                    20,
                    8,
                    4
                ]
            ],
            "classify": [
                "left",
                "right"
            ],
            "describe": "GROUP BY player_name, BIN birthday BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Najdi hráče s celkovým hodnocením větším nebo rovným 75 a pomocí čárového grafu zobraz trend v roce narození hráčů s různými preferencemi nohou."
        ],
        "irrelevant_tables": [
            "sqlite_sequence",
            "Team"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "2782": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT birthday, T1.player_api_id FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id Where T2.overall_rating >= 70 group by T1.player_api_id",
                "binning": "BIN birthday BY YEAR"
            },
            "VQL": "Visualize LINE SELECT birthday , COUNT(birthday) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id  ORDER BY potential DESC LIMIT 5 BIN birthday BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "birthday",
            "y_name": "COUNT(birthday)",
            "x_data": [
                [
                    1967,
                    1968,
                    1969,
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1999
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4,
                    10,
                    11,
                    16,
                    36,
                    56,
                    93,
                    120,
                    141,
                    192,
                    255,
                    306,
                    339,
                    308,
                    370,
                    385,
                    381,
                    436,
                    428,
                    446,
                    400,
                    363,
                    327,
                    273,
                    225,
                    159,
                    94,
                    42,
                    15,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN birthday BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Najdi hráče s kompozitním skóre větším nebo rovným 75 a pomocí trendové čáry znázorni trend v roce narození pro hráče s různými preferencemi nohou"
        ],
        "irrelevant_tables": [
            "sqlite_sequence",
            "Team"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2785": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT pName , COUNT(pName) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID GROUP BY pName ORDER BY T1.pName"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "soccer_2",
        "vis_obj": {
            "chart": "pie",
            "x_name": "pName",
            "y_name": "COUNT(pName)",
            "x_data": [
                [
                    "Andrew",
                    "Blake",
                    "Charles",
                    "David",
                    "Eddie"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY pName",
            "sort": null
        },
        "nl_queries": [
            "Zjisti jména všech studentů, kteří se zúčastnili zkoušky, seřazená podle abecedy, a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro kolik je počet jmen všech studentů, kteří si vyzkoušeli abecední pořadí?",
            "Jaká jsou jména všech studentů, kteří se o to pokusili, v abecedním pořadí, a spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "College"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2787": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "soccer_2",
        "vis_obj": {
            "chart": "pie",
            "x_name": "pPos",
            "y_name": "min(T2.HS)",
            "x_data": [
                [
                    "goalie",
                    "mid",
                    "striker"
                ]
            ],
            "y_data": [
                [
                    1200,
                    300,
                    1600
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf o tom, jaké je minimální množství hodin pro studenty hrající na různých pozicích?",
            "Jaký je minimální čas, který studenti strávili cvičením na každé pozici. Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "College"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2795": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT state , enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "soccer_2",
        "vis_obj": {
            "chart": "pie",
            "x_name": "state",
            "y_name": "enr",
            "x_data": [
                [
                    "ASU",
                    "FSU"
                ]
            ],
            "y_data": [
                [
                    12000,
                    19000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Jaký je název a zápis na vysoké školy, kde mají nějaké studenty, kteří byli přijati v rozhodnutí o zkoušce? Zobraz koláčový graf.",
            "Ukaž mi koláčový graf, kolik studentů je zapsáno na vysokých školách, které mají studenta přijatého během zkoušek?",
            "Kolik studentů je zapsáno na vysokých školách, které přijaly studenta během zkoušek? Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Player"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2799": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT state , min(enr) FROM college GROUP BY state",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT state , min(enr) FROM college GROUP BY state"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "soccer_2",
        "vis_obj": {
            "chart": "pie",
            "x_name": "state",
            "y_name": "min(enr)",
            "x_data": [
                [
                    "AZ",
                    "FL",
                    "LA",
                    "OK"
                ]
            ],
            "y_data": [
                [
                    12000,
                    19000,
                    18000,
                    22000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf podílu nejmenších žáků v jednotlivých státech.",
            "Udělej mi koláčový graf, který ukáže minimální ENR z různých států."
        ],
        "irrelevant_tables": [
            "Tryout",
            "Player"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2802": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT cName , count(*) FROM tryout GROUP BY cName ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "soccer_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cName",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ASU",
                    "LSU",
                    "FSU",
                    "OU"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet studentů, kteří se účastní zkoušek na jednotlivých vysokých školách, seřazených sestupně. Vizualizace pomocí sloupcového grafu.",
            "Zobraz sloupcový graf, kolik studentů se zúčastnilo zkoušek na jednotlivých vysokých školách podle sestupného počtu?",
            "Vrať sloupcový graf o tom, kolik studentů se zúčastnilo zkoušek na jednotlivých vysokých školách podle sestupného počtu?",
            "Kolik studentů se zúčastnilo zkoušek na jednotlivých vysokých školách podle sestupného počtu. Vizualizace pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "College",
            "Player"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2804": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "solvency_ii",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Product_Name",
            "y_name": "COUNT(Product_Name)",
            "x_data": [
                [
                    "Business Policy",
                    "Business Policy B",
                    "Dinning",
                    "Men suits"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Product_Name",
            "sort": null
        },
        "nl_queries": [
            "Vypiš názvy produktů, které nejsou v žádné akci, a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro výpis počtu názvů výrobků, které nejsou v žádné akci."
        ],
        "irrelevant_tables": [
            "Parties_in_Events",
            "Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2806": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "solvency_ii",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Product_Type_Code",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Books",
                    "Clothes",
                    "Electronics",
                    "Food"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu zobraz různé kódy typů výrobků a počet výrobků s jednotlivými kódy typů.",
            "Vytvoř koláčový graf zobrazující celkový počet napříč kódy typů produktů."
        ],
        "irrelevant_tables": [
            "Assets",
            "Parties_in_Events"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2807": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(*) FROM Products GROUP BY Product_Type_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "solvency_ii",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Product_Type_Code",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Books",
                    "Clothes",
                    "Electronics",
                    "Food"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz různé kódy typů výrobků a počet výrobků s jednotlivými kódy typů ve sloupcovém grafu.",
            "Zobraz různé kódy typů výrobků a počet výrobků s každým kódem typu. Vizualizace pomocí sloupcového grafu.",
            "Uveď sloupcový graf celkového počtu kódů jednotlivých typů výrobků"
        ],
        "irrelevant_tables": [
            "Assets",
            "Channels"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2808": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "solvency_ii",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Product_Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "TV Equipments",
                    "Special Dinning",
                    "Men suits",
                    "Conference Equipments",
                    "Dinning",
                    "Trading Policy",
                    "Trading Policy B"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz názvy produktů a počet událostí, ve kterých se nacházejí, seřazené podle počtu událostí sestupně pomocí sloupcového grafu.",
            "Zobraz názvy produktů a počet událostí, ve kterých se nacházejí, seřazené podle počtu událostí sestupně. Vizualizace pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Parties_in_Events",
            "Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2809": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "solvency_ii",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Product_Type_Code",
            "y_name": "COUNT(Product_Type_Code)",
            "x_data": [
                [
                    "Books",
                    "Clothes",
                    "Electronics",
                    "Food"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Product_Type_Code",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf ukazuje podíl různých kódů typů výrobků."
        ],
        "irrelevant_tables": [
            "Parties",
            "Parties_in_Events"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2810": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Product_Type_Code , COUNT(Product_Type_Code) FROM Products GROUP BY Product_Type_Code"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "solvency_ii",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Product_Type_Code",
            "y_name": "COUNT(Product_Type_Code)",
            "x_data": [
                [
                    "Books",
                    "Clothes",
                    "Electronics",
                    "Food"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Product_Type_Code",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf pro zobrazení celkového počtu různých kódů typů produktů.",
            "Sloupcový graf osa x kód typu výrobku osa y počet kódů typu výrobku"
        ],
        "irrelevant_tables": [
            "Assets_in_Events",
            "Products_in_Events"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2817": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "sports_competition",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Position",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Full Back",
                    "Left Wing",
                    "Loose Forward",
                    "Prop",
                    "Second Row"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi, jaký je poměr počtu hráčů, kteří mají méně než 30 bodů na každé pozici, pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "competition",
            "club_rank"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2818": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Position , count(*) FROM player WHERE points < 30 GROUP BY POSITION"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "sports_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Position",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Full Back",
                    "Left Wing",
                    "Loose Forward",
                    "Prop",
                    "Second Row"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Jaký je počet hráčů, kteří mají na každé pozici méně než 30 bodů. Vykresli je jako sloupcový graf.",
            "Udělej mi histogram počtu hráčů, kteří mají na každé pozici méně než 30 bodů."
        ],
        "irrelevant_tables": [
            "competition_result",
            "club"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2820": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Competition_type , COUNT(*) FROM competition GROUP BY Competition_type"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "sports_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Competition_type",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Friendly",
                    "Tournament"
                ]
            ],
            "y_data": [
                [
                    8,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vypiš typy soutěží a počet soutěží každého typu do sloupcového grafu.",
            "Uveď typy soutěží a počet soutěží každého typu. Vizualizace pomocí sloupcového grafu.",
            "Jaké jsou typy soutěží a počet soutěží pro daný typ. Zobraz sloupcový graf.",
            "Celkový počet seskupený podle typu soutěže zobraz ve formě sloupcového grafu",
            "Udělej mi histogram o tom, jaké jsou typy soutěží a počet soutěží pro daný typ.",
            "Vrať histogram typů soutěží a počtu soutěží pro daný typ."
        ],
        "irrelevant_tables": [
            "competition_result",
            "player"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2822": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "sports_competition",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "AIB",
                    "ASC",
                    "BK Slide",
                    "HGS2",
                    "IFG"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    6,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "U všech hráčů zobraz pomocí koláčového grafu podíl názvu klubu, ze kterého pocházejí."
        ],
        "irrelevant_tables": [
            "competition_result",
            "competition"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2830": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT local_authority , COUNT(local_authority) FROM station GROUP BY local_authority"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "station_weather",
        "vis_obj": {
            "chart": "bar",
            "x_name": "local_authority",
            "y_name": "COUNT(local_authority)",
            "x_data": [
                [
                    "Brentwood",
                    "Broxbourne",
                    "Chiltern",
                    "Three Rivers",
                    "Thurrock",
                    "Watford"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY local_authority",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf, kolik místních orgánů z jednotlivých místních orgánů"
        ],
        "irrelevant_tables": [
            "train",
            "weekly_weather"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2847": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"
        },
        "chart": "Pie",
        "hardness": "Extra Hard",
        "db_id": "store_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Rock",
                    "Latin",
                    "Metal",
                    "Alternative & Punk",
                    "Jazz"
                ]
            ],
            "y_data": [
                [
                    1297,
                    579,
                    374,
                    332,
                    130
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vyjmenuj 5 nejoblíbenějších žánrů podle počtu skladeb. Seznam názvů žánrů a celkového počtu skladeb pomocí koláčového grafu.",
            "Vyjmenuj 5 nejoblíbenějších žánrů podle počtu skladeb. Seznam názvů žánrů a celkový počet skladeb. Vizualizace pomocí koláčového grafu.",
            "Vrať koláčový graf o tom, kolik skladeb má každý žánr a jak se jmenuje 5 nejlepších?",
            "Kolik skladeb má každý žánr a jak se jmenuje pět nejlepších? Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "customers",
            "playlist_tracks"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2848": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "store_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Rock",
                    "Latin",
                    "Metal",
                    "Alternative & Punk",
                    "Jazz"
                ]
            ],
            "y_data": [
                [
                    1297,
                    579,
                    374,
                    332,
                    130
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vyjmenuj 5 nejoblíbenějších žánrů podle počtu skladeb. Seznam názvů žánrů a celkový počet skladeb se sloupcovým grafem.",
            "Vyjmenuj 5 nejoblíbenějších žánrů podle počtu skladeb. Seznam názvů žánrů a celkový počet skladeb. Vykresli je jako sloupcový graf.",
            "Vizualizuj sloupcový graf, kolik skladeb má každý žánr a jak se jmenuje 5 nejlepších.",
            "Ukaž mi sloupcový graf, kolik skladeb má každý žánr a jak se jmenuje pět nejlepších.",
            "Kolik skladeb má každý žánr a jak se jmenuje pět nejlepších? Zobraz sloupcový graf."
        ],
        "irrelevant_tables": [
            "invoices",
            "artists"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2850": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT billing_country , COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "store_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "billing_country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "USA",
                    "Canada",
                    "Brazil",
                    "France",
                    "Germany"
                ]
            ],
            "y_data": [
                [
                    91,
                    56,
                    35,
                    35,
                    28
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kterých 5 zemí je na prvním místě podle počtu faktur a kolik jich mají? Vykresli je jako sloupcový graf.",
            "Vrať histogram o tom, kterých 5 zemí je podle počtu faktur na prvním místě a kolik jich mají."
        ],
        "irrelevant_tables": [
            "playlist_tracks",
            "sqlite_sequence"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2851": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT billing_country , AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "store_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "billing_country",
            "y_name": "AVG(total)",
            "x_data": [
                [
                    "Chile",
                    "Hungary",
                    "Ireland",
                    "Czech Republic",
                    "Austria",
                    "Finland",
                    "Netherlands",
                    "India",
                    "USA",
                    "Norway"
                ]
            ],
            "y_data": [
                [
                    6.659999999999998,
                    6.517142857142857,
                    6.517142857142857,
                    6.445714285714287,
                    6.088571428571428,
                    5.945714285714287,
                    5.802857142857143,
                    5.789230769230769,
                    5.747912087912091,
                    5.659999999999998
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf, jak se jmenují země a jaká je průměrná velikost faktur v zemích s nejvyššími příjmy podle velikosti?"
        ],
        "irrelevant_tables": [
            "invoice_lines",
            "tracks"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2852": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "store_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "SUM(T2.total)",
            "x_data": [
                [
                    "Helena",
                    "Richard",
                    "Luis",
                    "Ladislav",
                    "Hugh",
                    "Julia",
                    "Frank",
                    "Fynn",
                    "Astrid",
                    "Victor"
                ]
            ],
            "y_data": [
                [
                    49.62000000000001,
                    47.62000000000001,
                    46.62,
                    45.62,
                    45.62,
                    43.62000000000001,
                    43.62,
                    43.62,
                    42.62,
                    42.62
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vyjmenuj 10 největších zákazníků podle celkového hrubého obratu. Porovnej celkové hrubé tržby zákazníků podle jejich křestního jména. Zobraz pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "artists",
            "employees"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2857": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT billing_country , SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "store_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "billing_country",
            "y_name": "SUM(total)",
            "x_data": [
                [
                    "USA",
                    "Canada",
                    "France",
                    "Brazil",
                    "Germany",
                    "United Kingdom",
                    "Czech Republic",
                    "Portugal"
                ]
            ],
            "y_data": [
                [
                    523.0600000000003,
                    303.95999999999987,
                    195.09999999999997,
                    190.1,
                    156.48,
                    112.86,
                    90.24,
                    77.23999999999998
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Nakresli sloupcový graf, jak se jmenuje 8 největších zemí podle celkové velikosti faktur a jaké jsou tyto velikosti?",
            "Jak se jmenuje 8 největších zemí podle celkové výše faktur a jaká je jejich velikost. Vykresli je jako sloupcový graf.",
            "Uveď mi histogram, jak se jmenuje 8 nejvýznamnějších zemí podle celkové výše faktur a jaké jsou tyto velikosti?"
        ],
        "irrelevant_tables": [
            "customers",
            "playlist_tracks"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2858": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Headquartered_City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bahawalpur City",
                    "Bhakkar City",
                    "Hafizabad City",
                    "Khanewal City"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti počet prodejen v jednotlivých městech. Vizualizace pomocí koláčového grafu.",
            "Zobraz koláčový graf, kolik obchodů sídlí v jednotlivých městech?",
            "Kolik prodejen sídlí v jednotlivých městech? Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "store_product",
            "product"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2861": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Type , count(*) FROM store GROUP BY TYPE"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "City Mall",
                    "Village Store"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kolik je jednotlivých typů obchodů? Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "product",
            "store_district"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2864": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "One",
                    "Three",
                    "Four",
                    "Five"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Uveď názvy bouří a počet zasažených regionů pro každou bouři pomocí koláčového grafu.",
            "Uveď názvy bouří a počet zasažených regionů pro každou bouři. Vykresli je jako koláčový graf.",
            "Koláčový graf o tom, kolik regionů bylo zasaženo jednotlivými bouřkami.",
            "Vrať koláčový graf, kolik regionů bylo zasaženo jednotlivými bouřkami.",
            "Kolik regionů bylo zasaženo jednotlivými bouřemi? Zobraz koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2866": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Region_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Afghanistan",
                    "Albania",
                    "Algeria",
                    "Denmark"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz názvy regionů a počet bouří pro každý region v koláčovém grafu.",
            "Zobraz názvy regionů a počet bouří pro každý region. Vykresli je jako koláčový graf.",
            "Ukaž mi koláčový graf o tom, kolik bouří se vyskytlo v jednotlivých regionech?",
            "Kolik bouří se vyskytlo v jednotlivých regionech? Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "storm"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2874": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Grade , count(*) FROM list GROUP BY grade",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Grade , count(*) FROM list GROUP BY grade"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "student_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Grade",
            "y_name": "count(*)",
            "x_data": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ]
            ],
            "y_data": [
                [
                    16,
                    12,
                    3,
                    6,
                    12,
                    8,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Bodový graf pro zobrazení známky na ose x a celkového počtu na ose y."
        ],
        "irrelevant_tables": [
            "teachers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2881": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT course_name , COUNT(course_name) FROM courses GROUP BY course_name"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "student_assessment",
        "vis_obj": {
            "chart": "pie",
            "x_name": "course_name",
            "y_name": "COUNT(course_name)",
            "x_data": [
                [
                    "English",
                    "French",
                    "data structure",
                    "statistics",
                    "database",
                    "Art history"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY course_name",
            "sort": null
        },
        "nl_queries": [
            "Udělej mi koláčový graf, který zobrazuje podíl počtu názvů kurzů v tabulce kurzů.",
            "Udělej mi koláčový graf, který ukáže, kolik existuje různých názvů kurzů."
        ],
        "irrelevant_tables": [
            "Candidates",
            "Student_Course_Attendance"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2885": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "student_assessment",
        "vis_obj": {
            "chart": "pie",
            "x_name": "course_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "statistics",
                    "English",
                    "French",
                    "data structure"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Nakresli koláčový graf o tom, kolik studentů je zapsáno v jednotlivých kurzech. Uveď název kurzu a počet jeho registrovaných studentů.",
            "U každého id kurzu zjisti, kolik studentů je přihlášeno a jaké jsou názvy kurzů. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Student_Course_Attendance",
            "People"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2900": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT other_student_details , COUNT(other_student_details) FROM Students GROUP BY other_student_details ORDER BY other_student_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT other_student_details , COUNT(other_student_details) FROM Students GROUP BY other_student_details ORDER BY other_student_details DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "student_transcripts_tracking",
        "vis_obj": {
            "chart": "bar",
            "x_name": "other_student_details",
            "y_name": "COUNT(other_student_details)",
            "x_data": [
                [
                    "assumenda",
                    "atque",
                    "autem",
                    "dolorum",
                    "et",
                    "facilis",
                    "laborum",
                    "nesciunt",
                    "non",
                    "omnis",
                    "qui",
                    "quia",
                    "rerum",
                    "voluptatem"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY other_student_details",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš všechny údaje o studentech v obráceném lexikografickém pořadí a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Addresses",
            "Student_Enrolment_Courses"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2903": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "swimming",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Craig Stevens",
                    "Federico Colbertaldo",
                    "Grant Hackett",
                    "Oussama Mellouli",
                    "Ryan Cochrane",
                    "Sergiy Fesenko"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf pro zjištění počtu jmen plavců, kteří mají výsledek \"vítězství\".",
            "Najdi jména plavců, kteří mají výsledek \"vítězství\", a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "event",
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2928": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM swimmer GROUP BY Nationality"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "swimming",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nationality",
            "y_name": "COUNT(Nationality)",
            "x_data": [
                [
                    "Australia",
                    "Canada",
                    "France",
                    "Italy",
                    "Poland",
                    "Tunisia",
                    "Ukraine"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Nationality",
            "sort": null
        },
        "nl_queries": [
            "Nakresli sloupcový graf o rozložení národnosti a množství národností, a seskup je podle atributu národnost.",
            "Vrať sloupcový graf o rozložení národnosti a množství národnosti, a seskup je podle atributu národnost.",
            "Zjisti státní příslušnost a množství státní příslušnosti, seskup je podle atributu státní příslušnost a vizualizuj je pomocí sloupcového grafu.",
            "Vizualizuj sloupcový graf o rozložení národnosti a množství národnosti, a seskup je podle atributu národnost.",
            "Sloupcový graf: osa x - národnost, osa y - kolik národností"
        ],
        "irrelevant_tables": [
            "stadium",
            "record"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2930": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "swimming",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Baku Olympic Stadium",
                    "Gazprom Arena",
                    "Nou Mestalla",
                    "Yubileyniy Stadium"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": null
        },
        "nl_queries": [
            "Najdi názvy stadionů, na kterých byli nějací australští plavci, a spočítej je pomocí koláčového grafu",
            "Koláčový graf pro zjištění počtu názvů stadionů, na kterých byli nějací australští plavci."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2932": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Vijay Singh",
                    "John Daly",
                    "Paul Azinger",
                    "Jeff Sluman",
                    "Nick Price"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz jména všech umělců a počet výstav každého umělce v koláčovém grafu.",
            "Zobraz koláčový graf o tom, kolik výstav měl každý umělec."
        ],
        "irrelevant_tables": [
            "exhibition_record"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2934": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Date , Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Date , Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Date",
            "y_name": "Attendance",
            "x_data": [
                [
                    "December 2",
                    "December 5",
                    "December 7"
                ]
            ],
            "y_data": [
                [
                    965,
                    1098,
                    2983
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Najdi data a návštěvnost výstav, které se konaly v roce 2004, a v koláčovém grafu mi ukaž podíl návštěvnosti podle data."
        ],
        "irrelevant_tables": [
            "artist"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2941": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM artist GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM artist GROUP BY Country"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Fiji",
                    "United States",
                    "Zimbabwe"
                ]
            ],
            "y_data": [
                [
                    1,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": null
        },
        "nl_queries": [
            "Uveď sloupcový graf počtu zemí v tabulce umělců"
        ],
        "irrelevant_tables": [
            "exhibition",
            "exhibition_record"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2958": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "pie",
            "x_name": "outcome_description",
            "y_name": "COUNT(outcome_description)",
            "x_data": [
                [
                    "Published Research Paper",
                    "Research Patent"
                ]
            ],
            "y_data": [
                [
                    10,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY outcome_description",
            "sort": null
        },
        "nl_queries": [
            "Jaké jsou popisy všech výstupů projektu? Spočítej je pomocí koláčového grafu",
            "Uveď popis výsledků všech projektů? Spočítej je pomocí koláčového grafu",
            "Koláčový graf o tom, kolik je počet popisů všech výstupů projektu?",
            "Koláčový graf pro uvedení počtu popisu výsledků všech projektů."
        ],
        "irrelevant_tables": [
            "Research_Staff",
            "Staff_Roles"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2960": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT staff_details , COUNT(staff_details) FROM Research_Staff GROUP BY staff_details ORDER BY staff_details ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "staff_details",
            "y_name": "COUNT(staff_details)",
            "x_data": [
                [
                    "ab",
                    "accusamus",
                    "animi",
                    "aspernatur",
                    "consequatur",
                    "dicta",
                    "dolor",
                    "doloribus",
                    "est",
                    "iure",
                    "nulla",
                    "quo",
                    "sint",
                    "voluptatibus"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY staff_details",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké jsou podrobnosti o výzkumných pracovnících? Vypiš výsledky vzestupně podle abecedy a spočítej je pomocí sloupcového grafu",
            "Vypiš údaje o výzkumných pracovnících? Seřaď je vzestupně a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Documents",
            "Organisations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2962": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM Project_Staff",
                "binning": "BIN date_from BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_from , COUNT(date_from) FROM Project_Staff BIN date_from BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    0,
                    2,
                    1,
                    2,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Kdy začnou pracovat zaměstnanci v roli výzkumného pracovníka? Rozděl čas na intervaly v týdnu a spočítej je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Research_Outcomes",
            "Tasks"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2963": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_to , COUNT(date_to) FROM Project_Staff",
                "binning": "BIN date_to BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_to , COUNT(date_to) FROM Project_Staff BIN date_to BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_to",
            "y_name": "COUNT(date_to)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    3,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_to BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Kdy přestanou pracovat všichni zaměstnanci v roli výzkumného pracovníka? Rozděl čas na intervaly v týdnu a spočítej je pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Research_Staff",
            "Organisation_Types"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2969": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_orders",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "SUM(count(*))",
            "x_data": [
                [
                    "book",
                    "clothes",
                    "food",
                    "music",
                    "phone"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name",
            "sort": null
        },
        "nl_queries": [
            "Uveď název a počet jednotlivých produktů ve všech objednávkách pomocí sloupcového grafu.",
            "U každého výrobku uveď jeho název a počet objednávek. Vykresli je jako sloupcový graf."
        ],
        "irrelevant_tables": [
            "Invoices",
            "Shipment_Items"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "2971": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T3.product_name , SUM(count(*)) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_name"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tracking_orders",
        "vis_obj": {
            "chart": "pie",
            "x_name": "product_name",
            "y_name": "SUM(count(*))",
            "x_data": [
                [
                    "book",
                    "clothes",
                    "food",
                    "music",
                    "phone"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name",
            "sort": null
        },
        "nl_queries": [
            "Uveď název a počet jednotlivých produktů ve všech objednávkách pomocí koláčového grafu.",
            "Uveď název a počet jednotlivých produktů ve všech objednávkách. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Invoices",
            "Shipment_Items"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2972": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tracking_orders",
        "vis_obj": {
            "chart": "pie",
            "x_name": "customer_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "George",
                    "Beulah",
                    "Jeramie"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U každého zákazníka, který má alespoň dvě objednávky, zjisti jméno zákazníka a počet uskutečněných objednávek. Zobraz koláčový graf."
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2973": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_name , count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_orders",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "George",
                    "Beulah",
                    "Jeramie"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U každého zákazníka, který má alespoň dvě objednávky, zjisti jméno zákazníka a počet uskutečněných objednávek. Vizualizace pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2979": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_orders",
        "vis_obj": {
            "chart": "bar",
            "x_name": "order_status",
            "y_name": "COUNT(order_status)",
            "x_data": [
                [
                    "On Road",
                    "Packing"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY order_status",
            "sort": null
        },
        "nl_queries": [
            "Vyhledej stavy objednávek, které patří zákazníkovi se jménem \"Jeramie\", seskup je podle stavu objednávky a spočítej je. Výsledek zobraz pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Invoices",
            "Order_Items"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "2980": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT T2.order_status , COUNT(T2.order_status) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\" GROUP BY order_status"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "tracking_orders",
        "vis_obj": {
            "chart": "pie",
            "x_name": "order_status",
            "y_name": "COUNT(order_status)",
            "x_data": [
                [
                    "On Road",
                    "Packing"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY order_status",
            "sort": null
        },
        "nl_queries": [
            "Vyhledej stavy objednávek, které patří zákazníkovi se jménem \"Jeramie\", seskup je podle stavu objednávky a spočítej je. Výsledek zobraz pomocí koláčového grafu.",
            "Zjisti stav objednávek, které patří zákazníkovi se jménem \"Jeramie\", seskup je podle stavu objednávky a zobraz podíl stavu objednávky pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "Shipment_Items",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "2998": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100",
                "binning": "BIN date_of_transaction BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100 BIN date_of_transaction BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_transaction",
            "y_name": "COUNT(date_of_transaction)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    3,
                    0,
                    3,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_transaction BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf pro počet dat transakcí s počtem akcií alespoň 100 nebo částkou větší než 100? Rozděl datum podle dnů v týdnu.",
            "Jaká jsou data transakcí s počtem akcií alespoň 100 nebo částkou větší než 100? Rozděl data podle týdenních dat a spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "Lots",
            "Ref_Transaction_Types"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "3004": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "pie",
            "x_name": "transaction_type_code",
            "y_name": "avg(amount_of_transaction)",
            "x_data": [
                [
                    "PUR",
                    "SALE"
                ]
            ],
            "y_data": [
                [
                    25945880.3716125,
                    11198167.237771427
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz průměrnou částku transakce pro různé typy transakcí pomocí koláčového grafu.",
            "Zobraz průměrné částky transakce pro různé typy transakcí. Vizualizace pomocí koláčového grafu.",
            "vypočítej celkovou průměrnou částku transakce napříč kódem typu transakce jako koláčový graf."
        ],
        "irrelevant_tables": [
            "Sales",
            "Purchases"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3009": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS",
                "binning": "BIN date_of_transaction BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_transaction , SUM(share_count) FROM TRANSACTIONS BIN date_of_transaction BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_transaction",
            "y_name": "SUM(share_count)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Fri",
                    "Sat",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    674529892,
                    96529,
                    1663726,
                    0,
                    9357173,
                    0,
                    97709
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_transaction BY WEEKDAY",
            "sort": null
        },
        "nl_queries": [
            "Rozděl všechna data transakcí do intervalu dnů v týdnu a sečti počet podílů v každém intervalu. Vrať výsledek pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Sales",
            "Ref_Transaction_Types"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "3021": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "pie",
            "x_name": "purchase_details",
            "y_name": "COUNT(purchase_details)",
            "x_data": [
                [
                    "a",
                    "c",
                    "i",
                    "r"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY purchase_details",
            "sort": null
        },
        "nl_queries": [
            "Jaké jsou údaje o nákupu transakcí s částkou vyšší než 10000? Spočítej je pomocí koláčového grafu",
            "Koláčový graf pro počet údajů o nákupu transakcí s částkou vyšší než 10000?"
        ],
        "irrelevant_tables": [
            "Ref_Transaction_Types",
            "Investors"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3046": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , AVG(Number_of_Platforms) FROM station GROUP BY Location"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "AVG(Number_of_Platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    14
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location",
            "sort": null
        },
        "nl_queries": [
            "Uveď mi sloupcový graf průměrného number_of_platforms v různých lokalitách.",
            "Jaký je průměr number_of_platforms pro každou lokalitu? Srovnání zobraz pomocí sloupcového grafu.",
            "Sloupcový graf: osa x - umístění, osa y - průměr počtu platforem"
        ],
        "irrelevant_tables": [
            "train",
            "train_station"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3047": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location , COUNT(Location) FROM station GROUP BY Location"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location",
            "sort": null
        },
        "nl_queries": [
            "Na kolika různých místech? Zobraz poměr pomocí koláčového grafu.",
            "Uveď koláčový graf podílu jednotlivých lokalit."
        ],
        "irrelevant_tables": [
            "train_station",
            "train"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3051": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location",
            "y_name": "sum(number_of_platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "V koláčovém grafu zobraz všechny lokality a celkový počet nástupišť pro všechny vlakové stanice v každé lokalitě.",
            "Zobraz podíl celkového počtu plošin v jednotlivých lokalitách v koláčovém grafu.",
            "Uveď mi koláčový graf, který zobrazí celkový počet platforem z různých míst."
        ],
        "irrelevant_tables": [
            "train_station",
            "train"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3054": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Location",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658,
                    498.50700000000006
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz podíl celkového počtu cestujících v jednotlivých místech pomocí koláčového grafu.",
            "Udělej mi koláčový graf o podílu celkového počtu cestujících v jednotlivých lokalitách."
        ],
        "irrelevant_tables": [
            "train_station",
            "train"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3056": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY Location",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT sum(number_of_platforms) , sum(total_passengers) FROM station GROUP BY Location"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "sum(number_of_platforms)",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    13
                ],
                [
                    17
                ],
                [
                    140
                ]
            ],
            "y_data": [
                [
                    36.331
                ],
                [
                    29.658
                ],
                [
                    498.50700000000006
                ]
            ],
            "classify": [
                "Birmingham",
                "Glasgow",
                "London"
            ],
            "describe": "GROUP BY Location",
            "sort": null
        },
        "nl_queries": [
            "Nakresli bodový graf součtu počtu nástupišť vs. celkový počet cestujících, kde součet počtu nástupišť je na ose x a body jsou barevně označeny podle polohy"
        ],
        "irrelevant_tables": [
            "train_station",
            "train"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "3063": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Package_Option",
            "y_name": "COUNT(Package_Option)",
            "x_data": [
                [
                    "Sky Famiglia",
                    "Sky Famiglia + Sky HD",
                    "no ( FTV )"
                ]
            ],
            "y_data": [
                [
                    8,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Package_Option",
            "sort": null
        },
        "nl_queries": [
            "Jaké jsou možnosti balíčků všech televizních kanálů, které nehrají žádné kreslené filmy režírované Benem Jonesem? Spočítej je pomocí koláčového grafu",
            "Najdi možnost balíčku televizního kanálu, který nemá žádné karikatury režírované Benem Jonesem. Spočítej je do koláčového grafu",
            "Koláčový graf pro to, jaký je počet možností balíčků všech televizních kanálů, které nehrají žádné kreslené filmy režírované Benem Jonesem."
        ],
        "irrelevant_tables": [
            "TV_series"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3064": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Package_Option , COUNT(Package_Option) FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones') GROUP BY Package_Option"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Package_Option",
            "y_name": "COUNT(Package_Option)",
            "x_data": [
                [
                    "Sky Famiglia",
                    "Sky Famiglia + Sky HD",
                    "no ( FTV )"
                ]
            ],
            "y_data": [
                [
                    8,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Package_Option",
            "sort": null
        },
        "nl_queries": [
            "najít možnost balíčku televizního kanálu, který nemá žádné karikatury režírované Benem Jonesem. Spočítej je do sloupcového grafu",
            "Sloupcový graf pro to, jaký počet možností balíčků všech televizních kanálů, které nehrají žádné kreslené filmy režírované Benem Jonesem.",
            "Jaké jsou možnosti balíčků všech televizních kanálů, které nehrají žádné kreslené filmy režírované Benem Jonesem. Spočítej je do sloupcového grafu"
        ],
        "irrelevant_tables": [
            "TV_series"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "3067": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , followers FROM user_profiles ORDER BY followers DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , followers FROM user_profiles ORDER BY followers DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "followers",
            "x_data": [
                [
                    "Tyler Swift",
                    "Natalie Portman",
                    "Black Widow\n",
                    "Celine Dion",
                    "Iron Man",
                    "Mary",
                    "Susan"
                ]
            ],
            "y_data": [
                [
                    99999998,
                    94375428,
                    35425845,
                    23927492,
                    6662425,
                    890,
                    100
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš jméno a počet sledujících pro každého uživatele a seřaď výsledky podle počtu sledujících sestupně pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "follows",
            "tweets"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3068": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Iron Man",
                    "Black Widow\n",
                    "Susan",
                    "Tyler Swift",
                    "Celine Dion"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zjisti jméno každého uživatele a počet tweetů, které každý z nich napsal. Vizualizace pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "follows"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3070": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Affiliation",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Private/Methodist",
                    "Public"
                ]
            ],
            "y_data": [
                [
                    2100,
                    119027
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz koláčový graf o tom, kolik je celkový počet studentů na vysokých školách jednotlivých typů afiliací?",
            "Vizualizuj koláčový graf s údaji o celkovém počtu studentů na univerzitách jednotlivých typů afiliací?",
            "Jaký je celkový počet studentů na univerzitách jednotlivých typů afiliací? Vykresli je jako koláčový graf.",
            "Vypočítej celkový počet zápisů v jednotlivých pobočkách jako koláčový graf."
        ],
        "irrelevant_tables": [
            "basketball_match"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3079": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Road"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "ACC_Percent",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    0.563,
                    0.625
                ],
                [
                    0.813
                ],
                [
                    0.875
                ]
            ],
            "y_data": [
                [
                    0.6,
                    0.706
                ],
                [
                    0.8240000000000001
                ],
                [
                    0.946
                ]
            ],
            "classify": [
                "3-5",
                "6-2",
                "8-0"
            ],
            "describe": "GROUP BY ACC_Road",
            "sort": null
        },
        "nl_queries": [
            "Vizualizuj seskupený bodový graf o korelaci mezi ACC_Percent a All_Games_Percent, a seskup je podle atributu ACC_Road.",
            "Nakresli bodový graf ACC_Percent vs All_Games_Percent, kde ACC_Percent je na ose x a body jsou barevně označeny podle ACC_Road"
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "3085": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Home"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "ACC_Percent",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    0.875,
                    0.563
                ],
                [
                    0.625,
                    0.813
                ]
            ],
            "y_data": [
                [
                    0.946,
                    0.6
                ],
                [
                    0.706,
                    0.8240000000000001
                ]
            ],
            "classify": [
                "6-2",
                "7-1"
            ],
            "describe": "GROUP BY ACC_Home",
            "sort": null
        },
        "nl_queries": [
            "Bodový graf zobrazuje korelaci mezi ACC_Percent a All_Games_Percent, a to barevně podle atributu ACC_Home.",
            "Zobrazení vztahu mezi ACC_Percent a All_Games_Percent pro každý ACC_Home pomocí seskupeného bodového grafu"
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            },
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "3097": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Home"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "ACC_Percent",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    0.625,
                    0.875
                ],
                [
                    0.563
                ],
                [
                    0.813
                ]
            ],
            "y_data": [
                [
                    0.706,
                    0.946
                ],
                [
                    0.6
                ],
                [
                    0.8240000000000001
                ]
            ],
            "classify": [
                "14-2",
                "14-3",
                "15-1"
            ],
            "describe": "GROUP BY All_Home",
            "sort": null
        },
        "nl_queries": [
            "Bodový graf All_Games_Percent vs ACC_Percent obarvený podle All_Home"
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "3121": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "ACC_Percent",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    0.875,
                    0.813,
                    0.625,
                    0.563
                ]
            ],
            "y_data": [
                [
                    0.946,
                    0.8240000000000001,
                    0.706,
                    0.6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vrať bodový graf o korelaci mezi ACC_Percent a All_Games_Percent.",
            "Bodový graf ukazuje korelaci mezi ACC_Percent a All_Games_Percent.",
            "Ukaž mi korelaci mezi ACC_Percent a All_Games_Percent v bodovém grafu.",
            "Bodový graf, který zobrazuje procenta acc na ose x a procenta all_games_percent na ose y."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3139": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT All_Games , All_Games_Percent FROM basketball_match"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "pie",
            "x_name": "All_Games",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    "35-2",
                    "28-6",
                    "24-10",
                    "21-14"
                ]
            ],
            "y_data": [
                [
                    0.946,
                    0.8240000000000001,
                    0.706,
                    0.6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vytvoř koláčový graf zobrazující all_games_percent napříč všemi hrami."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3150": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "pie",
            "x_name": "ACC_Regular_Season",
            "y_name": "ACC_Percent",
            "x_data": [
                [
                    "14-2",
                    "13-3",
                    "10-6",
                    "9-7"
                ]
            ],
            "y_data": [
                [
                    0.875,
                    0.813,
                    0.625,
                    0.563
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pro atribut ACC_Regular_Season a ACC_Percent zobraz jejich podíl pomocí koláčového grafu.",
            "Vytvoření koláčového grafu zobrazujícího acc_percent napříč acc základní sezónou."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3165": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY Team_Name"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "ACC_Percent",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    0.625
                ],
                [
                    0.813
                ],
                [
                    0.875
                ],
                [
                    0.563
                ]
            ],
            "y_data": [
                [
                    0.706
                ],
                [
                    0.8240000000000001
                ],
                [
                    0.946
                ],
                [
                    0.6
                ]
            ],
            "classify": [
                "Clemson",
                "Duke",
                "North Carolina",
                "Virginia Tech"
            ],
            "describe": "GROUP BY Team_Name",
            "sort": null
        },
        "nl_queries": [
            "Graf bodového grafu all_games_percent vs acc procenta obarvená podle Team_Name"
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "3171": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY ACC_Regular_Season"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "ACC_Percent",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    0.625
                ],
                [
                    0.813
                ],
                [
                    0.875
                ],
                [
                    0.563
                ]
            ],
            "y_data": [
                [
                    0.706
                ],
                [
                    0.8240000000000001
                ],
                [
                    0.946
                ],
                [
                    0.6
                ]
            ],
            "classify": [
                "10-6",
                "13-3",
                "14-2",
                "9-7"
            ],
            "describe": "GROUP BY ACC_Regular_Season",
            "sort": null
        },
        "nl_queries": [
            "Rozptylový graf zobrazuje korelaci mezi ACC_Percent a All_Games_Percent, a to barevně podle atributu ACC_Regular_Season."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "3177": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT ACC_Percent , All_Games_Percent FROM basketball_match GROUP BY All_Games"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "ACC_Percent",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    0.563
                ],
                [
                    0.625
                ],
                [
                    0.813
                ],
                [
                    0.875
                ]
            ],
            "y_data": [
                [
                    0.6
                ],
                [
                    0.706
                ],
                [
                    0.8240000000000001
                ],
                [
                    0.946
                ]
            ],
            "classify": [
                "21-14",
                "24-10",
                "28-6",
                "35-2"
            ],
            "describe": "GROUP BY All_Games",
            "sort": null
        },
        "nl_queries": [
            "Vrátí seskupený bodový graf o korelaci mezi ACC_Percent a All_Games_Percent, seskupený podle atributu All_Games."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "3198": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT state , COUNT(state) FROM votes GROUP BY state",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT state , COUNT(state) FROM votes GROUP BY state"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "voter_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "state",
            "y_name": "COUNT(state)",
            "x_data": [
                [
                    "CA",
                    "NJ",
                    "NY"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY state",
            "sort": null
        },
        "nl_queries": [
            "Vypiš státy všech hlasování, vypočítej celkový počet států a znázorni poměr pomocí koláčového grafu."
        ],
        "irrelevant_tables": [
            "CONTESTANTS",
            "AREA_CODE_STATE"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3207": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding)"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Graeme McDowell",
                    "Adam Scott"
                ]
            ],
            "y_data": [
                [
                    34,
                    26
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz jméno a věk všech osob mužského pohlaví, kteří nemají svatbu, pomocí sloupcového grafu.",
            "Uveď jméno a věk všech osob mužského pohlaví, které nemají svatbu. Vizualizace pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "church"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "3213": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Australia",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf o podílu počtu zemí pro všechny lidi, jejichž věk je nižší než průměr."
        ],
        "irrelevant_tables": [
            "wedding",
            "church"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3215": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM people GROUP BY country",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Country , count(*) FROM people GROUP BY country"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Australia",
                    "Canada",
                    "Northern Ireland",
                    "Sweden",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz všechny země a počet obyvatel z každé země v koláčovém grafu.",
            "Udělej mi koláčový graf, který ukáže celkový počet z různých zemí."
        ],
        "irrelevant_tables": [
            "church",
            "wedding"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3222": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Appelation ORDER BY Name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Appelation , COUNT(Appelation) FROM WINE WHERE Score > 93 GROUP BY Appelation ORDER BY Name"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Appelation",
            "y_name": "COUNT(Appelation)",
            "x_data": [
                [
                    "Amador County",
                    "Anderson Valley",
                    "Bennett Valley",
                    "Carneros",
                    "Chalk Hill",
                    "Dry Creek Valley",
                    "Napa Valley",
                    "Paso Robles",
                    "Russian River Valley",
                    "Rutherford",
                    "Santa Lucia Highlands",
                    "Santa Maria Valley",
                    "Sonoma Coast",
                    "Sonoma County",
                    "Sonoma Valley",
                    "St. Helena",
                    "Sta. Rita Hills"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    14,
                    2,
                    11,
                    1,
                    6,
                    1,
                    5,
                    6,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Appelation",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf zobrazuje počet apelací, jejichž skóre je vyšší než 93, a je seřazen podle názvu."
        ],
        "irrelevant_tables": [
            "appellations",
            "grapes"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "3227": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Year ORDER BY YEAR",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Grape ,  Year ORDER BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2006",
                    "2007",
                    "2008"
                ]
            ],
            "y_data": [
                [
                    4,
                    11,
                    2
                ],
                [
                    1,
                    1,
                    0
                ],
                [
                    1,
                    1,
                    0
                ]
            ],
            "classify": [
                "Cabernet Sauvingnon",
                "Grenache",
                "Syrah"
            ],
            "describe": "GROUP BY Grape, GROUP BY Year",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vína, jejichž cena je vyšší než 100, seskup podle hroznů, spočítej jejich celkový počet v jednotlivých ročnících a seřaď je podle ročníků ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "grapes",
            "appellations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "sort_by": "field",
                "stacked_bar": true
            }
        ]
    },
    "3229": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2006",
                    "2007",
                    "2008"
                ]
            ],
            "y_data": [
                [
                    6,
                    13,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Year",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf s počtem vín, jejichž cena je vyšší než 100, seřazených podle ročníků.",
            "Jaký je počet vín s cenou vyšší než 100 seřazených podle ročníku? Vizualizuj je pomocí sloupcového grafu.",
            "Sloupcový graf o tom, kolik vín, jejichž cena je vyšší než 100, bylo objednáno v jednotlivých letech."
        ],
        "irrelevant_tables": [
            "grapes",
            "appellations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3230": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM WINE WHERE Price > 100 GROUP BY Year ORDER BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2006",
                    "2007",
                    "2008"
                ]
            ],
            "y_data": [
                [
                    6,
                    13,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Year BY TIME",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vína s cenou vyšší než 100 pak spočítej a seskup podle ročníku, seřaď podle ročníku vzestupně. Vizualizuj výsledek pomocí sloupcového grafu.",
            "Sloupcový graf zobrazující počet těchto vín s cenou větší než 100 a pořadí podle roku vzestupně."
        ],
        "irrelevant_tables": [
            "grapes",
            "appellations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3240": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Year , avg(Price) FROM WINE GROUP BY YEAR",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Year , avg(Price) FROM WINE GROUP BY YEAR"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "Year",
            "y_name": "avg(Price)",
            "x_data": [
                [
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2066"
                ]
            ],
            "y_data": [
                [
                    60.714285714285715,
                    52.82142857142857,
                    52.941176470588225,
                    49.41847826086956,
                    39.70769230769231,
                    30.953846153846154,
                    32
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vykresli rok podle průměrné ceny jako čárový graf"
        ],
        "irrelevant_tables": [
            "grapes",
            "appellations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3259": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Istanbul Turkey",
                    "London UK",
                    "New Jersey USA",
                    "New York USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf ukazuje místo konání jednotlivých workshopů.",
            "Vrať počet míst konání jednotlivých workshopů v koláčovém grafu."
        ],
        "irrelevant_tables": [
            "Acceptance",
            "submission"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3260": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM workshop GROUP BY Venue"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Istanbul Turkey",
                    "London UK",
                    "New Jersey USA",
                    "New York USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue",
            "sort": null
        },
        "nl_queries": [
            "Vrať počet míst konání jednotlivých workshopů ve sloupcovém grafu.",
            "Nakresli sloupcový graf s počtem míst konání jednotlivých workshopů."
        ],
        "irrelevant_tables": [
            "submission",
            "Acceptance"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "3262": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Author , COUNT(Author) FROM submission GROUP BY Author"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Author",
            "y_name": "COUNT(Author)",
            "x_data": [
                [
                    "Andy Bolton",
                    "Don Bitterlich",
                    "Jeff Lloyd",
                    "Randy Johnson",
                    "Rick Engles",
                    "Sammy Green",
                    "Sherman Smith",
                    "Steve Myer",
                    "Steve Niehaus",
                    "Steve Raible"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Author",
            "sort": null
        },
        "nl_queries": [
            "Ukaž autorům jejich celkový počet příspěvků pomocí koláčového grafu.",
            "Vizualizuj koláčový graf o tom, kolik autorů se do workshopu přihlásí."
        ],
        "irrelevant_tables": [
            "Acceptance",
            "workshop"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3263": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(Author) FROM submission GROUP BY Author",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(Author) FROM submission GROUP BY Author"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(Author)",
            "x_data": [
                [
                    "Andy Bolton",
                    "Don Bitterlich",
                    "Jeff Lloyd",
                    "Randy Johnson",
                    "Rick Engles",
                    "Sammy Green",
                    "Sherman Smith",
                    "Steve Myer",
                    "Steve Niehaus",
                    "Steve Raible"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Author",
            "sort": null
        },
        "nl_queries": [
            "Ukaž autorům jejich celkový počet příspěvků pomocí sloupcového grafu.",
            "Vizualizuj sloupcový graf počtu autorů, kteří se přihlásí na workshop.",
            "Vytvoř sloupcového grafu zobrazujícího počet autorů napříč autory"
        ],
        "irrelevant_tables": [
            "Acceptance",
            "workshop"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "3264": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Accepted",
                    "Rejected"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result",
            "sort": null
        },
        "nl_queries": [
            "Vypočítej podíl výsledku přijetí a vrať koláčový graf.",
            "Nakresli koláčový graf, který zobrazí podíl výsledků přijetí."
        ],
        "irrelevant_tables": [
            "submission",
            "workshop"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3265": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Author",
            "y_name": "COUNT(DISTINCT T1.workshop_id)",
            "x_data": [
                [
                    "Jeff Lloyd",
                    "Sammy Green",
                    "Sherman Smith",
                    "Steve Niehaus",
                    "Steve Raible"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "V koláčovém grafu zobraz jednotlivé autory a počet workshopů, do kterých se přihlásili.",
            "Uveď jednotlivé autory a počet workshopů, do kterých se přihlásili. Zobraz koláčový graf.",
            "Koláčový graf o tom, do kolika workshopů se každý autor přihlásil. Vrátí jméno autora a počet workshopů.",
            "Vizualizuj koláčový graf s údaji o tom, do kolika workshopů se přihlásil každý autor. Vrátí jméno autora a počet workshopů.",
            "Kolika workshopů se každý autor zúčastnil? Vrať jméno autora a počet workshopů pomocí koláčového grafu.",
            "Kolika workshopů se každý autor zúčastnil? Vrátí jméno autora a počet workshopů. Vykresli je jako koláčový graf."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3268": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "world_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Continent",
            "y_name": "avg(LifeExpectancy)",
            "x_data": [
                [
                    "Africa",
                    "Asia",
                    "Oceania",
                    "South America"
                ]
            ],
            "y_data": [
                [
                    52.57192982456139,
                    67.44117647058825,
                    69.715,
                    70.94615384615386
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Koláčový graf ukazuje průměrnou délku života na jednotlivých kontinentech, kde je průměrná délka života kratší než 72 let.",
            "U světadílů, které mají průměrnou délku života nižší než 72 let, zobrazuje jejich průměrnou délku života koláčový graf."
        ],
        "irrelevant_tables": [
            "countrylanguage",
            "city"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3270": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "world_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "sum(Population)",
            "y_name": "avg(LifeExpectancy)",
            "x_data": [
                [
                    784475000,
                    3705025700,
                    30401150,
                    345780000
                ]
            ],
            "y_data": [
                [
                    52.57192982456139,
                    67.44117647058825,
                    69.715,
                    70.94615384615386
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U každého kontinentu, kde je průměrná délka života kratší než 72 let, zobrazuje pomocí bodového grafu závislost mezi průměrnou délkou života a celkovým počtem obyvatel."
        ],
        "irrelevant_tables": [
            "sqlite_sequence",
            "countrylanguage"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "3271": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72"
        },
        "chart": "Pie",
        "hardness": "Medium",
        "db_id": "world_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Continent",
            "y_name": "sum(Population)",
            "x_data": [
                [
                    "Africa",
                    "Asia",
                    "Oceania",
                    "South America"
                ]
            ],
            "y_data": [
                [
                    784475000,
                    3705025700,
                    30401150,
                    345780000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U každého kontinentu, kde je průměrná délka života kratší než 72 let, znázorňuje pomocí koláčového grafu podíl na celkové populaci.",
            "Koláčový graf znázorňuje podíl celkové populace kontinentů, které mají průměrnou délku života nižší než 72 let."
        ],
        "irrelevant_tables": [
            "city",
            "sqlite_sequence"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3272": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT sum(Population) , avg(LifeExpectancy) FROM country GROUP BY Continent"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "world_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "sum(Population)",
            "y_name": "avg(LifeExpectancy)",
            "x_data": [
                [
                    784475000
                ],
                [
                    3705025700
                ],
                [
                    730074600
                ],
                [
                    482993000
                ],
                [
                    30401150
                ],
                [
                    345780000
                ]
            ],
            "y_data": [
                [
                    52.57192982456139
                ],
                [
                    67.44117647058825
                ],
                [
                    75.14772727272728
                ],
                [
                    72.99189189189188
                ],
                [
                    69.715
                ],
                [
                    70.94615384615386
                ]
            ],
            "classify": [
                "Africa",
                "Asia",
                "Europe",
                "North America",
                "Oceania",
                "South America"
            ],
            "describe": "GROUP BY Continent",
            "sort": null
        },
        "nl_queries": [
            "Zobraz součet populace vs. průměrná délka života jako bodový graf a použij jinou barvu pro každý kontinent"
        ],
        "irrelevant_tables": [
            "countrylanguage",
            "city"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "3273": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language"
        },
        "chart": "Pie",
        "hardness": "Hard",
        "db_id": "world_1",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Language",
            "y_name": "COUNT(Language)",
            "x_data": [
                [
                    "Dutch",
                    "Papiamento"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Language",
            "sort": null
        },
        "nl_queries": [
            "Jaký je úřední jazyk používaný v zemi, jejíž hlava státu se jmenuje Beatrix? Spočítej je pomocí koláčového grafu",
            "Jakým úředním jazykem se mluví v zemi, jejíž hlavou státu je Beatrix? Spočítej je pomocí koláčového grafu"
        ],
        "irrelevant_tables": [
            "sqlite_sequence",
            "city"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3274": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Language , COUNT(Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\" GROUP BY Language"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "world_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Language",
            "y_name": "COUNT(Language)",
            "x_data": [
                [
                    "Dutch",
                    "Papiamento"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Language",
            "sort": null
        },
        "nl_queries": [
            "Jakým úředním jazykem se mluví v zemi, jejíž hlavou státu je Beatrix? Spočítej je pomocí sloupcového grafu",
            "Jaký je úřední jazyk používaný v zemi, jejíž hlava státu se jmenuje Beatrix? Spočítej je pomocí sloupcového grafu"
        ],
        "irrelevant_tables": [
            "city",
            "sqlite_sequence"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "3278": {
        "vis_query": {
            "vis_part": "Visualize PIE",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team",
                "binning": ""
            },
            "VQL": "Visualize PIE SELECT Team , COUNT(*) FROM elimination GROUP BY Team"
        },
        "chart": "Pie",
        "hardness": "Easy",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "pie",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Team Batista",
                    "Team Orton"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí koláčového grafu zobraz různé týmy ve vyřazování a počet vyřazení z každého týmu.",
            "Koláčový graf o tom, kolik vyřazení měl každý tým?",
            "Kolik vyřazení měl každý tým? Vykresli je jako koláčový graf.",
            "Koláčový graf o podílu jednotlivých týmů na celkovém počtu."
        ],
        "irrelevant_tables": [
            "wrestler"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "3291": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , count(year) FROM matches",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize BAR SELECT year , count(year) FROM matches BIN year BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wta_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "count(year)",
            "x_data": [
                [
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    12,
                    0,
                    0,
                    158,
                    108
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf pro zobrazení počtu let z různých let a rozdělení roku do intervalu YEAR"
        ],
        "irrelevant_tables": [
            "rankings"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "372@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Operating_system , count(*) FROM web_client_accelerator GROUP BY Operating_system ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Operating_system",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Windows, Mac",
                    "Windows",
                    "Unix (Linux, *BSD, Mac OS X, others), Windows",
                    "Windows, except NT and 95",
                    "Windows, Mac, Mobile devices",
                    "Windows, Mac, Linux and Mobile devices",
                    "Windows, Mac and Mobile devices",
                    "Windows, Linux, Mac OS, Symbian, WindowsMobile",
                    "Windows (2000 onwards)",
                    "Unix (Linux, *BSD, Mac OS X, others)",
                    "Appliance (Linux)",
                    "Any system with Java 1.6 VM available",
                    "Any",
                    "Android, Linux, Mac and Windows devices"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf operačního systému v porovnání s celkovým počtem a seřaď je podle Y sestupně, prosím."
        ],
        "irrelevant_tables": [
            "accelerator_compatible_browser",
            "browser"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2443@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "musical",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "West Side Story",
                    "Les Mis\u00e9rables",
                    "The Phantom of the Opera",
                    "The Book of Mormon"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik herců se objevilo v jednotlivých muzikálech? Zobraz je jako sloupcový graf, seřaď je vzestupně podle osy Y.",
            "Zobraz názvy muzikálů a počet herců, kteří v nich účinkovali Zobraz sloupcový graf a osu Y zobraz vzestupně.",
            "Zobraz názvy muzikálů a počet herců, kteří v nich účinkovali, ve sloupcovém grafu a seřaď je od nejnižšího po nejvyšší počet na ose y.",
            "Vrať histogram o tom, kolik herců se objevilo v jednotlivých muzikálech? Mohl bys je zobrazit vzestupně podle celkového počtu?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2450@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nominee , COUNT(*) FROM musical GROUP BY Nominee ORDER BY Nominee DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "musical",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nominee",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Cleavant Derricks",
                    "Bob Fosse"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik muzikálů bylo nominováno na jednotlivé nominace? Načrtni je jako sloupcový graf. Chci je seřadit podle X sestupně.",
            "Zobraz různé nominované muzikály a počet jejich nominací ve sloupcovém grafu. Chci je seřadit podle X sestupně.",
            "Vrať sloupcový graf s údaji o tom, za kolik muzikálů byl každý nominovaný nominován. Data na ose x chci zobrazit sestupně.",
            "Sloupcový graf: osa x - nominovaný, osa y - celkový počet. Data chci zobrazit podle osy x sestupně.",
            "Udělej mi histogram pro kolik muzikálů byl každý nominovaný nominován. Zobraz sestuně dle osy X."
        ],
        "irrelevant_tables": [
            "actor"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1384@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Status , avg(Population) FROM city GROUP BY Status ORDER BY avg(Population) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Status , avg(Population) FROM city GROUP BY Status ORDER BY avg(Population) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "farm",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Status",
            "y_name": "avg(Population)",
            "x_data": [
                [
                    "Village",
                    "Town"
                ]
            ],
            "y_data": [
                [
                    1009.75,
                    5706
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké jsou stavy a průměrné počty obyvatel jednotlivých měst? Zakresli je do sloupcového grafu a uveď podle osy y vzestupně.",
            "Sloupcový graf o tom, jaké jsou stavy a průměrný počet obyvatel jednotlivých měst. Chci to seřadit podle průměru počtu obyvatel vzestupně."
        ],
        "irrelevant_tables": [
            "farm_competition",
            "farm"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1388@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY Year ASC",
                "binning": "BIN Year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Year , COUNT(Year) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID  ORDER BY Year ASC BIN Year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "farm",
        "vis_obj": {
            "chart": "line",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Year BY YEAR",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž, kolik soutěží se koná v jednotlivých letech, pomocí čárového grafu? Mohl bys je seřadit vzestupně podle X?",
            "Ukaž, kolik soutěží se koná v jednotlivých letech, pomocí čárového grafu? Mohl bys je seřadit podle osy x vzestupně?"
        ],
        "irrelevant_tables": [
            "competition_record"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1390@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Official_Name , COUNT(Official_Name) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name ORDER BY COUNT(Official_Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Official_Name , COUNT(Official_Name) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY Official_Name ORDER BY COUNT(Official_Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "farm",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Official_Name",
            "y_name": "COUNT(Official_Name)",
            "x_data": [
                [
                    "Aroostook",
                    "Plaster Rock",
                    "Perth-Andover",
                    "Grand Falls/Grand-Sault",
                    "Drummond"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Official_Name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet soutěží konaných v jednotlivých městech pomocí sloupcového grafu a seřaď je sestupně podle osy y.",
            "Kolik soutěží se koná v jednotlivých městech? Nakresli sloupcový graf, seřaď Y v sestupném pořadí, prosím."
        ],
        "irrelevant_tables": [
            "competition_record"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3204@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DISTINCT state , COUNT(state) FROM votes GROUP BY state ORDER BY COUNT(state) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "voter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "state",
            "y_name": "COUNT(state)",
            "x_data": [
                [
                    "NY",
                    "NJ\n",
                    "CA"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY state",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - stát, osa y - číslo státu. Seřaď je podle toho, kolik je států sestupně.",
            "Jaký je počet různých států? Ukaž mi sloupcový graf, chci to seřadit podle osy Y sestupně, prosím.",
            "Seskup data podle jednotlivých států a spočítej je ve sloupcovém grafu. Chci je vypsat podle osy Y sestupně."
        ],
        "irrelevant_tables": [
            "AREA_CODE_STATE",
            "CONTESTANTS"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1475@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , COUNT(Date) FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id GROUP BY Date ORDER BY COUNT(Date) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id GROUP BY Date ORDER BY COUNT(Date) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "COUNT(Date)",
            "x_data": [
                [
                    "31 October 2008",
                    "16 August 2008",
                    "14 March 2010",
                    "9 December 2007",
                    "8 August 2009",
                    "7 July 2011",
                    "31 October 2010",
                    "22 September 2007",
                    "18 May 2007",
                    "14 October 2009",
                    "10 July 2008"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik hráčů je zraněno v jednotlivých dnech? Zobraz sloupcový graf. Chci zobrazit seznam od nejvyššího po nejnižší podle osy Y."
        ],
        "irrelevant_tables": [
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1478@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Season , COUNT(Season) FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.injury = 'Foot injury' OR T3.injury = 'Knee problem'  ORDER BY COUNT(Season) DESC",
                "binning": "BIN Season BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Season , COUNT(Season) FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.injury = 'Foot injury' OR T3.injury = 'Knee problem'  ORDER BY COUNT(Season) DESC BIN Season BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Season",
            "y_name": "COUNT(Season)",
            "x_data": [
                [
                    "2011",
                    "2008",
                    "2007",
                    "2010",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Season BY YEAR",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik hráčů utrpělo v každé sezóně zranění typu „zranění nohy“ nebo „problém s kolenem“? Nakresli sloupcový graf. Můžeš jej seřadit od nejvyššího po nejnižší podle osy Y?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1484@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ,  Season ORDER BY Season ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Away_team ,  Season ORDER BY Season ASC"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "line",
            "x_name": "Season",
            "y_name": "COUNT(Season)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    2,
                    1,
                    1,
                    2,
                    1
                ],
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    3,
                    1
                ],
                [
                    2,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "Bunyodkor",
                "Pakhtakor",
                "Quruvchi"
            ],
            "describe": "GROUP BY Away_team, GROUP BY Season",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš počet zápasů v každé sezóně a seskup je podle hostujících týmů do skupinového lineárního grafu a seřaď je podle osy X."
        ],
        "irrelevant_tables": [
            "injury_accident",
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1487@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Home_team ,  Away_team ORDER BY COUNT(Away_team) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Home_team ,  Away_team ORDER BY COUNT(Away_team) ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Away_team",
            "y_name": "COUNT(Away_team)",
            "x_data": [
                [
                    "Quruvchi",
                    "Bunyodkor",
                    "Pakhtakor"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    9
                ],
                [
                    3,
                    7,
                    0
                ],
                [
                    0,
                    0,
                    1
                ]
            ],
            "classify": [
                "Bunyodkor",
                "Pakhtakor",
                "Quruvchi"
            ],
            "describe": "GROUP BY Home_team, GROUP BY Away_team",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf počtu hostujících týmů pro každý Home_team v každém týmu hostů, seřazeno od nejnižšího po nejvyšší podle osy y.",
            "Vypiš počet zápasů pro každý tým hostů a seskup je podle domácího týmu do sloupcového grafu. Na ose x je tým hostů. Mohl bys zobrazit data od nejnižších po nejvyšší podle osy Y?"
        ],
        "irrelevant_tables": [
            "stadium",
            "injury_accident"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "y"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            },
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "1488@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Away_team ,  Home_team ORDER BY Home_team DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Away_team ,  Home_team ORDER BY Home_team DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Home_team",
            "y_name": "COUNT(Home_team)",
            "x_data": [
                [
                    "Quruvchi",
                    "Pakhtakor",
                    "Bunyodkor"
                ]
            ],
            "y_data": [
                [
                    0,
                    7,
                    0
                ],
                [
                    1,
                    0,
                    9
                ],
                [
                    0,
                    3,
                    0
                ]
            ],
            "classify": [
                "Bunyodkor",
                "Pakhtakor",
                "Quruvchi"
            ],
            "describe": "GROUP BY Away_team, GROUP BY Home_team",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš počet zápasů každého domácího týmu a seskup je podle týmu hostů do sloupcového grafu. Osa x je domácí tým a chci vypsat osu x sestupně."
        ],
        "irrelevant_tables": [
            "stadium",
            "injury_accident"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "1491@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Home_team ORDER BY COUNT(Home_team) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Home_team , COUNT(Home_team) FROM game GROUP BY Home_team ORDER BY COUNT(Home_team) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Home_team",
            "y_name": "COUNT(Home_team)",
            "x_data": [
                [
                    "Pakhtakor",
                    "Bunyodkor",
                    "Quruvchi"
                ]
            ],
            "y_data": [
                [
                    10,
                    9,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Home_team",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet zápasů každého domácího týmu ve sloupcovém grafu, seřaď podle osy y sestupně, prosím.",
            "Ukaž mi, kolik existuje domácích týmů podle domácího týmu v histogramu. Chci je seřadit podle osy y od nejvyššího k nejnižšímu."
        ],
        "irrelevant_tables": [
            "stadium",
            "injury_accident"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1493@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team ORDER BY COUNT(Away_team) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Away_team , COUNT(Away_team) FROM game GROUP BY Away_team ORDER BY COUNT(Away_team) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Away_team",
            "y_name": "COUNT(Away_team)",
            "x_data": [
                [
                    "Quruvchi",
                    "Bunyodkor",
                    "Pakhtakor"
                ]
            ],
            "y_data": [
                [
                    3,
                    7,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Away_team",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - tým hostů, osa y číslo týmů hostů. Seřaď je od nejnižšího po nejvyšší podle čísla týmu hostů, prosím.",
            "Zobraz počet zápasů každého týmu ve sloupcovém grafu. Chci je seřadit podle počtu zápasů týmu hostů od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "stadium",
            "injury_accident"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1494@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Season , COUNT(Season) FROM game GROUP BY Season ORDER BY Season ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game GROUP BY Season ORDER BY Season ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "line",
            "x_name": "Season",
            "y_name": "COUNT(Season)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    2,
                    2,
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Season",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš počet zápasů v jednotlivých sezónách pomocí čárového grafu, zobrazeného vzestupně na ose X."
        ],
        "irrelevant_tables": [
            "injury_accident",
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1495@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Season , COUNT(Season) FROM game  ORDER BY Season ASC",
                "binning": "BIN Season BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Season , COUNT(Season) FROM game  ORDER BY Season ASC BIN Season BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "game_injury",
        "vis_obj": {
            "chart": "line",
            "x_name": "Season",
            "y_name": "COUNT(Season)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    3,
                    2,
                    2,
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Season BY YEAR",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vykresli sezónu podle počtu sezón jako čárový graf. Mohl bys to seřadit podle osy x vzestupně?",
            "Vypiš počet zápasů v jednotlivých sezónách pomocí čárového grafu. Mohl bys je seřadit vzestupně podle osy x?",
            "Vypiš počet zápasů v každé sezóně pomocí čárového grafu a zobraz osu x vzestupně."
        ],
        "irrelevant_tables": [
            "stadium",
            "injury_accident"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1523@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY T3.Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.Name , COUNT(T3.Name) FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1 GROUP BY T3.Name ORDER BY T3.Name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Surgery",
                    "Psychiatry",
                    "General Medicine"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf ukazující, kolik lékařů pro každý název oddělení je primárně přidruženo, zobraz sestupně podle jmen."
        ],
        "irrelevant_tables": [
            "Block",
            "Appointment"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1525@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician = T2.EmployeeID GROUP BY Name ORDER BY COUNT(Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Christopher Turk",
                    "Molly Clock",
                    "John Dorian",
                    "Percival Cox",
                    "Elliot Reid"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš jména lékařů, kteří přijali nějaký termín, a spočítej je pomocí sloupcového grafu. Osu Y seřaď vzestupně.",
            "Jaká jsou jména všech lékařů, kteří přijali schůzky? Spočítej je pomocí sloupcového grafu a seřaď je podle osy y od nejnižší po nejvyšší, prosím.",
            "Sloupcový graf pro výpis počtu jmen lékařů, kteří přijali nějaké jmenování. Seřaď je podle počtu jmen od nejnižšího po nejvyšší prosím."
        ],
        "irrelevant_tables": [
            "Department",
            "Affiliated_With"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1532@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hospital_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Foo Labs",
                    "X"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet předepsaných léků pro každou značku. Zobraz je jako sloupcový graf a chtěl bych je seřadit podle osy X sestupně, prosím.",
            "Kolik léků je předepsáno pro každou značku? Vizualizuj pomocí sloupcového grafu, chci je zobrazit sestupně podle osy x.",
            "Zobrazení sloupcového grafu, kolik léků je předepsáno pro každou značku? Chci je zobrazit sestupně podle osy x."
        ],
        "irrelevant_tables": [
            "Stay",
            "Procedures"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2308@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Num_of_Component FROM furniture WHERE Num_of_Component > 10 ORDER BY Num_of_Component DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufacturer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Num_of_Component",
            "x_data": [
                [
                    "Billiard table",
                    "Dining set"
                ]
            ],
            "y_data": [
                [
                    14,
                    12
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vizualizuj název a množství komponentů pomocí sloupcového grafu pro všechny nábytky, které mají více než 10 komponentů, a seřaď je od nejvyššího po nejnižší celkový počet."
        ],
        "irrelevant_tables": [
            "manufacturer",
            "furniture_manufacte"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2310@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "manufacturer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Tomorrow",
                    "Chevrolet House",
                    "Jiaju",
                    "Chevrolet"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet typů nábytku vyráběných jednotlivými výrobci a názvy společností. Zobraz sloupcový graf a mohl bys zobrazit osu x sestupně, prosím?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2314@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Price_in_Dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufacturer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Price_in_Dollar",
            "x_data": [
                [
                    "Hatstand",
                    "Dining set",
                    "Chabudai",
                    "Bookcase",
                    "Billiard table"
                ]
            ],
            "y_data": [
                [
                    1234,
                    2124,
                    450,
                    239,
                    443
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Porovnej ceny nábytku, který některé společnosti vyrábějí, podle jednotlivých názvů, pomocí sloupcového grafu, zobrazeného sestupně podle názvu.",
            "Udělej mi názvy a ceny nábytku, které některé společnosti vyrábějí, se sloupcovým grafem a chci je zobrazit podle názvů sestupně."
        ],
        "irrelevant_tables": [
            "manufacturer"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2831@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "station_weather",
        "vis_obj": {
            "chart": "bar",
            "x_name": "services",
            "y_name": "COUNT(services)",
            "x_data": [
                [
                    "c2c",
                    "Metropolitan line and Chiltern Railways",
                    "Metropolitan line",
                    "London Overground and London Midland",
                    "London Overground",
                    "Greater Anglia"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    2,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY services",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Uveď mi sloupcový graf pro počet služeb jednotlivých služeb a mohl bys zobrazit osu x v sestupném pořadí?",
            "Porovnej počet služeb podle služeb pomocí sloupcového grafu a mohl bys zobrazit osu x v sestupném pořadí?",
            "Sloupcový graf s výčtem služeb a počtu služeb poskytovaných všemi stanicemi. Seřaď je sestupně podle osy x."
        ],
        "irrelevant_tables": [
            "route",
            "weekly_weather"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2834@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT services , COUNT(services) FROM station GROUP BY services ORDER BY services DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "station_weather",
        "vis_obj": {
            "chart": "bar",
            "x_name": "services",
            "y_name": "COUNT(services)",
            "x_data": [
                [
                    "c2c",
                    "Metropolitan line and Chiltern Railways",
                    "Metropolitan line",
                    "London Overground and London Midland",
                    "London Overground",
                    "Greater Anglia"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    2,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY services",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf služeb versus počet služeb. Mohl bys je zobrazit podle názvů sestupně?"
        ],
        "irrelevant_tables": [
            "route",
            "weekly_weather"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2838@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM train GROUP BY name ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "station_weather",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Ananthapuri Express",
                    "Guruvayur Express",
                    "Island Express",
                    "Jayanthi Janatha Express",
                    "Madurai Fast Passenger",
                    "Parasuram Express",
                    "Quilon Fast Passenger"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet názvů vlaků ve sloupcovém grafu a seřaď je vzestupně podle osy x.",
            "Vykresli kolik existuje jmen seskupených podle jména jako sloupcový graf, seřazený vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "route",
            "station"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2841@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT day_of_week , avg(high_temperature) FROM weekly_weather GROUP BY day_of_week ORDER BY avg(high_temperature) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "station_weather",
        "vis_obj": {
            "chart": "bar",
            "x_name": "day_of_week",
            "y_name": "avg(high_temperature)",
            "x_data": [
                [
                    "Sunday",
                    "Friday",
                    "Saturday",
                    "Monday",
                    "Thursday",
                    "Tuesday",
                    "Wednesday"
                ]
            ],
            "y_data": [
                [
                    54,
                    55,
                    55,
                    56,
                    57,
                    58,
                    58
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro zobrazení průměrné vysoké teploty z různých dnů v týdnu a mohl bys data zobrazit podle osy y vzestupně?",
            "Jaká je průměrná vysoká teplota pro každý den v týdnu? Zakresli jako sloupcový graf, chci je seřadit vzestupně podle osy Y."
        ],
        "irrelevant_tables": [
            "train",
            "route"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2844@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT origin , count(*) FROM train GROUP BY origin ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "station_weather",
        "vis_obj": {
            "chart": "bar",
            "x_name": "origin",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Kanniyakumari",
                    "Chennai",
                    "Trivandrum",
                    "Quilon",
                    "Nagercoil",
                    "Mumbai",
                    "Madurai",
                    "Guruvayur",
                    "Bangalore"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet vlaků vyjíždějících z každého výchozího bodu. Vyznač je jako sloupcový graf, chci ho seřadit sestupně podle celkového počtu.",
            "Zobraz mi celkový počet podle počátku v histogramu a chci ho seřadit podle osy Y sestupně."
        ],
        "irrelevant_tables": [
            "station",
            "weekly_weather"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2845@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY COUNT(name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\" GROUP BY name ORDER BY COUNT(name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "station_weather",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Ananthapuri Express",
                    "Jayanthi Janatha Express",
                    "Madurai Fast Passenger",
                    "Quilon Fast Passenger",
                    "Guruvayur Express",
                    "Island Express"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Najdi názvy vlaků, které projíždějí stanicemi místního úřadu Chiltern, porovnej celkový počet názvů ve sloupcovém grafu a seřaď je podle osy y."
        ],
        "irrelevant_tables": [
            "weekly_weather"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2544@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "perpetrator",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "India",
                    "Japan",
                    "South Korea",
                    "China"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf o tom, v jakých zemích jsou pachatelé trestných činů. Zobraz jednotlivé země a odpovídající počet pachatelů v nich a seřaď je podle osy Y od nejnižšího po nejvyšší.",
            "Z jakých zemí pocházejí pachatelé? Zobraz každou zemi a odpovídající počet pachatelů v ní. Zakresli je jako sloupcový graf a mohl bys seřadit celkový počet vzestupně, prosím?",
            "Vrať sloupcový graf o tom, v jakých zemích jsou pachatelé trestných činů. Zobraz jednotlivé země a odpovídající počet pachatelů v nich, osu y chci seřadit vzestupně."
        ],
        "irrelevant_tables": [
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2865@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Four",
                    "Three",
                    "Five",
                    "One"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš názvy bouří a počet zasažených oblastí pro každou bouři pomocí sloupcového grafu a zobraz celkový počet ve vzestupném pořadí.",
            "Vrať sloupcový graf o tom, kolik regionů bylo zasaženo každou bouří? Chci je seřadit vzestupně podle osy y.",
            "Kolik regionů bylo zasaženo jednotlivými bouřkami? Vizualizuj pomocí sloupcového grafu, seřaď je vzestupně podle Y, prosím."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2867@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Region_name , count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id ORDER BY Region_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Region_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Afghanistan",
                    "Albania",
                    "Algeria",
                    "Denmark"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz názvy regionů a počet bouří pro každý region pomocí sloupcového grafu, zobrazeného vzestupně podle osy X.",
            "Ukaž mi sloupcový graf o tom, kolik bouří se vyskytlo v jednotlivých regionech, a chci je seřadit vzestupně podle jmen."
        ],
        "irrelevant_tables": [
            "storm"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2868@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "Six",
                    "Five",
                    "Four",
                    "Two",
                    "Three",
                    "9 cyclones"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    7,
                    7,
                    52,
                    71
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "U všech bouří s alespoň jedním úmrtím porovnej počet úmrtí podle jména pomocí sloupcového grafu, seřazeného od nejnižšího po nejvyšší počet úmrtí podle osy Y.",
            "U všech bouří s alespoň jedním úmrtím mi prosím ukaž název a celkový počet úmrtí ve sloupcovém grafu, seřazeném vzestupně podle osy y."
        ],
        "irrelevant_tables": [
            "region",
            "affected_region"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2869@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Dates_active , Number_Deaths FROM storm WHERE number_deaths >= 1 ORDER BY Number_Deaths DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "storm_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Dates_active",
            "y_name": "Number_Deaths",
            "x_data": [
                [
                    "May19 -October26",
                    "August5-August14",
                    "August3-August10",
                    "August26-September2",
                    "September7-September17",
                    "September18-September25"
                ]
            ],
            "y_data": [
                [
                    71,
                    52,
                    7,
                    7,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro všechny bouře s alespoň jedním úmrtím porovnej počet úmrtí podle dat aktivních bouří pomocí sloupcového grafu, osu y zobraz v sestupném pořadí.",
            "U všech bouří s alespoň jedním úmrtím mi zobraz data aktivních bouří a celkový počet úmrtí pomocí sloupcového grafu a seřaď je podle celkového počtu sestupně."
        ],
        "irrelevant_tables": [
            "affected_region",
            "region"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1407@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY COUNT(destination) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT destination , COUNT(destination) FROM Flight GROUP BY destination ORDER BY COUNT(destination) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "flight_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "destination",
            "y_name": "COUNT(destination)",
            "x_data": [
                [
                    "Honolulu",
                    "Washington D.C.",
                    "Tokyo",
                    "Sydney",
                    "New York",
                    "Los Angeles",
                    "Dallas",
                    "Chicago",
                    "Boston"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY destination",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik letů je v každém cílovém městě? Vrať sloupcový graf a seřaď ho sestupně podle osy y, prosím.",
            "Zobraz počet letů v každém cílovém městě pomocí sloupcového grafu, chci ho seřadit sestupně podle Y.",
            "Můžeš uvést histogram pro porovnání počtu letů do jednotlivých cílových měst, seřazený sestupně podle počtu destinací?",
            "Ukaž mi, kolik je destinací podle destinací v histogramu, a seřaď osu y v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "aircraft",
            "certificate"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1409@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "flight_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Lockheed L1011",
                    "Airbus A340-300",
                    "SAAB 340",
                    "Piper Archer III",
                    "Embraer ERJ-145",
                    "Boeing 757-300",
                    "Boeing 747-400",
                    "Boeing 737-800"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz sloupcový graf o tom, jak se jmenují jednotlivá letadla a kolik letů absolvují. Seřaď je podle osy y od nejvyššího po nejnižší.",
            "Vizualizuj sloupcový graf pro to, jak se jmenují jednotlivá letadla a kolik letů každé z nich absolvuje. Mohl bys je seřadit podle osy Y od nejvyššího po nejnižší?",
            "Jak se jmenují jednotlivá letadla a kolik letů každé z nich absolvuje. Zobraz sloupcový graf a seřaď jej sestupně podle Y, prosím.",
            "Zobraz názvy letadel a počet letů pro každé letadlo pomocí sloupcového grafu, seznam podle Y sestupně."
        ],
        "irrelevant_tables": [
            "certificate",
            "employee"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1413@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY COUNT(destination) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT destination , COUNT(destination) FROM Flight WHERE price > 300 GROUP BY destination ORDER BY COUNT(destination) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "flight_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "destination",
            "y_name": "COUNT(destination)",
            "x_data": [
                [
                    "Tokyo",
                    "Honolulu"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY destination",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik letů s cenou vyšší než 300 existuje pro každé cílové město? Vrátí sloupcový graf a seřadí jej vzestupně podle celkového počtu.",
            "Sloupcový graf zobrazující počet letů s cenou vyšší než 300 pro každé cílové město, seřazeno vzestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "certificate",
            "employee"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1414@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , distance FROM Aircraft ORDER BY distance DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , distance FROM Aircraft ORDER BY distance DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "flight_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "distance",
            "x_data": [
                [
                    "Boeing 747-400",
                    "Airbus A340-300",
                    "Lockheed L1011",
                    "Boeing 767-400ER",
                    "Boeing 777-300",
                    "Tupolev 154",
                    "Boeing 757-300",
                    "Boeing 737-800",
                    "Airbus A320",
                    "SAAB 340",
                    "Airbus A319",
                    "Embraer ERJ-145",
                    "Boeing 727",
                    "British Aerospace Jetstream 41",
                    "Piper Archer III",
                    "Schwitzer 2-33"
                ]
            ],
            "y_data": [
                [
                    8430,
                    7120,
                    6900,
                    6475,
                    6441,
                    4103,
                    4010,
                    3383,
                    2605,
                    2128,
                    1805,
                    1530,
                    1504,
                    1502,
                    520,
                    30
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz název a vzdálenost pro všechna letadla. Vizualizuj pomocí sloupcového grafu. Mohl bys je seřadit od nejvyšších po nejnižší podle osy y?",
            "Jaké jsou názvy a vzdálenosti všech letadel? Vizualizuj pomocí sloupcového grafu, a mohl bys je seřadit od nejvyšších po nejnižší podle osy y?"
        ],
        "irrelevant_tables": [
            "flight",
            "employee"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2173@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , count(*) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , count(*) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Hewlett-Packard",
                    "Creative Labs",
                    "Winchester",
                    "Sony",
                    "Iomega",
                    "Fujitsu"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik produktů existuje pro každého výrobce Vizualizovat pomocí sloupcového grafu, chci je zobrazit sestupně podle osy y.",
            "Zobraz sloupcový graf o tom, kolik výrobků existuje pro každého výrobce? Mohl bys zobrazit sestupně podle osy Y?",
            "Zjisti počet výrobků pro každého výrobce a zobraz název každé společnosti. Zobraz sloupcový graf a zobraz jej od nejvyššího po nejnižší dle celkového počtu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2175@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY max(revenue) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarter , max(revenue) FROM manufacturers GROUP BY Headquarter ORDER BY max(revenue) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarter",
            "y_name": "max(revenue)",
            "x_data": [
                [
                    "Paris",
                    "Los Angeles",
                    "Austin",
                    "Tokyo",
                    "Taiwan",
                    "Beijing"
                ]
            ],
            "y_data": [
                [
                    30,
                    50,
                    100,
                    120,
                    130,
                    200
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vytvoř sloupcový graf zobrazující maximální příjmy v jednotlivých ústředích a seřaď osu Y od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2176@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarter , count(DISTINCT T1.name) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code ORDER BY count(DISTINCT T1.name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarter , count(DISTINCT T1.name) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code ORDER BY count(DISTINCT T1.name) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarter",
            "y_name": "count(DISTINCT T1.name)",
            "x_data": [
                [
                    "Los Angeles",
                    "Austin",
                    "Paris",
                    "Tokyo",
                    "Taiwan",
                    "Beijing"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik různých výrobků se vyrábí v jednotlivých městech? Vizualizuj to pomocí sloupcového grafu, chci to vypsat podle osy y sestupně.",
            "Zjisti počet různých výrobků, které vyrábějí společnosti v různých městech, kde mají svá sídla. Vyznač je jako sloupcový graf. Můžeš je seřadit podle osy Y sestupně, prosím?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2177@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM products GROUP BY Name ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM products GROUP BY Name ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "CD drive",
                    "DVD burner",
                    "DVD drive",
                    "Floppy disk",
                    "Hard drive",
                    "Memory",
                    "Monitor",
                    "Printer",
                    "Toner cartridge",
                    "ZIP drive"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Spočítej názvy všech produktů v obchodě a vrať mi sloupcový graf. Mohli bys to seřadit podle názvu v pořadí vzestupně?",
            "Uveď mi sloupcový graf o tom, kolik názvů jednotlivých produktů, a seřaď je vzestupně podle názvů."
        ],
        "irrelevant_tables": [
            "Manufacturers"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2178@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , SUM(Price) FROM products GROUP BY Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , SUM(Price) FROM products GROUP BY Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "SUM(Price)",
            "x_data": [
                [
                    "ZIP drive",
                    "Toner cartridge",
                    "Printer",
                    "Monitor",
                    "Memory",
                    "Hard drive",
                    "Floppy disk",
                    "DVD drive",
                    "DVD burner",
                    "CD drive"
                ]
            ],
            "y_data": [
                [
                    150,
                    66,
                    270,
                    240,
                    120,
                    240,
                    5,
                    330,
                    180,
                    90
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf pro součet cen jednotlivých názvů produktů, který chci zobrazit podle osy x sestupně."
        ],
        "irrelevant_tables": [
            "Manufacturers"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2179@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , AVG(Price) FROM products GROUP BY Name ORDER BY AVG(Price) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , AVG(Price) FROM products GROUP BY Name ORDER BY AVG(Price) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "AVG(Price)",
            "x_data": [
                [
                    "Printer",
                    "Monitor",
                    "Hard drive",
                    "DVD burner",
                    "DVD drive",
                    "ZIP drive",
                    "Memory",
                    "CD drive",
                    "Toner cartridge",
                    "Floppy disk"
                ]
            ],
            "y_data": [
                [
                    270,
                    240,
                    240,
                    180,
                    165,
                    150,
                    120,
                    90,
                    66,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf průměrné ceny z každého názvu výrobku a seřazení průměrné ceny sestupně.",
            "Vrať sloupcový graf s názvy a cenami všech produktů v obchodě. Mohl bys je seřadit podle průměrné ceny sestupně, prosím?"
        ],
        "irrelevant_tables": [
            "Manufacturers"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2191@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Price FROM products WHERE price BETWEEN 60 AND 120 ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Price",
            "x_data": [
                [
                    "Toner cartridge",
                    "Memory",
                    "CD drive"
                ]
            ],
            "y_data": [
                [
                    66,
                    120,
                    90
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro ty produkty s cenou mezi 60 a 120, udělej mi srovnání o ceně přes název sloupcovým grafem. Mohl bys to seřadit podle názvu sestupně?",
            "Pro ty produkty, jejichž cena se pohybuje mezi 60 a 120, najdi název a cenu, a vizualizuj je pomocí sloupcového grafu. Mohl bys je seřadit sestupně podle názvu?",
            "Pro výrobky s cenou mezi 60 a 120 zobraz sloupcový graf o rozložení názvu a ceny, zobrazený na ose x sestupně."
        ],
        "irrelevant_tables": [
            "Manufacturers"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2201@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Founder , sum(revenue) FROM manufacturers GROUP BY founder ORDER BY Founder DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Founder , sum(revenue) FROM manufacturers GROUP BY founder ORDER BY Founder DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Founder",
            "y_name": "sum(revenue)",
            "x_data": [
                [
                    "Robert",
                    "Owen",
                    "Mary",
                    "John",
                    "James",
                    "Andy"
                ]
            ],
            "y_data": [
                [
                    30,
                    100,
                    200,
                    130,
                    50,
                    120
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti celkové příjmy společností každého zakladatele. Vizualizuj pomocí sloupcového grafu a zobraz osu x v sestupném pořadí.",
            "Jaké jsou celkové tržby společností založených zakladatelem? Zakresli je do sloupcového grafu, seřaď podle osy X sestupně."
        ],
        "irrelevant_tables": [
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2203@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , max(T1.Price) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "max(T1.Price)",
            "x_data": [
                [
                    "Winchester",
                    "Sony",
                    "Iomega",
                    "Hewlett-Packard",
                    "Fujitsu",
                    "Creative Labs"
                ]
            ],
            "y_data": [
                [
                    120,
                    240,
                    150,
                    270,
                    240,
                    180
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Porovnej ceny nejdražších výrobků jednotlivých výrobců pomocí sloupcového grafu a mohl bys seřadit osu x sestupně?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2215@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarter , COUNT(Headquarter) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarter , COUNT(Headquarter) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarter",
            "y_name": "COUNT(Headquarter)",
            "x_data": [
                [
                    "Austin",
                    "Beijing",
                    "Los Angeles",
                    "Paris",
                    "Taiwan",
                    "Tokyo"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    3,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarter",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro tyto záznamy z výrobků a výrobce každého výrobku najdi sídlo a částku sídla, seskup je podle atributu sídlo a vizualizuj je pomocí sloupcového grafu a seřaď vzestupně podle osy X.",
            "U těchto záznamů z výrobků a každého výrobce výrobku mi ukaž rozložení hlavního sídla a množství hlavního sídla, a seskup je podle atributu hlavní sídlo do sloupcového grafu a seřaď vzestupně podle osy X."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2224@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarter , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarter , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY Headquarter ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarter",
            "y_name": "SUM(Revenue)",
            "x_data": [
                [
                    "Austin",
                    "Beijing",
                    "Los Angeles",
                    "Paris",
                    "Taiwan",
                    "Tokyo"
                ]
            ],
            "y_data": [
                [
                    300,
                    200,
                    150,
                    60,
                    130,
                    120
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarter",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro tyto záznamy z výrobků a výrobce každého výrobku mi ukaž o rozdělení sídla a součtu příjmů, a seskup podle atributu sídlo do sloupcového grafu. Mohl bys to seřadit podle osy X vzestupně?",
            "Pro tyto záznamy z produktů a výrobce každého produktu vizualizuj sloupcový graf o rozdělení sídla a součtu tržeb, a seskup podle atributu sídlo, chci to zobrazit vzestupně podle osy x.",
            "Pro tyto záznamy z výrobků a výrobce každého výrobku nakresli sloupcový graf o rozložení sídla a součtu tržeb, a seskup je podle atributu sídlo. Uspořádej to podle osy x vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2225@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Revenue) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarter , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Headquarter ORDER BY AVG(Revenue) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarter",
            "y_name": "AVG(Revenue)",
            "x_data": [
                [
                    "Beijing",
                    "Taiwan",
                    "Tokyo",
                    "Austin",
                    "Los Angeles",
                    "Paris"
                ]
            ],
            "y_data": [
                [
                    200,
                    130,
                    120,
                    100,
                    50,
                    30
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarter",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "U těchto záznamů z výrobků a každého výrobce výrobku je ve sloupcovém grafu zobrazeno rozdělení sídla a průměr příjmů. Seskup data podle atributu sídlo, seřaď od nejvyššího po nejnižší podle průměrných příjmů.",
            "Pro tyto záznamy z produktů a výrobce každého produktu nakresli sloupcový graf o rozdělení sídla a průměru tržeb, a seskup podle atributu sídlo. Chci seřadit osu y sestupně.",
            "Pro tyto záznamy z produktů a výrobce každého produktu vrať sloupcový graf o rozdělení sídla a průměru tržeb, a seskup je podle atributu sídlo. Seřaď je od nejvyššího po nejnižší průměr tržeb."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2235@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Founder , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Founder , SUM(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY Founder DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Founder",
            "y_name": "SUM(Revenue)",
            "x_data": [
                [
                    "Robert",
                    "Owen",
                    "Mary",
                    "John",
                    "James",
                    "Andy"
                ]
            ],
            "y_data": [
                [
                    60,
                    300,
                    200,
                    130,
                    150,
                    120
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Founder",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro tyto záznamy z výrobků a každého výrobce výrobku nakresli sloupcový graf o rozložení zakladatele a součtu příjmů, a seskup je podle atributu zakladatel a seřaď podle osy X sestupně prosím.",
            "U těch záznamů z výrobků a každého výrobce výrobku mi ukaž o rozdělení zakladatele a součtu příjmů, a seskup podle atributu zakladatel ve sloupcovém grafu. Chci uvést X sestupně dle pořadí, prosím."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2236@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Revenue) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Founder , AVG(Revenue) FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY Founder ORDER BY AVG(Revenue) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Founder",
            "y_name": "AVG(Revenue)",
            "x_data": [
                [
                    "Robert",
                    "James",
                    "Owen",
                    "Andy",
                    "John",
                    "Mary"
                ]
            ],
            "y_data": [
                [
                    30,
                    50,
                    100,
                    120,
                    130,
                    200
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Founder",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro tyto záznamy z výrobků a výrobce každého výrobku mi zobraz rozdělení zakladatele a průměr příjmů, a seskup je podle atributu zakladatel do sloupcového grafu a seřaď vzestupně podle průměru příjmů.",
            "Pro tyto záznamy z výrobků a každého výrobce výrobku najdi zakladatele a průměr příjmů, seskup je podle atributu zakladatel a vizualizuj je pomocí sloupcového grafu, zobraz data podle celkového počtu vzestupně.",
            "Pro záznamy z výrobků a výrobce každého výrobku mi dej srovnání o průměru tržeb přes zřizovatele, a seskup podle příznaku zřizovatel pomocí sloupcového grafu. Mohl bys je seřadit podle průměru tržeb vzestupně?",
            "Pro tyto záznamy z výrobků a výrobce každého výrobku nakresli sloupcový graf o rozložení zakladatele a průměru příjmů, seskup je podle atributu zakladatel a osu y seřaď vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2305@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY avg(T1.Price) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , avg(T1.Price) FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name ORDER BY avg(T1.Price) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "manufactory_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "avg(T1.Price)",
            "x_data": [
                [
                    "Winchester",
                    "Creative Labs",
                    "Iomega",
                    "Hewlett-Packard",
                    "Fujitsu",
                    "Sony"
                ]
            ],
            "y_data": [
                [
                    62.5,
                    150,
                    150,
                    162,
                    240,
                    240
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf pro průměrné ceny výrobků seskupených podle názvu výrobce a seřaď osu Y od nejnižšího po nejvyšší.",
            "Sloupcový graf o tom, jaké jsou průměrné ceny výrobků seskupených podle názvu výrobce? Seřaď je od nejnižší po nejvyšší podle osy y."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "894@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC",
                "binning": "BIN Visit_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Visit_Date , COUNT(Visit_Date) FROM VISITS  ORDER BY COUNT(Visit_Date) DESC BIN Visit_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Theme_park",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Visit_Date",
            "y_name": "COUNT(Visit_Date)",
            "x_data": [
                [
                    "Mon",
                    "Tue",
                    "Thur",
                    "Sun",
                    "Wed",
                    "Sat",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    6,
                    5,
                    3,
                    3,
                    2,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Visit_Date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Najdi všechna různá data návštěv, rozděl data návštěv podle intervalu dnů v týdnu a spočítej je pomocí sloupcového grafu, a mohl bys uspořádat osu y v sestupném pořadí?",
            "Jaká jsou jednotlivá data návštěv? Rozděl data návštěv podle dnů v týdnu a spočítej je pomocí sloupcového grafu, seřazeného sestupně podle osy y."
        ],
        "irrelevant_tables": [
            "Visitors",
            "Hotels"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2643@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM race GROUP BY Class ORDER BY Class DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "GT",
                    "DP/GT"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Ukaž mi, kolik je v jednotlivých třídách všech závodů pomocí sloupcového grafu, a chci je seřadit sestupně podle třídy."
        ],
        "irrelevant_tables": [
            "track"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2648@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , count(*) FROM race GROUP BY CLASS ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "race_track",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "count(*)",
            "x_data": [
                [
                    "GT",
                    "DP/GT"
                ]
            ],
            "y_data": [
                [
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Uveď sloupcový graf pro celkový počet jednotlivých tříd, zobrazený vzestupně podle osy Y.",
            "Nakresli sloupcový graf, jaké jsou různé třídy závodů a kolik závodů odpovídá každé z nich, a zobraz je vzestupně podle celkového počtu.",
            "Vizualizuj sloupcový graf pro to, jaké jsou různé třídy závodů a kolik závodů odpovídá každé z nich? Mohl bys je seřadit vzestupně podle Y?",
            "Jaké jsou různé třídy ras a kolik ras odpovídá každé z nich? Ukaž sloupcový graf, seřaď od nejnižšího po nejvyšší celkový počet.",
            "Zobraz třídu závodu a počet závodů v každé třídě pomocí sloupcového grafu. Mohl bys je zobrazit vzestupně podle celkového počtu?"
        ],
        "irrelevant_tables": [
            "track"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2788@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT pPos , min(T2.HS) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY pPos ORDER BY pPos DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "soccer_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "pPos",
            "y_name": "min(T2.HS)",
            "x_data": [
                [
                    "striker",
                    "mid",
                    "goalie"
                ]
            ],
            "y_data": [
                [
                    1600,
                    300,
                    1200
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf, kolik hodin minimálně hrají žáci na různých pozicích, seřazeno v desítkách podle osy X."
        ],
        "irrelevant_tables": [
            "College"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2790@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT pName , HS FROM Player WHERE HS < 1500 ORDER BY pName DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "soccer_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "pName",
            "y_name": "HS",
            "x_data": [
                [
                    "Eddie",
                    "Charles",
                    "Andrew"
                ]
            ],
            "y_data": [
                [
                    600,
                    300,
                    1200
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Najdi jméno a tréninkové hodiny hráčů, jejichž počet hodin je nižší než 1500. Zobraz sloupcový graf, jména zobraz v sestupném pořadí.",
            "Jaká jsou jména a počet hodin strávených tréninkem u každého hráče, který trénuje méně než 1500 hodin? Vizualizuj pomocí sloupcového grafu, jména zobraz v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "College",
            "Tryout"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2800@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT state , min(enr) FROM college GROUP BY state ORDER BY min(enr) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "soccer_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "state",
            "y_name": "min(enr)",
            "x_data": [
                [
                    "AZ",
                    "LA",
                    "FL",
                    "OK"
                ]
            ],
            "y_data": [
                [
                    12000,
                    18000,
                    19000,
                    22000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz nejmenší počet zapsaných v jednotlivých státech pomocí sloupcového grafu, který zobraz vzestupně podle osy y.",
            "Sloupcový graf, osa X je stát a osa Y je nejmenší počet zapsaných v každém státě, seřazeno vzestupně podle Y."
        ],
        "irrelevant_tables": [
            "Player",
            "Tryout"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "298@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC",
                "binning": "BIN date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80  ORDER BY COUNT(date) DESC BIN date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    "Mon",
                    "Thur",
                    "Wed",
                    "Sun",
                    "Sat",
                    "Fri",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    25,
                    32,
                    28,
                    24,
                    25,
                    25,
                    20
                ]
            ],
            "classify": [],
            "describe": "BIN date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "U těch dat s maximální teplotou větší nebo rovnou 80 chci znát počet dní v intervalu dne v týdnu pomocí sloupcového grafu. Mohl bys je zobrazit od nejvyšší po nejnižší podle Y?"
        ],
        "irrelevant_tables": [
            "trip",
            "station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "303@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date , COUNT(date) FROM weather WHERE max_temperature_f >= 80 GROUP BY date ORDER BY date DESC"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    "2015-07-01",
                    "2015-07-02",
                    "2015-07-03",
                    "2015-07-04",
                    "2015-07-05",
                    "2015-07-06",
                    "2015-07-07",
                    "2015-07-08",
                    "2015-07-09",
                    "2015-07-10",
                    "2015-07-11",
                    "2015-07-12",
                    "2015-07-13",
                    "2015-07-14",
                    "2015-07-15",
                    "2015-07-16",
                    "2015-07-17",
                    "2015-07-18",
                    "2015-07-19",
                    "2015-07-20",
                    "2015-07-21",
                    "2015-07-22",
                    "2015-07-23",
                    "2015-07-24",
                    "2015-07-25",
                    "2015-07-26",
                    "2015-07-27",
                    "2015-07-28",
                    "2015-07-29",
                    "2015-07-30",
                    "2015-07-31"
                ]
            ],
            "y_data": [
                [
                    91,
                    79,
                    81,
                    80,
                    81,
                    78,
                    78,
                    74,
                    74,
                    73,
                    78,
                    78,
                    80,
                    75,
                    83,
                    85,
                    81,
                    79,
                    89,
                    87,
                    76,
                    77,
                    75,
                    78,
                    75,
                    79,
                    102,
                    94,
                    89,
                    81,
                    78
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pomocí čárového grafu zobraz změnu maximální teploty ve všech regionech v červenci 2015, přičemž osa x je vzestupně seřazena."
        ],
        "irrelevant_tables": [
            "status",
            "station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "317@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC",
                "binning": "BIN installation_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT installation_date , COUNT(installation_date) FROM station  ORDER BY COUNT(installation_date) DESC BIN installation_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "installation_date",
            "y_name": "COUNT(installation_date)",
            "x_data": [
                [
                    "2013",
                    "2014"
                ]
            ],
            "y_data": [
                [
                    67,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN installation_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Prosím, udělej mi sloupcový graf, který rozdělí datum instalace stanic do intervalu rok jako osa X, a počet zobrazení, kolik stanic je instalováno každý rok. Seřaď osu y v sestupném pořadí.",
            "Rozděl datum instalace do intervalu rok, a pak můžeš nakreslit sloupcový graf, aby mi řekl, kolik stanic je v každém roce. Mohl bys seřadit osu y v sestupném pořadí, prosím?"
        ],
        "irrelevant_tables": [
            "status",
            "weather"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "330@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) ASC",
                "binning": "BIN date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE min_dew_point_f < (SELECT min(min_dew_point_f) FROM weather WHERE zip_code = 94107)  ORDER BY COUNT(date) ASC BIN date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    "2014",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pomocí sloupcového grafu spočítej dny v každém roce a v každém poštovním směrovacím čísle, kdy byl minimální rosný bod nižší než v kterýkoli den v poštovním směrovacím čísle 94107. Zobraz počet dat ve vzestupném pořadí.",
            "Pro data, kdy byl minimální rosný bod menší než v kterýkoli den v PSČ 94107, zobraz celkový počet takových dnů za každý rok pomocí sloupcového grafu, který se zobrazí od nejnižšího po nejvyšší bod na ose y."
        ],
        "irrelevant_tables": [
            "trip",
            "station"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "339@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT city , COUNT(*) FROM station GROUP BY city ORDER BY city DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "San Jose",
                    "San Francisco"
                ]
            ],
            "y_data": [
                [
                    16,
                    35
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš název a počet stanic pro všechna města, která mají alespoň 15 stanic. Zobraz sloupcový graf a seřaď podle osy x sestupně."
        ],
        "irrelevant_tables": [
            "weather",
            "trip"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "349@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"  ORDER BY COUNT(date) DESC",
                "binning": "BIN date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date , COUNT(date) FROM weather WHERE zip_code = 94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"  ORDER BY COUNT(date) DESC BIN date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "bike_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    "2014",
                    "2015",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    275,
                    206,
                    106
                ]
            ],
            "classify": [],
            "describe": "BIN date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Který den nebyla mlha ani nepršelo v PSČ 94107? Rozděl to podle roku, spočítej je sloupcovým grafem, seřaď podle osy y sestupně.",
            "V který den v poštovním směrovacím čísle 94107 nebyla pozorována mlha ani déšť? Rozděl je podle roku, spočítej je pomocí sloupcového grafu a seřaď podle osy y sestupně."
        ],
        "irrelevant_tables": [
            "station",
            "trip"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2585@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Position , COUNT(Position) FROM pilot GROUP BY Position ORDER BY Position ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "pilot_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Position",
            "y_name": "COUNT(Position)",
            "x_data": [
                [
                    "Center Team",
                    "Forward Team",
                    "Forward-Center Team"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Position",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf počtu pozic z každé pozice a seznam vzestupně podle pozice."
        ],
        "irrelevant_tables": [
            "pilot_record",
            "aircraft"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2587@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM pilot GROUP BY Nationality ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "pilot_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nationality",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Nigeria",
                    "United Kindom",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro zobrazení celkového počtu osob různé národnosti, seznam vzestupně podle celkového počtu.",
            "Jaké jsou různé národnosti pilotů? Zobraz jednotlivé národnosti a počet pilotů každé národnosti. Zobraz sloupcový graf vzestupně podle celkového počtu.",
            "Nakresli sloupcový graf pro různé národnosti pilotů. Ukaž jednotlivé národnosti a počet pilotů každé národnosti. Mohl bys zobraz celkový počet od nejnižšího po nejvyšší?"
        ],
        "irrelevant_tables": [
            "aircraft",
            "pilot_record"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "927@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) ASC",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY COUNT(date_account_opened) ASC BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Thur",
                    "Wed",
                    "Sat",
                    "Sun",
                    "Tue",
                    "Fri",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    2,
                    0,
                    0,
                    3,
                    2
                ],
                [
                    0,
                    0,
                    0,
                    2,
                    2,
                    0,
                    3
                ]
            ],
            "classify": [
                "Regular",
                "VIP"
            ],
            "describe": "GROUP BY other_account_details, BIN date_account_opened BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik účtů je otevřeno každý den? Rozděl den otevřeného účtu podle dnů v týdnu a seskup podle dalších údajů o účtu do sloupcového grafu a seřaď je vzestupně podle osy y."
        ],
        "irrelevant_tables": [
            "Invoices",
            "Invoice_Line_Items"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "932@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) DESC",
                "binning": "BIN date_account_opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts  ORDER BY COUNT(date_account_opened) DESC BIN date_account_opened BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "Mon",
                    "Fri",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Wed",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    2,
                    2,
                    2,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_account_opened BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet účtů otevřených v jednotlivých dnech. Rozděl den otevřených účtů podle dnů v týdnu ve sloupcovém grafu a mohl bys zobrazit osu Y v sestupném pořadí?",
            "Kolik účtů je otevřeno každý den? Rozděl den otevřeného účtu podle dnů v týdnu ve sloupcovém grafu, chci je seřadit podle osy y sestupně."
        ],
        "irrelevant_tables": [
            "Financial_Transactions",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "942@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened DESC",
                "binning": "BIN date_account_opened BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_account_opened , COUNT(date_account_opened) FROM Accounts GROUP BY other_account_details ORDER BY date_account_opened DESC BIN date_account_opened BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_account_opened",
            "y_name": "COUNT(date_account_opened)",
            "x_data": [
                [
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    2,
                    0,
                    1,
                    0,
                    2,
                    1,
                    1,
                    0
                ],
                [
                    1,
                    0,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [
                "Regular",
                "VIP"
            ],
            "describe": "GROUP BY other_account_details, BIN date_account_opened BY YEAR",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik účtů je otevřeno v každém roce? Zobraz skupinový čárový graf, který se seskupí podle dalších údajů o účtu. Mohl bys je seřadit podle osy x vzestupně?"
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Invoice_Line_Items"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "988@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_first_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_first_name , count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY customer_first_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_and_invoices",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_first_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Vesta",
                    "Ruby",
                    "Meaghan",
                    "Kieran",
                    "Joesph",
                    "Jensen",
                    "Abbey"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    4,
                    4,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počtu účtů pro každého zákazníka ve sloupcovém grafu seskupeném podle křestního jména zákazníka, chci je seřadit sestupně podle jména."
        ],
        "irrelevant_tables": [
            "Products",
            "Financial_Transactions"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1099@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Budget_in_Billions FROM department ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Budget_in_Billions FROM department ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "department_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Budget_in_Billions",
            "x_data": [
                [
                    "Agriculture",
                    "Commerce",
                    "Defense",
                    "Education",
                    "Energy",
                    "Health and Human Services",
                    "Homeland Security",
                    "Housing and Urban Development",
                    "Interior",
                    "Justice",
                    "Labor",
                    "State",
                    "Transportation",
                    "Treasury",
                    "Veterans Affairs"
                ]
            ],
            "y_data": [
                [
                    77.6,
                    6.2,
                    439.3,
                    62.8,
                    21.5,
                    543.2,
                    44.6,
                    46.2,
                    10.7,
                    23.4,
                    59.7,
                    9.96,
                    58,
                    11.1,
                    73.2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Uveď mi sloupcový graf pro budget_in_billions každého názvu, zobrazený vzestupně podle názvu."
        ],
        "irrelevant_tables": [
            "head",
            "management"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1100@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Creation , SUM(Budget_in_Billions) FROM department GROUP BY Creation ORDER BY Creation ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Creation , SUM(Budget_in_Billions) FROM department GROUP BY Creation ORDER BY Creation ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "department_management",
        "vis_obj": {
            "chart": "line",
            "x_name": "Creation",
            "y_name": "SUM(Budget_in_Billions)",
            "x_data": [
                [
                    "1789",
                    "1849",
                    "1870",
                    "1889",
                    "1903",
                    "1913",
                    "1947",
                    "1953",
                    "1965",
                    "1966",
                    "1977",
                    "1979",
                    "1989",
                    "2002"
                ]
            ],
            "y_data": [
                [
                    21.060000000000002,
                    10.7,
                    23.4,
                    77.6,
                    6.2,
                    59.7,
                    439.3,
                    543.2,
                    46.2,
                    58.0,
                    21.5,
                    62.8,
                    73.2,
                    44.6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Creation",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Můžeš nakreslit trend součtu rozpočtu v miliardách v průběhu tvorby pomocí čárového grafu? Mohl bys ho znázornit pomocí osy x vzestupně?"
        ],
        "irrelevant_tables": [
            "management",
            "head"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1101@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Creation , AVG(Budget_in_Billions) FROM department GROUP BY Creation ORDER BY Creation ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Creation , AVG(Budget_in_Billions) FROM department GROUP BY Creation ORDER BY Creation ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "department_management",
        "vis_obj": {
            "chart": "line",
            "x_name": "Creation",
            "y_name": "AVG(Budget_in_Billions)",
            "x_data": [
                [
                    "1789",
                    "1849",
                    "1870",
                    "1889",
                    "1903",
                    "1913",
                    "1947",
                    "1953",
                    "1965",
                    "1966",
                    "1977",
                    "1979",
                    "1989",
                    "2002"
                ]
            ],
            "y_data": [
                [
                    10.530000000000001,
                    10.7,
                    23.4,
                    77.6,
                    6.2,
                    59.7,
                    439.3,
                    543.2,
                    46.2,
                    58.0,
                    21.5,
                    62.8,
                    73.2,
                    44.6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Creation",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz průměrný rozpočet v různých letech a seskup jej podle času vytvoření oddělení pomocí čárového grafu, zobraz vzestupně podle X.",
            "Průměr rozpočtu v miliardách v závislosti na tvorbě vynes do čárového grafu a zobraz tvorbu v pořadí vzestupně."
        ],
        "irrelevant_tables": [
            "head",
            "management"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "1105@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , SUM(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name ORDER BY SUM(Num_Employees) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , SUM(Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes' GROUP BY Name ORDER BY SUM(Num_Employees) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "department_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "SUM(Num_Employees)",
            "x_data": [
                [
                    "Homeland Security",
                    "Treasury"
                ]
            ],
            "y_data": [
                [
                    208000,
                    115897
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz název a počet zaměstnanců pro oddělení řízená vedoucími, jejichž dočasně působící hodnota je \"Ano\", pomocí sloupcového grafu a seřaď počet zaměstnanců od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "head"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1112@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT born_state , AVG(age) FROM head GROUP BY born_state ORDER BY born_state DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT born_state , AVG(age) FROM head GROUP BY born_state ORDER BY born_state DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "department_management",
        "vis_obj": {
            "chart": "bar",
            "x_name": "born_state",
            "y_name": "AVG(age)",
            "x_data": [
                [
                    "Florida",
                    "Delaware",
                    "Connecticut",
                    "California",
                    "Alabama"
                ]
            ],
            "y_data": [
                [
                    50,
                    53,
                    55,
                    61.25,
                    68
                ]
            ],
            "classify": [],
            "describe": "GROUP BY born_state",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz průměrný věk vedoucích oddělení narozených v jednotlivých státech pomocí sloupcového grafu, seznam podle osy X sestupně."
        ],
        "irrelevant_tables": [
            "department",
            "management"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2475@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(t1.age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Work_Type , avg(t1.age) FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type ORDER BY avg(t1.age) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Work_Type",
            "y_name": "avg(t1.age)",
            "x_data": [
                [
                    "Host",
                    "Music",
                    "Screening"
                ]
            ],
            "y_data": [
                [
                    43,
                    35.5,
                    30.33333333333333
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti průměrný věk novinářů pracujících na různých typech rolí, zobraz výsledek pomocí sloupcového grafu a seřaď jej podle osy y sestupně."
        ],
        "irrelevant_tables": [
            "event"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2486@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM journalist GROUP BY Nationality ORDER BY Nationality DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nationality",
            "y_name": "COUNT(Nationality)",
            "x_data": [
                [
                    "Wales",
                    "Northern Ireland",
                    "England"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Nationality",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet státních příslušníků různých národností, seřazený sestupně podle národnosti.",
            "Vizualizuj sloupcový graf, počítej a seskup jej podle národnosti z tabulky novinářů, seřaď X sestupně, prosím.",
            "Porovnej celkový počet novinářů s různou státní příslušností pomocí sloupcového grafu a seřaď je sestupně podle státní příslušnosti."
        ],
        "irrelevant_tables": [
            "event",
            "news_report"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2488@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nationality , AVG(Age) FROM journalist GROUP BY Nationality ORDER BY AVG(Age) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nationality",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "England",
                    "Northern Ireland",
                    "Wales"
                ]
            ],
            "y_data": [
                [
                    34.22222222222222,
                    29,
                    27
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Nationality",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o národnostech a průměrném věku novinářů a seřazení osy y od nejvyššího po nejnižší.",
            "Jaké jsou národnosti a průměrný věk novinářů? Ukaž mi sloupcový graf, seřaď celkový počet v sestupném pořadí, prosím."
        ],
        "irrelevant_tables": [
            "event",
            "news_report"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2493@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.Name , COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "news_report",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Jackie Waring",
                    "Tony Waddington",
                    "Tom Briggs",
                    "Ray Ferris",
                    "John Meaney",
                    "Herbert Swindells"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz jména novinářů a počet událostí, o kterých informovali, ve sloupcovém grafu a chci seřadit osu y od nejvyššího po nejnižší pořadí."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3058@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Language , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tvshow",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Language",
            "y_name": "count(*)",
            "x_data": [
                [
                    "English",
                    "Italian"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš jednotlivé jazyky a počet televizních kanálů, které je používají. Vizualizuj pomocí sloupcového grafu, osu y seřaď vzestupně.",
            "Sloupcový graf celkového počtu z každého jazyka. Seskup jej podle celkového počtu od nejnižšího po nejvyšší.",
            "Vypiš jednotlivé jazyky a počet televizních kanálů, které je používají, do sloupcového grafu a seřaď je podle celkového počtu od nejnižšího po nejvyšší.",
            "Pro každý jazyk, seřaď počet televizních kanálů, které jej používají. Vykresli je jako sloupcový graf. Chci, aby to bylo od nejnižšího k nejvyššímu podle osy y."
        ],
        "irrelevant_tables": [
            "TV_series",
            "Cartoon"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2421@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT formats , count(*) FROM files GROUP BY formats ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "music_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "formats",
            "y_name": "count(*)",
            "x_data": [
                [
                    "mp4",
                    "mp3"
                ]
            ],
            "y_data": [
                [
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o tom, kolik písní bylo vydáno pro jednotlivé formáty? Mohli bys uvést osu Y v sestupném pořadí?",
            "Sloupcový graf pro zobrazení celkového počtu z různých formátů, seřazený sestupně podle osy y."
        ],
        "irrelevant_tables": [
            "genre",
            "artist"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2423@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT languages , avg(rating) FROM song GROUP BY languages ORDER BY avg(rating) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "music_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "languages",
            "y_name": "avg(rating)",
            "x_data": [
                [
                    "bangla",
                    "english"
                ]
            ],
            "y_data": [
                [
                    7.5,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké je průměrné hodnocení písní pro každý jazyk? Načrtni je jako sloupcový graf a mohl bys je seřadit od nejvyššího po nejnižší celkový počet?",
            "Nakresli sloupcový graf pro průměrné hodnocení písní v jednotlivých jazycích, seřaď je podle průměrného hodnocení sestupně, prosím.",
            "Ukaž mi sloupcový graf pro průměrné hodnocení písní v jednotlivých jazycích. Mohl bys seřadit celkový počet v sestupném pořadí?",
            "Jaké je průměrné hodnocení písně pro každý jazyk? Načrtni je jako sloupcový graf. Mohl bys uvést celkový počet od nejvyššího po nejnižší?"
        ],
        "irrelevant_tables": [
            "files",
            "artist"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2430@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.country , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = \"Female\" AND T2.languages = \"bangla\" GROUP BY T1.country ORDER BY T1.country ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "music_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "country",
            "y_name": "COUNT(country)",
            "x_data": [
                [
                    "India",
                    "Bangladesh"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY country",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Z jaké země jsou umělkyně, které zpívaly v bengálštině? Spočítej je sloupcovým grafem, a chci je seřadit podle osy y vzestupně."
        ],
        "irrelevant_tables": [
            "genre",
            "files"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2859@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquartered_City , count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquartered_City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bahawalpur City",
                    "Bhakkar City",
                    "Hafizabad City",
                    "Khanewal City"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet obchodů v každém městě. Načrtni je jako sloupcový graf a chci je seřadit vzestupně podle Y.",
            "Kolik obchodů má sídlo v jednotlivých městech? Vypiš je do sloupcového grafu a seřaď podle celkového počtu.",
            "Nakresli sloupcový graf, kolik obchodů sídlí v jednotlivých městech, seřaď je podle celkového počtu.",
            "Vrať sloupcový graf o tom, kolik obchodů má sídlo v jednotlivých městech? Seřaď je vzestupně podle celkového počtu, prosím."
        ],
        "irrelevant_tables": [
            "product",
            "store_product"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2860@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT District_name , City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000 ORDER BY District_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "District_name",
            "y_name": "City_Population",
            "x_data": [
                [
                    "Kasur District",
                    "Jhang District",
                    "Gujrat District",
                    "Gujranwala District",
                    "Dera Ghazi Khan District",
                    "Chiniot District",
                    "Bahawalpur District"
                ]
            ],
            "y_data": [
                [
                    314617,
                    365198,
                    328512,
                    1526168,
                    464742,
                    219254,
                    530438
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké jsou názvy okresů a počty obyvatel všech okresů, které mají mezi 200 000 a 2 000 000 obyvatel? Zobraz sloupcový graf a seřaď jej podle X."
        ],
        "irrelevant_tables": [
            "store_product",
            "store_district"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2862@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM store GROUP BY TYPE ORDER BY Type ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_product",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "City Mall",
                    "Village Store"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Najdi všechny typy obchodů a jejich počet. Vizualizuj to pomocí sloupcového grafu. Mohl bys seřadit typ vzestupně?"
        ],
        "irrelevant_tables": [
            "product",
            "district"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2497@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Last_year , COUNT(Last_year) FROM party WHERE Party_Theme = \"Spring\" OR Party_Theme = \"Teqnology\" GROUP BY Last_year ORDER BY COUNT(Last_year) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "party_host",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Last_year",
            "y_name": "COUNT(Last_year)",
            "x_data": [
                [
                    "2004",
                    "2001",
                    "2003",
                    "2002"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Last_year BY TIME",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaký je poslední ročník večírků, jejichž tématem je \"Jaro\" nebo \"Teqnologie\"? Počítej poslední rok pro sloupcový graf, chci seřadit osu y v sestupném pořadí.",
            "Počítej poslední rok večírků s tématem \"Jaro\" nebo \"Teqnology\" sloupcovým grafem. Chci je seřadit sestupně podle Y."
        ],
        "irrelevant_tables": [
            "party_host",
            "host"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2507@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM party GROUP BY Location ORDER BY COUNT(Location) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "party_host",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Hemkade 48 Zaandam, Heineken Music Hall Amsterdam",
                    "RAI Amsterdam",
                    "Heineken Music Hall Amsterdam",
                    "Hemkade 48 Zaandam",
                    "Various locations"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf, který je seskupí podle umístění a spočítá a seřadí podle počtu umístění od nejnižšího po nejvyšší, prosím.",
            "Vytvoř sloupcový graf zobrazující počet umístění v jednotlivých lokalitách a zobraz je podle celkového počtu od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "party_host",
            "host"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2735@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Flag , COUNT(Flag) FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank = 'Midshipman') GROUP BY Flag ORDER BY Flag DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Flag",
            "y_name": "COUNT(Flag)",
            "x_data": [
                [
                    "Panama",
                    "Malta"
                ]
            ],
            "y_data": [
                [
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Flag",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaký je celkový počet vlajek lodí, které nemají kapitána v hodnosti poddůstojníka? Výsledek zobraz pomocí sloupcového grafu a seřaď jej sestupně podle osy X.",
            "Ukaž mi celkový počet lodí pod vlajkou, které neřídí žádný kapitán s hodností poddůstojníka, pomocí sloupcového grafu a zobraz osu x v sestupném pořadí."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2737@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain WHERE age < 50 GROUP BY rank ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Rank",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Midshipman",
                    "Lieutenant",
                    "Commander, junior captain"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o tom, kolik kapitánů mladších 50 let je v každé hodnosti, a zobraz osu Y v sestupném pořadí.",
            "Ukaž mi sloupcový graf pro kolik kapitánů mladších než 50 jsou v každé hodnosti? Seřaď osu Y v sestupném pořadí.",
            "Spočítej počet kapitánů mladších 50 let v každé hodnosti pomocí sloupcového grafu, zobrazeného sestupně podle osy y."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2739@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Flag , count(*) FROM ship GROUP BY flag ORDER BY Flag ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Flag",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Malta",
                    "Panama"
                ]
            ],
            "y_data": [
                [
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf pro různé lodní vlajky a kolik lodí má každou z nich. Zobraz prosím jména ve vzestupném pořadí."
        ],
        "irrelevant_tables": [
            "captain"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2740@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , avg(age) FROM captain GROUP BY CLASS ORDER BY avg(age) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "Third-rate ship of the line",
                    "Armed schooner",
                    "Cutter",
                    "Sloop-of-war",
                    "Frigate"
                ]
            ],
            "y_data": [
                [
                    51.33333333333334,
                    45,
                    43,
                    38,
                    38
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf zobrazující průměrný věk kapitánů v jednotlivých třídách, seřazený podle osy y sestupně."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2747@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Rank , count(*) FROM captain GROUP BY rank ORDER BY Rank DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Rank",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Midshipman",
                    "Lieutenant",
                    "Commander, junior captain"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Spočítej počet kapitánů, kteří mají jednotlivé hodnosti. Vizualizuj pomocí sloupcového grafu a zobraz sestupně podle hodnosti, prosím."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2751@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Rank , COUNT(Rank) FROM captain GROUP BY Rank ORDER BY Rank ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Rank",
            "y_name": "COUNT(Rank)",
            "x_data": [
                [
                    "Commander, junior captain",
                    "Lieutenant",
                    "Midshipman"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Rank",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf porovnávající celkový počet kapitánů v jednotlivých hodnostech, seřazených vzestupně podle hodnosti."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2753@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Class , COUNT(Class) FROM captain GROUP BY Class ORDER BY COUNT(Class) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Class",
            "y_name": "COUNT(Class)",
            "x_data": [
                [
                    "Third-rate ship of the line",
                    "Sloop-of-war",
                    "Frigate",
                    "Cutter",
                    "Armed schooner"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Class",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf porovnávající celkový počet kapitánů různých tříd, seřazený od nejvyššího po nejnižší počet tříd.",
            "Porovnej celkový počet kapitánů s různými třídami pomocí sloupcového grafu a seřaď je podle počtu tříd od nejvyššího po nejnižší.",
            "Sestav sloupcový graf o tom, kolik tříd se seskupilo podle tříd, a seřaď celkový počet od nejvyššího po nejnižší, prosím."
        ],
        "irrelevant_tables": [
            "Ship"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2803@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Product_Name , COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "solvency_ii",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Product_Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Conference Equipments",
                    "Dinning",
                    "Trading Policy",
                    "Trading Policy B",
                    "Men suits",
                    "Special Dinning",
                    "TV Equipments"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz názvy produktů a počet událostí, které se v nich nacházejí. Vizualizuj je pomocí sloupcového grafu a chci je seřadit podle celkového počtu vzestupně.",
            "Zobraz názvy produktů a počet událostí, ve kterých se nacházejí, pomocí sloupcového grafu a zobraz Y vzestupně."
        ],
        "irrelevant_tables": [
            "Parties",
            "Assets_in_Events"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2805@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events) GROUP BY Product_Name ORDER BY COUNT(Product_Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "solvency_ii",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Product_Name",
            "y_name": "COUNT(Product_Name)",
            "x_data": [
                [
                    "Business Policy",
                    "Business Policy B",
                    "Men suits",
                    "Dinning"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Product_Name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro výpis počtu názvů výrobků, které nejsou v žádném případě, seřaď počet názvů výrobků vzestupně.",
            "Vypiš názvy produktů, které nejsou v žádné akci, a spočítej je pomocí sloupcového grafu. Chci zobrazit celkový počet od nejnižšího po nejvyšší pořadí, prosím."
        ],
        "irrelevant_tables": [
            "Agreements",
            "Finances"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2811@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Product_Name , COUNT(Product_Name) FROM Products GROUP BY Product_Name ORDER BY Product_Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "solvency_ii",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Product_Name",
            "y_name": "COUNT(Product_Name)",
            "x_data": [
                [
                    "Business Policy",
                    "Business Policy B",
                    "Conference Equipments",
                    "Dinning",
                    "Men suits",
                    "Special Dinning",
                    "TV Equipments",
                    "Trading Policy",
                    "Trading Policy B"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    2,
                    2,
                    3,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Product_Name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf zobrazující celkový počet různých názvů produktů, chci seřadit osu x vzestupně.",
            "Sloupcový graf: osa x - název produktu, osa y - kolik název produktu. Chci zobrazit vzestupně podle Product_Name."
        ],
        "irrelevant_tables": [
            "Assets",
            "Parties_in_Events"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "2621@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_description , COUNT(product_category_description) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' GROUP BY product_category_description ORDER BY COUNT(product_category_description) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "products_gen_characteristics",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_description",
            "y_name": "COUNT(product_category_description)",
            "x_data": [
                [
                    "Seeds",
                    "Herbs",
                    "Spices"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_category_description",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké jsou popisy kategorií, v nichž se nacházejí produkty s popisy produktů obsahujícími písmeno t, a spočítej je pomocí sloupcového grafu, zobrazeného na ose y od nejvyššího po nejnižší.",
            "Sloupcový graf pro počet popisů kategorií, ve kterých se nacházejí produkty s popisy produktů obsahujícími písmeno t, a zobraz je pomocí osy y od nejvyššího po nejnižší.",
            "Najdi popisy kategorií produktů, jejichž popisy obsahují písmeno \"t\", a spočítej je pomocí sloupcového grafu. Zobraz Y od nejvyššího po nejnižší pořadí.",
            "Sloupcový graf pro zjištění počtu popisů kategorií produktů, jejichž popis obsahuje písmeno 't', a zobrazení Y v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "Ref_Colors",
            "Ref_Characteristic_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1163@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) ASC",
                "binning": "BIN date_of_treatment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) ASC BIN date_of_treatment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Feb",
                    "Mar"
                ]
            ],
            "y_data": [
                [
                    2,
                    13
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY MONTH",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik ošetření proběhne za měsíc? Vrať sloupcový graf, zobraz jej na ose y od nejnižší po nejvyšší hodnotu, prosím."
        ],
        "irrelevant_tables": [
            "Charges",
            "Breeds"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1164@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) ASC",
                "binning": "BIN date_of_treatment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id  ORDER BY COUNT(date_of_treatment) ASC BIN date_of_treatment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "Tue",
                    "Fri",
                    "Mon",
                    "Sat",
                    "Sun",
                    "Wed",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_treatment BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik ošetření proběhne za den? Vrátí sloupcový graf, který rozdělí datum ošetření podle dnů v týdnu, seřazený vzestupně podle osy Y.",
            "Vypiš počet ošetření v jednotlivých dnech pomocí sloupcového grafu, který rozděluje data ošetření podle dnů v týdnu a zobrazuje počet dat ošetření od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "Charges",
            "Dogs"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1165@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment ORDER BY date_of_treatment DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_treatment , COUNT(date_of_treatment) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY date_of_treatment ORDER BY date_of_treatment DESC"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_treatment",
            "y_name": "COUNT(date_of_treatment)",
            "x_data": [
                [
                    "2018-03-24",
                    "2018-03-23",
                    "2018-03-19",
                    "2018-03-16",
                    "2018-03-15",
                    "2018-03-14",
                    "2018-03-13",
                    "2018-03-11",
                    "2018-03-10",
                    "2018-03-08",
                    "2018-03-04",
                    "2018-03-01",
                    "2018-02-28",
                    "2018-02-26"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_treatment",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik ošetření proběhne za den? Vrátí čárový graf, který se seskupí podle data ošetření, pořadí X vzestupně."
        ],
        "irrelevant_tables": [
            "Sizes",
            "Breeds"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1166@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY COUNT(first_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id GROUP BY first_name ORDER BY COUNT(first_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Danny",
                    "Velva",
                    "Domenica",
                    "Karley",
                    "Ruben",
                    "Sigurd",
                    "Vernice",
                    "Monte"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik ošetření provedl každý odborník? Zobraz sloupcový graf, který se seskupuje podle křestního jména odborníka, osu y seřaď vzestupně.",
            "Vypiš počet ošetření, která každý odborník provedl, pomocí sloupcového grafu, který se seskupí podle křestního jména odborníka a zobrazí se vzestupně na ose y."
        ],
        "irrelevant_tables": [
            "Owners",
            "Breeds"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1167@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , age FROM Dogs WHERE abandoned_yn = 1 ORDER BY age ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "age",
            "x_data": [
                [
                    "Evangeline",
                    "Lyric",
                    "Kacey"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jak starý je každý opuštěný pes? Zobraz ve sloupcovém grafu a seřaď věk od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "Owners",
            "Charges"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1169@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , weight FROM Dogs WHERE abandoned_yn = 1 ORDER BY weight DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "weight",
            "x_data": [
                [
                    "Kacey",
                    "Lyric",
                    "Evangeline"
                ]
            ],
            "y_data": [
                [
                    7.57,
                    4.36,
                    4.01
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaká je hmotnost každého opuštěného psa? Zobraz ve sloupcovém grafu, seřaď Y sestupně.",
            "Vypiš jméno psa a hmotnost opuštěných psů do sloupcového grafu, který se zobrazí sestupně podle osy y."
        ],
        "irrelevant_tables": [
            "Breeds",
            "Treatments"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1181@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC",
                "binning": "BIN date_arrived BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) DESC BIN date_arrived BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    13,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY YEAR",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik psů přišlo v jednotlivých letech? Vizualizuj pomocí sloupcového grafu, osa y seřaď sestupně.",
            "Vypiš počet psů přivezených v jednotlivých letech pomocí sloupcového grafu, osu Y seřaď sestupně."
        ],
        "irrelevant_tables": [
            "Charges",
            "Treatments"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1184@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC",
                "binning": "BIN date_arrived BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "Mon",
                    "Thur",
                    "Sat",
                    "Sun",
                    "Wed",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik psů přišlo každý den? Vizualizuj pomocí sloupcového grafu, který rozděluje data příchodů podle dnů v týdnu, seřaď podle osy Y vzestupně.",
            "Vypiš počet psů, kteří přišli v jednotlivých dnech, pomocí sloupcového grafu, který rozděluje data příchodů podle dnů v týdnu a vypisuje je vzestupně podle osy Y."
        ],
        "irrelevant_tables": [
            "Breeds",
            "Treatment_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1185@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC",
                "binning": "BIN date_departed BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_departed , COUNT(date_departed) FROM Dogs  ORDER BY COUNT(date_departed) DESC BIN date_departed BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_departed",
            "y_name": "COUNT(date_departed)",
            "x_data": [
                [
                    "Sun",
                    "Sat",
                    "Wed",
                    "Tue",
                    "Thur",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    12,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_departed BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš počet psů, kteří odjeli v jednotlivých dnech, pomocí sloupcového grafu, který rozdělí datum odjezdu podle dnů v týdnu, a seřaď je sestupně podle počtu odjezdů.",
            "Kolik psů odešlo za den? Vizualizuj pomocí sloupcového grafu, který rozdělí data odletů podle dnů v týdnu a seřadí je sestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "Professionals",
            "Sizes"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1190@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) ASC",
                "binning": "BIN date_arrived BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_arrived , COUNT(date_arrived) FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id  ORDER BY COUNT(date_arrived) ASC BIN date_arrived BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_arrived",
            "y_name": "COUNT(date_arrived)",
            "x_data": [
                [
                    "Mon",
                    "Wed",
                    "Sat",
                    "Sun",
                    "Thur",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_arrived BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet psů, kteří byli ošetřeni v jednotlivých dnech, ve sloupcovém grafu, který rozděluje data příjezdu podle dnů v týdnu a řadí je vzestupně podle celkového počtu.",
            "Kolik psů, kteří prošli léčbou, přišlo každý den? Vrátí sloupcový graf, který rozdělí data příchodů podle dnů v týdnu a seřadí, kolik dat přišlo, vzestupně."
        ],
        "irrelevant_tables": [
            "Treatment_Types",
            "Professionals"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1197@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY first_name ORDER BY first_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Cindy",
                    "Emelie",
                    "Gay",
                    "Jaclyn",
                    "Johann",
                    "Kade",
                    "Lorenz",
                    "Melisa",
                    "Nora",
                    "Orlando",
                    "Rachelle",
                    "Rolando"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš počet psů, které má každý majitel, do sloupcového grafu, který se seskupuje podle křestního jména majitele. Chci jej seřadit podle first_name vzestupně.",
            "Kolik psů má každý majitel? Vrať sloupcový graf, který se seskupuje podle křestního jména vlastníka. Chci to vypsat podle first_name vzestupně."
        ],
        "irrelevant_tables": [
            "Charges",
            "Treatment_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1200@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT treatment_type_description , AVG(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT treatment_type_description , SUM(cost_of_treatment) FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dog_kennels",
        "vis_obj": {
            "chart": "bar",
            "x_name": "treatment_type_description",
            "y_name": "AVG(cost_of_treatment)",
            "x_data": [
                [
                    "Take for a Walk",
                    "Physical examination",
                    "Vaccination"
                ]
            ],
            "y_data": [
                [
                    478.4,
                    485.8,
                    508.0
                ]
            ],
            "classify": [],
            "describe": "GROUP BY treatment_type_description",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o tom, jaké jsou průměrné náklady na jednotlivé typy léčby? Uspořádej osu Y od nejnižšího po nejvyšší řád.",
            "Vypiš průměrné náklady na každou léčbu a odpovídající popis typu léčby do sloupcového grafu a mohl bys je seřadit podle osy y vzestupně?"
        ],
        "irrelevant_tables": [
            "Charges",
            "Breeds"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2075@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21' GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    7,
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vytvoř sloupcový graf, který zobrazí podíl jednotlivých typů věcí, které mají stav „Uzavřené\" nebo mají záznam o stavu před datem \"2017-06-19 02:59:21“. Seřaď počet kódů typů věcí sestupně."
        ],
        "irrelevant_tables": [
            "Organizations",
            "Customer_Events"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2079@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) DESC",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM residents  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Friday",
                    "Saturday",
                    "Tuesday"
                ]
            ],
            "y_data": [
                [
                    9,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro počet různých dat nastěhování obyvatel? Rozděl den nastěhování podle dne v týdnu, a seřaď je podle celkového počtu sestupně."
        ],
        "irrelevant_tables": [
            "Timed_Locations_of_Things",
            "Residents_Services"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2087@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type_of_Thing_Code , COUNT(Type_of_Thing_Code) FROM Things GROUP BY Type_of_Thing_Code ORDER BY COUNT(Type_of_Thing_Code) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type_of_Thing_Code",
            "y_name": "COUNT(Type_of_Thing_Code)",
            "x_data": [
                [
                    "Commen",
                    "Electronics",
                    "Furniture"
                ]
            ],
            "y_data": [
                [
                    8,
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type_of_Thing_Code",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Porovnej počet položek v typu každé věci pomocí sloupcového grafu. Mohl bys prosím seřadit, kolik typů věcí kódu v pořadí sestupně?"
        ],
        "irrelevant_tables": [
            "Customer_Event_Notes",
            "Timed_Locations_of_Things"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2088@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY organization_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT organization_details , COUNT(organization_details) FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id GROUP BY organization_details ORDER BY organization_details ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "organization_details",
            "y_name": "COUNT(organization_details)",
            "x_data": [
                [
                    "Denesik and Sons Party",
                    "Reinger, Hudson and Nolan Group",
                    "Robel-Schulist Group"
                ]
            ],
            "y_data": [
                [
                    10,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY organization_details",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš počet položek podle údajů o organizaci, která je vlastní, pomocí sloupcového grafu, seřazeného vzestupně podle organization_details."
        ],
        "irrelevant_tables": [
            "Properties",
            "Timed_Locations_of_Things"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2097@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC",
                "binning": "BIN date_moved_in BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2015",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    9,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY YEAR",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Použij sloupcový graf k porovnání počtu zákazníků s datem nastěhování každého zákazníka, přičemž si uvědom, že bys měl datum nastěhování zařadit do intervalu rok a celkový počet uvést v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "Residents",
            "Customer_Event_Notes"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2102@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC",
                "binning": "BIN date_moved_in BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id  ORDER BY COUNT(date_moved_in) DESC BIN date_moved_in BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Wed",
                    "Thur",
                    "Sun",
                    "Sat",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    9,
                    4,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_moved_in BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Použij sloupcový graf pro porovnání počtu zákazníků s datem nastěhování každého zákazníka, všimni si, že bys měl datum nastěhování zařadit do intervalu dne v týdnu, seřaď je sestupně podle Y."
        ],
        "irrelevant_tables": [
            "Things",
            "Timed_Locations_of_Things"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2109@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_moved_in , COUNT(date_moved_in) FROM customer_events GROUP BY date_moved_in ORDER BY COUNT(date_moved_in) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_and_lot",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_moved_in",
            "y_name": "COUNT(date_moved_in)",
            "x_data": [
                [
                    "2016-09-27",
                    "2015-03-27"
                ]
            ],
            "y_data": [
                [
                    4,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_moved_in",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf, na jehož ose X je date_moved_in a na ose Y je počet, osu Y seřaď vzestupně.",
            "Nakresli sloupcový graf závislosti počtu přesunutých dat na počtu přesunutých dat a seřaď je vzestupně podle osy y.",
            "Seskup a spočítej datum nastěhování ve sloupcovém grafu, zobraz osu Y vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "Timed_Status_of_Things",
            "Properties"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "907@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Category , count(*) FROM book_club GROUP BY category ORDER BY Category ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Category , count(*) FROM book_club GROUP BY category ORDER BY Category ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "culture_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Category",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Gay M/SF",
                    "Gay SF/F",
                    "Lesb. M/SF"
                ]
            ],
            "y_data": [
                [
                    5,
                    2,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz všechny kategorie knih a počet knih v každé kategorii pomocí sloupcového grafu a chci je seřadit podle X vzestupně.",
            "Udělej mi histogram o tom, kolik knih spadá do jednotlivých kategorií, a seřaď je vzestupně podle osy X."
        ],
        "irrelevant_tables": [
            "movie",
            "culture_company"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3288@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , count(*) FROM matches GROUP BY YEAR ORDER BY year DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wta_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2017",
                    "2016",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    108,
                    158,
                    12
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf o tom, kolik zápasů bylo odehráno v jednotlivých letech, řazení podle osy x sestupně.",
            "Zjisti počet zápasů, které se odehrály v jednotlivých letech. Vypiš je do sloupcového grafu, zobraz sestupně pomocí křížku."
        ],
        "irrelevant_tables": [
            "rankings"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3290@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM matches ORDER BY count(*) ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize BAR SELECT year , count(*) FROM matches ORDER BY count(*) ASC BIN year BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wta_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2014",
                    "2015",
                    "2013",
                    "2017",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    12,
                    108,
                    158
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf o tom, kolik zápasů se odehrálo v jednotlivých letech, a seřaď je podle osy y od nejnižšího po nejvyšší.",
            "Sečti počet zápasů, které se odehrály v každém roce. Vypiš je do sloupcového grafu a seřaď je podle osy y od nejnižšího po nejvyšší.",
            "Vrať histogram o počtu odehraných zápasů v jednotlivých letech, seřazený od nejnižšího po nejvyšší počet zápasů podle osy y."
        ],
        "irrelevant_tables": [
            "rankings"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "443@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Directed_by , COUNT(Directed_by) FROM film GROUP BY Directed_by ORDER BY Directed_by ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Directed_by , COUNT(Directed_by) FROM film GROUP BY Directed_by ORDER BY Directed_by ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Directed_by",
            "y_name": "COUNT(Directed_by)",
            "x_data": [
                [
                    "Bill Schreiner",
                    "Jesus Salvador Trevi\u00f1o"
                ]
            ],
            "y_data": [
                [
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Directed_by",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro zobrazení počtu režisér z různých režisérů. Zobraz Directed_by v pořadí vzestupně.",
            "Jaký je počet filmů jednotlivých režisérů? Vrátí sloupcový graf seřazený vzestupně podle názvů."
        ],
        "irrelevant_tables": [
            "schedule",
            "cinema"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "445@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Directed_by , count(*) FROM film GROUP BY directed_by ORDER BY Directed_by ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Directed_by , count(*) FROM film GROUP BY directed_by ORDER BY Directed_by ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Directed_by",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bill Schreiner",
                    "Jesus Salvador Trevi\u00f1o"
                ]
            ],
            "y_data": [
                [
                    4,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš všechny režiséry spolu s počtem filmů, které každý z nich režíroval. Vypiš je do sloupcového grafu a zobraz vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "schedule",
            "cinema"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "447@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title ORDER BY Title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Title , max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY Title ORDER BY Title ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Title",
            "y_name": "max(T1.price)",
            "x_data": [
                [
                    "The Case of the Bermuda Triangle",
                    "The Case of the Mystery Weekend",
                    "The Case of the Piggy Banker",
                    "The Case of the Smart Dummy",
                    "The Case: Off the Record"
                ]
            ],
            "y_data": [
                [
                    9.99,
                    15.99,
                    12.99,
                    12.99,
                    8.99
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi název a nejvyšší cenu každého filmu. Ukaž mi sloupcový graf, a mohl bys ho zobrazït vzestupně podle osy x?",
            "Vrať sloupcový graf, který zobrazuje název a maximální cenu jednotlivých filmů, osa x se zobrazuje vzestupně.",
            "Uveď název a nejvyšší cenu každého filmu ve sloupcovém grafu a osu x zobraz vzestupně.",
            "Sloupcový graf o tom, jaké jsou titul a maximální cena každého filmu? Mohl bys je zobrazit podle názvu vzestupně?"
        ],
        "irrelevant_tables": [
            "cinema"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "453@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , AVG(Price) FROM schedule AS T1 JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ORDER BY AVG(Price) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , AVG(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ORDER BY AVG(Price) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "AVG(Price)",
            "x_data": [
                [
                    "Carrowleagh",
                    "Mount Callan",
                    "Codling",
                    "Gortahile",
                    "Oriel"
                ]
            ],
            "y_data": [
                [
                    9.99,
                    9.99,
                    11.656666666666666,
                    12.99,
                    15.99
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazující průměrnou cenu každého kina, seřazeno podle průměru ceny vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "455@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Title , COUNT(Title) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Title ORDER BY COUNT(Title) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Title , COUNT(Title) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Title ORDER BY COUNT(Title) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Title",
            "y_name": "COUNT(Title)",
            "x_data": [
                [
                    "The Case of the Bermuda Triangle",
                    "The Case of the Piggy Banker",
                    "The Case of the Smart Dummy",
                    "The Case: Off the Record",
                    "The Case of the Mystery Weekend"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Title",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro každý film vrať počet kin, která ho promítají, ve sloupcovém grafu a chci je seřadit podle počtu titulů vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "458@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Oriel",
                    "Mount Callan",
                    "Gortahile",
                    "Codling",
                    "Carrowleagh"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet filmů v jednotlivých kinech, zobraz prosím názvy v sestupném pořadí."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "459@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , SUM(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY Date DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , SUM(Price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id GROUP BY Date ORDER BY Date DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "SUM(Price)",
            "x_data": [
                [
                    "21 May",
                    "21 Jun",
                    "20 May",
                    "2 Aug",
                    "19 May",
                    "11 July"
                ]
            ],
            "y_data": [
                [
                    25.98,
                    8.99,
                    9.99,
                    12.99,
                    15.99,
                    9.99
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro každý záznam v rozvrhu zobraz součet cen za každý den ve sloupcovém grafu, seřazeném sestupně podle y."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "465@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Openning_year , COUNT(Openning_year) FROM cinema GROUP BY Openning_year ORDER BY COUNT(Openning_year) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Openning_year , COUNT(Openning_year) FROM cinema GROUP BY Openning_year ORDER BY COUNT(Openning_year) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Openning_year",
            "y_name": "COUNT(Openning_year)",
            "x_data": [
                [
                    "2009",
                    "2012",
                    "2013",
                    "2015",
                    "2010",
                    "2011"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Openning_year",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Řekni mi, kolik kin je otevřeno v jednotlivých letech ve sloupcovém grafu, a seřaď Y vzestupně, prosím.",
            "Sloupcový graf počtu otevření z každého roku otevření, seznam od nejnižšího k nejvyššímu podle osy y, prosím."
        ],
        "irrelevant_tables": [
            "schedule",
            "film"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "468@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Openning_year , SUM(Capacity) FROM cinema GROUP BY Openning_year ORDER BY SUM(Capacity) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Openning_year , SUM(Capacity) FROM cinema GROUP BY Openning_year ORDER BY SUM(Capacity) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Openning_year",
            "y_name": "SUM(Capacity)",
            "x_data": [
                [
                    "2010",
                    "2011",
                    "2012",
                    "2015",
                    "2013",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    1633,
                    1336,
                    368,
                    364,
                    330,
                    305
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Openning_year",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazující součet kapacity otevřených kin za každý rok a mohl bys zobrazit osu y od nejvyššího po nejnižší pořadí?",
            "Uveď mi sloupcový graf celkového počtu kapacit v jednotlivých letech otevření, seřazený podle Y od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [
            "schedule",
            "film"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "469@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year ORDER BY AVG(Capacity) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Openning_year , AVG(Capacity) FROM cinema GROUP BY Openning_year ORDER BY AVG(Capacity) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Openning_year",
            "y_name": "AVG(Capacity)",
            "x_data": [
                [
                    "2010",
                    "2011",
                    "2012",
                    "2015",
                    "2013",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    544.3333333333334,
                    445.3333333333333,
                    368,
                    364,
                    330,
                    305
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Openning_year",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf znázorňující průměrnou kapacitu otevřených kin v jednotlivých letech, seřazený podle osy y sestupně."
        ],
        "irrelevant_tables": [
            "schedule",
            "film"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "474@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Capacity FROM cinema ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Capacity FROM cinema ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "cinema",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Capacity",
            "x_data": [
                [
                    "Oriel",
                    "Mount Callan",
                    "Moneypoint",
                    "Grouse Lodge",
                    "Gortahile",
                    "Glenough",
                    "Glenmore",
                    "Dublin Array",
                    "Codling",
                    "Carrowleagh"
                ]
            ],
            "y_data": [
                [
                    330,
                    908,
                    225,
                    203,
                    208,
                    325,
                    305,
                    364,
                    1100,
                    368
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vytvoř sloupcový graf zobrazující kapacitu napříč názvem, název uveď v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "film",
            "schedule"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1437@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT year , COUNT(year) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY year ORDER BY year DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2017",
                    "2016",
                    "2015"
                ]
            ],
            "y_data": [
                [
                    400,
                    462,
                    378
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik závodů s výsledky se koná v jednotlivých letech po roce 2014? Ukaž mi sloupcový graf a pořadí sestupně podle roku, prosím."
        ],
        "irrelevant_tables": [
            "constructorResults",
            "status"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1448@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , COUNT(year) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"  ORDER BY year ASC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "formula_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "COUNT(year)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    17,
                    18,
                    17,
                    19,
                    19,
                    20,
                    19,
                    19,
                    19,
                    21,
                    20
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž počet závodů, ve kterých se v každém roce objevil jezdec s křestním jménem Lewis, pomocí čárového grafu, a mohl bys je seřadit podle X vzestupně?",
            "V kolika závodech se objevil jezdec, jehož jméno je Lewis? Ukaž mi čárový graf, zobrazený vzestupně podle osy x.",
            "Zobraz počet závodů, ve kterých se v každém roce objevil jezdec s křestním jménem Lewis, pomocí čárového grafu a seřaď je podle osy X vzestupně, prosím.",
            "V kolika závodech se objevil jezdec, jehož jméno je Lewis? Ukaž mi čárový graf, seřaď jej podle X vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "circuits",
            "driverStandings"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3220@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Grape , COUNT(Grape) FROM WINE GROUP BY Grape ORDER BY Grape ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Grape",
            "y_name": "COUNT(Grape)",
            "x_data": [
                [
                    "Barbera",
                    "Cabernet Franc",
                    "Cabernet Sauvingnon",
                    "Chardonnay",
                    "Grenache",
                    "Malbec",
                    "Marsanne",
                    "Merlot",
                    "Petite Sirah",
                    "Pinot Noir",
                    "Roussanne",
                    "Sangiovese",
                    "Sauvignon Blanc",
                    "Syrah",
                    "Tempranillo",
                    "Viognier",
                    "Zinfandel"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    68,
                    104,
                    10,
                    1,
                    1,
                    10,
                    6,
                    109,
                    1,
                    1,
                    46,
                    61,
                    1,
                    1,
                    78
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Grape",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaký je počet různých hroznů každého vína? Zobraz mi sloupcový graf a osu X vzestupně.",
            "Prosím, udělej mi sloupcový graf, který počítá počet hroznů vína, a chci ho zobrazit vzestupně podle osy X."
        ],
        "irrelevant_tables": [
            "grapes",
            "appellations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3224@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Area , COUNT(Area) FROM APPELLATIONS GROUP BY Area ORDER BY Area DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Area",
            "y_name": "COUNT(Area)",
            "x_data": [
                [
                    "Sierra Foothills",
                    "Santa Cruz Mountains",
                    "North Coast",
                    "Central Valley",
                    "Central Coast",
                    "California"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    31,
                    2,
                    14,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Area",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf pro to, jaký je počet oblastí pro všechny názvy? Mohl bys zobrazit osu X ve vzestupném pořadí?",
            "Udělej mi sloupcový graf počtu ploch jednotlivých oblastí, zobrazený na ose x sestupně."
        ],
        "irrelevant_tables": [
            "grapes",
            "wine"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3226@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50 GROUP BY Name ORDER BY COUNT(Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Rosellas Vineyard",
                    "Pinot Noir",
                    "Garys Vineyard",
                    "Chardonnay",
                    "Sleepy Hollow Vineyard",
                    "Sarmento Vineyard",
                    "Metallico Un-Oaked",
                    "Kali Hart"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    3,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Uveď názvy vín s cenami nižšími než 50 a s apelacemi v okrese Monterey a spočítej je pomocí sloupcového grafu, seřaď osu y od nejvyššího po nejnižší pořadí, prosím.",
            "Sloupcový graf pro to, jaký je počet vín, které mají ceny nižší než 50 a mají apelace v kraji Monterey? Chci je seřadit podle Y sestupně prosím.",
            "Jaká jsou vína, která mají ceny nižší než 50 a mají apelace v okrese Monterey? Spočítej je sloupcovým grafem, a seřaď je sestupně podle osy y."
        ],
        "irrelevant_tables": [
            "grapes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3236@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Winery , COUNT(Winery) FROM WINE WHERE Price > 100 GROUP BY Winery ORDER BY Winery ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Winery",
            "y_name": "COUNT(Winery)",
            "x_data": [
                [
                    "Bucella",
                    "Carter",
                    "Casa Piena",
                    "Caymus",
                    "Chappellet",
                    "Chimeney Rock",
                    "Darioush",
                    "David Arthur",
                    "Dos Lagos",
                    "Hourglass",
                    "Janzen",
                    "Lewis",
                    "Morlet",
                    "Paul Hobbs",
                    "Sine Qua Non"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Winery",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf o počtu vinařství, která mají vína, jejichž cena je vyšší než 100, a seřaď X vzestupně."
        ],
        "irrelevant_tables": [
            "grapes",
            "appellations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3238@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Grape , count(*) FROM WINE GROUP BY Grape ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Grape",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Barbera",
                    "Cabernet Franc",
                    "Malbec",
                    "Marsanne",
                    "Roussanne",
                    "Sangiovese",
                    "Tempranillo",
                    "Viognier",
                    "Petite Sirah",
                    "Grenache",
                    "Merlot",
                    "Sauvignon Blanc",
                    "Syrah",
                    "Cabernet Sauvingnon",
                    "Zinfandel",
                    "Chardonnay",
                    "Pinot Noir"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    6,
                    10,
                    10,
                    46,
                    61,
                    68,
                    78,
                    104,
                    109
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf s údaji o počtu vín pro jednotlivé hrozny a seřaď je podle Y od nejnižšího po nejvyšší.",
            "Zobraz sloupcový graf, v němž uvedete počty vín z různých odrůd, a seřaď je vzestupně podle celkového počtu.",
            "Sloupcový graf o tom, kolik je vín z jednotlivých odrůd, seřazený vzestupně podle celkového počtu.",
            "Jaké jsou počty vín pro různé druhy hroznů? Zakresli je do sloupcového grafu a zobraz vzestupně podle celkového počtu.",
            "Ukaž mi celkový počet podle hroznů v histogramu a na ose y zobraz od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "appellations",
            "grapes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3247@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Year , max(Score) FROM WINE GROUP BY Year ORDER BY Year ASC"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "Year",
            "y_name": "max(Score)",
            "x_data": [
                [
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2066"
                ]
            ],
            "y_data": [
                [
                    92,
                    95,
                    98,
                    98,
                    95,
                    95,
                    88
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli lineární graf, který ukáže, jaké je maximální skóre vín v jednotlivých letech, a zobraz je vzestupně podle X.",
            "Můžeš nakreslit čárový graf, který zobrazí trend maximálního skóre v průběhu roku, seřadit X v pořadí vzestupně."
        ],
        "irrelevant_tables": [
            "appellations",
            "grapes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3256@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Year , max(Price) FROM WINE GROUP BY Year ORDER BY Year ASC"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "Year",
            "y_name": "max(Price)",
            "x_data": [
                [
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2066"
                ]
            ],
            "y_data": [
                [
                    75,
                    100,
                    200,
                    225,
                    130,
                    78,
                    32
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj obecný trend maximální ceny v průběhu roku v čárovém grafu, chci seřadit osu X v pořadí vzestupně."
        ],
        "irrelevant_tables": [
            "appellations",
            "grapes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1498@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , count(*) FROM company GROUP BY headquarters ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "count(*)",
            "x_data": [
                [
                    "USA",
                    "UK",
                    "China",
                    "Netherlands",
                    "Brazil"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro každé sídlo ukaž, jaká jsou sídla a kolik společností je tam soustředěno. Vizualizuj to pomocí sloupcového grafu a chci to vypsat sestupně podle celkového počtu.",
            "Vypiš všechna sídla a počet společností v každém sídle pomocí sloupcového grafu. Mohl bys zobrazit celkový počet od nejvyššího po nejnižší?",
            "Sloupcový graf celkového počtu z každého velitelství, seřazený sestupně podle Y."
        ],
        "irrelevant_tables": [
            "gas_station",
            "station_company"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1508@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , sum(market_value) FROM company GROUP BY main_industry ORDER BY Main_Industry ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "sum(market_value)",
            "x_data": [
                [
                    "Banking",
                    "Conglomerate",
                    "Oil and gas"
                ]
            ],
            "y_data": [
                [
                    580.4000000000002,
                    415.9,
                    1257.1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o hlavních odvětvích a celkové tržní hodnotě jednotlivých odvětví, seřazený vzestupně podle názvů, prosím.",
            "Jaké jsou hlavní odvětví a celková tržní hodnota pro každé odvětví? Vizualizuj to pomocí sloupcového grafu, seřazeného vzestupně podle osy X.",
            "Zobraz všechna hlavní odvětví a celkovou tržní hodnotu v každém odvětví pomocí sloupcového grafu, zobraz data vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "gas_station",
            "station_company"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1510@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Main_Industry , COUNT(Main_Industry) FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company) GROUP BY Main_Industry ORDER BY COUNT(Main_Industry) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Main_Industry",
            "y_name": "COUNT(Main_Industry)",
            "x_data": [
                [
                    "Conglomerate",
                    "Banking"
                ]
            ],
            "y_data": [
                [
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Main_Industry",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž počet podniků bez čerpací stanice v jednotlivých hlavních odvětvích pomocí sloupcového grafu, mohl bys je seřadit od nejnižšího po nejvyšší podle písmene Y?",
            "Kolik společností bez čerpací stanice v jednotlivých hlavních odvětvích? Nakresli sloupcový graf a zobraz jej podle celkového počtu vzestupně."
        ],
        "irrelevant_tables": [
            "gas_station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1511@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Manager_Name , COUNT(Manager_Name) FROM gas_station GROUP BY Manager_Name ORDER BY Manager_Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Manager_Name",
            "y_name": "COUNT(Manager_Name)",
            "x_data": [
                [
                    "BrianWingrave",
                    "Bryan Taylor",
                    "BryanDenman",
                    "Colin Denman",
                    "Jon Rowe",
                    "Luke Rowe",
                    "Simon Cope Derek Marloe",
                    "SimonMarloe",
                    "Tom Whit",
                    "Tony Bristow"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Manager_Name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet čerpacích stanic pro každého manažera ve sloupcovém grafu a zobraz je vzestupně podle jmen.",
            "Kolik čerpacích stanic má každý manažer? Vykresli sloupcový graf, zobraz osu vzestupně podle jmen."
        ],
        "irrelevant_tables": [
            "company",
            "station_company"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1516@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company , count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id ORDER BY Company DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Royal Dutch Shell",
                    "Petrobras",
                    "PetroChina",
                    "ExxonMobil",
                    "BP"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz název společnosti s počtem čerpacích stanic pomocí sloupcového grafu a mohl bys je seřadit sestupně podle X?",
            "Zobraz název společnosti s počtem čerpacích stanic. Zobraz sloupcový graf a seřaď je podle názvů sestupně."
        ],
        "irrelevant_tables": [
            "gas_station"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1518@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "COUNT(Headquarters)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "Netherlands",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Headquarters",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet společností v jednotlivých ústředích pomocí sloupcového grafu a osu x vzestupně.",
            "Sloupcový graf počtu velitelství z každého velitelství, seřaď jména v pořadí vzestupně."
        ],
        "irrelevant_tables": [
            "station_company",
            "gas_station"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2459@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT job , avg(age) FROM Person GROUP BY job ORDER BY avg(age) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "network_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "job",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "doctor",
                    "engineer",
                    "student"
                ]
            ],
            "y_data": [
                [
                    45,
                    35,
                    25.5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - práce, osa y - průměrný věk, seřaď je podle osy y sestupně.",
            "Jaký je průměrný věk pro různé pracovní pozice? Vizualizuj je pomocí sloupcového grafu, seřaď celkový počet od nejvyššího po nejnižší.",
            "Vizualizuj sloupcový graf pro průměrný věk pro různé pracovní pozice a zobraz jej pomocí osy Y od nejvyššího po nejnižší.",
            "Jak starý je průměrný člověk pro každou práci? Zobraz sloupcový graf a seřaď celkový počet od nejvyššího po nejnižší.",
            "Sloupcový graf o tom, jaký je průměrný věk pro různé pracovní pozice, a pořadí podle průměrného věku sestupně.",
            "Vrať histogram o tom, jak starý je průměrný člověk pro každou práci? A mohl bys je seřadit podle osy y sestupně prosím?"
        ],
        "irrelevant_tables": [
            "PersonFriend"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2461@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT job , avg(age) FROM Person WHERE gender = 'male' GROUP BY job ORDER BY avg(age) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "network_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "job",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "doctor",
                    "engineer"
                ]
            ],
            "y_data": [
                [
                    45,
                    35
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o tom, jaký je průměrný věk mužů na různých pracovních pozicích, a zobraz Y v sestupném pořadí.",
            "Jaký je průměrný věk mužů pro různé pracovní pozice? Vizualizuj to pomocí sloupcového grafu, a seřaď podle Y sestupně, prosím.",
            "Jaký je průměrný věk muže v jednotlivých zaměstnáních? Vizualizuj pomocí sloupcového grafu a seřaď podle osy y sestupně.",
            "Vrať sloupcový graf o tom, jaký je průměrný věk muže v jednotlivých zaměstnáních, seřaď je sestupně podle Y.",
            "Vrať histogram o tom, jaký je průměrný věk mužů pro různé pracovní pozice, a seřaď osu y sestupně."
        ],
        "irrelevant_tables": [
            "PersonFriend"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2465@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT gender , count(*) FROM Person WHERE age < 40 GROUP BY gender ORDER BY gender DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "network_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "gender",
            "y_name": "count(*)",
            "x_data": [
                [
                    "male",
                    "female"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o tom, kolik lidí je mladších 40 let pro každé pohlaví, a seřaď je podle osy x.",
            "Kolik lidí je mladších 40 let pro každé pohlaví? Zakresli je do sloupcového grafu a mohl bys je zobrazit pomocí X sestupně?"
        ],
        "irrelevant_tables": [
            "PersonFriend"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2317@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Class ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Draft_Class , Draft_Pick_Number FROM match_season WHERE POSITION = \"Defender\" ORDER BY Draft_Class ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Draft_Class",
            "y_name": "Draft_Pick_Number",
            "x_data": [
                [
                    "1996 MLS Inaugural Player Draft",
                    "1999 MLS College Draft",
                    "2000 MLS SuperDraft",
                    "2005 MLS SuperDraft",
                    "2006 MLS SuperDraft",
                    "2008 MLS SuperDraft",
                    "2009 MLS SuperDraft"
                ]
            ],
            "y_data": [
                [
                    87,
                    5,
                    4,
                    9,
                    37,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf, kde jsou uvedeny počty draftů a třídy draftů pro hráče, kteří hrají na pozici obránce, mohli bys je seřadit podle osy x vzestupně?"
        ],
        "irrelevant_tables": [
            "team",
            "country"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2321@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Position , COUNT(*) FROM match_season GROUP BY POSITION ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "match_season",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Position",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Forward",
                    "Midfielder",
                    "Defender"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Uveď sloupcový graf pro celkový počet jednotlivých pozic, zobraz celkový počet v pořadí vzestupně.",
            "Zobraz pozici hráčů a odpovídající počet hráčů pomocí sloupcového grafu a celkový počet vzestupně.",
            "Nakresli sloupcový graf o tom, kolik hráčů hrálo na jednotlivých pozicích, zobraz jej vzestupně podle osy y.",
            "Kolik hráčů hrálo na jednotlivých pozicích? Zakresli je do sloupcového grafu a seřaď je podle osy y.",
            "Zobraz pozici hráčů a odpovídající počet hráčů? Vizualizuj to pomocí sloupcového grafu a mohl bys je zobrazit vzestupně podle Y, prosím?",
            "Vrať sloupcový graf o tom, kolik hráčů hrálo na jednotlivých pozicích, a uveď celkový počet vzestupně."
        ],
        "irrelevant_tables": [
            "team",
            "country"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2565@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY COUNT(Company_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" GROUP BY Company_name ORDER BY COUNT(Company_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "phone_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company_name",
            "y_name": "COUNT(Company_name)",
            "x_data": [
                [
                    "Sony Mobile Communications",
                    "Nokia Corporation",
                    "Samsung Electronics Co Ltd"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Company_name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Porovnej počet čipů od různých společností pro telefon, jehož typ režimu obrazovky je \"Grafika\", pomocí sloupcového grafu, seřazeného vzestupně podle názvu společnosti."
        ],
        "irrelevant_tables": [
            "chip_model"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2566@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY COUNT(Company_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Company_name , COUNT(Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32 GROUP BY Company_name ORDER BY COUNT(Company_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "phone_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Company_name",
            "y_name": "COUNT(Company_name)",
            "x_data": [
                [
                    "Nokia Corporation",
                    "Sony Mobile Communications",
                    "Samsung Electronics Co Ltd",
                    "LG Electronics",
                    "Huawei Technologies Co.Ltd.",
                    "HTC Corporation"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Company_name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "vypočítej celkový počet čipů různých názvů společností pro všechny telefony, které byly uvedeny na trh v roce 2002 nebo mají velikost paměti RAM větší než 32, osa y je seřazena sestupně. Vrať sloupcový graf."
        ],
        "irrelevant_tables": [
            "screen_mode"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2551@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT PetID , weight FROM pets WHERE pet_age > 1 ORDER BY weight ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "pets_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "PetID",
            "y_name": "weight",
            "x_data": [
                [
                    "2001",
                    "2002"
                ]
            ],
            "y_data": [
                [
                    12,
                    13.4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf pro identifikaci a hmotnost každého zvířete, které je starší než 1 rok, a seřaď jej od nejnižšího po nejvyšší na ose y.",
            "Sloupcový graf o tom, jaké je ID a váha každého zvířete, které je starší než 1? Mohl bys je zobrazit vzestupně podle osy y, prosím?",
            "Zjisti ID a hmotnost všech zvířat, jejichž věk je vyšší než 1. Vizualizuj je pomocí sloupcového grafu a zobraz hmotnost od nejnižší po nejvyšší."
        ],
        "irrelevant_tables": [
            "Student",
            "Has_Pet"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2558@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT PetType , max(weight) FROM pets GROUP BY PetType ORDER BY PetType ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "pets_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "PetType",
            "y_name": "max(weight)",
            "x_data": [
                [
                    "cat",
                    "dog"
                ]
            ],
            "y_data": [
                [
                    12,
                    13.4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro zobrazení maximální hmotnosti z různých typů domácích zvířat, zobraz je vzestupně podle osy x, prosím.",
            "Uveď maximální hmotnost a typ pro každý typ domácího mazlíčka pomocí sloupcového grafu a zobraz jej podle PetType vzestupně."
        ],
        "irrelevant_tables": [
            "Has_Pet",
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2560@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT PetType , avg(weight) FROM pets GROUP BY pettype ORDER BY avg(weight) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "pets_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "PetType",
            "y_name": "avg(weight)",
            "x_data": [
                [
                    "cat",
                    "dog"
                ]
            ],
            "y_data": [
                [
                    12,
                    11.35
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaká je průměrná hmotnost pro jednotlivé typy domácích zvířat? Zobraz sloupcový graf a chci ho seřadit podle osy Y od nejvyšší po nejnižší, prosím.",
            "Uveď mi sloupcový graf pro průměrnou hmotnost jednotlivých typů zvířat, mohl bys je uvést sestupně podle Y?",
            "Vizualizuj sloupcový graf pro průměrnou hmotnost jednotlivých typů domácích zvířat, mohl bys zobrazit osu y od nejvyššího po nejnižší pořadí?"
        ],
        "irrelevant_tables": [
            "Student",
            "Has_Pet"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2959@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT outcome_description , COUNT(outcome_description) FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code GROUP BY outcome_description ORDER BY COUNT(outcome_description) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "tracking_grants_for_research",
        "vis_obj": {
            "chart": "bar",
            "x_name": "outcome_description",
            "y_name": "COUNT(outcome_description)",
            "x_data": [
                [
                    "Research Patent",
                    "Published Research Paper"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY outcome_description",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké jsou popisy všech výstupů projektu a spočítej je pomocí sloupcového grafu. Chci seřadit osu y vzestupně.",
            "Sloupcový graf pro výpis počtu popisů výsledků pro všechny projekty, mohl bys je seřadit vzestupně podle osy y?",
            "Sloupcový graf pro počet popisů všech výstupů projektu? Mohl bys je zobrazit vzestupně podle Y, prosím?",
            "Uveď popis výsledků všech projektů a spočítej je pomocí sloupcového grafu a seřaď je od nejnižšího po nejvyšší počet popisů výsledků."
        ],
        "irrelevant_tables": [
            "Organisations",
            "Organisation_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2509@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party_name , count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "party_people",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "3",
                    "Convention Peoples Party",
                    "Progress Party"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz názvy stran a počet událostí pro každou stranu ve sloupcovém grafu a seznam podle osy X vzestupně."
        ],
        "irrelevant_tables": [
            "member",
            "region"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2513@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party_name , count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY Party_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "party_people",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "3",
                    "Convention Peoples Party",
                    "Progress Party"
                ]
            ],
            "y_data": [
                [
                    9,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf s počtem členů v jednotlivých stranách a seřaď je podle názvu strany vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "region",
            "party_events"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2517@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Minister , COUNT(Minister) FROM party WHERE party_name != 'Progress Party' GROUP BY Minister ORDER BY COUNT(Minister) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "party_people",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Minister",
            "y_name": "COUNT(Minister)",
            "x_data": [
                [
                    "Dr. Kwame Nkrumah (MP)",
                    "Imoru Egala (MP)",
                    "Ebenezer Ako-Adjei (MP)"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Minister",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž všechny ministry, kteří nepatří k Pokrokové straně, a spočítej je pomocí sloupcového grafu a seřaď je podle písmene Y.",
            "Kteří ministři nejsou součástí Pokrokové strany, a spočítej je pomocí sloupcového grafu, seřaď je v pořadí vzestupně podle Y."
        ],
        "irrelevant_tables": [
            "region",
            "party_events"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1551@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC",
                "binning": "BIN HIRE_DATE BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT HIRE_DATE , AVG(SALARY) FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'  ORDER BY AVG(SALARY) ASC BIN HIRE_DATE BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "HIRE_DATE",
            "y_name": "AVG(SALARY)",
            "x_data": [
                [
                    "Thur",
                    "Sat",
                    "Fri",
                    "Mon",
                    "Tue",
                    "Wed",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    3280,
                    4933.333333333333,
                    6357.142857142857,
                    6525,
                    6620,
                    7590.909090909091,
                    7733.333333333333
                ]
            ],
            "classify": [],
            "describe": "BIN HIRE_DATE BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, vrať sloupcový graf o rozložení hire_date a průměrného platu. Rozděl hire_date podle dnů v týdnu a zobraz jej od nejnižšího po nejvyšší na ose y.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, mi ve sloupcovém grafu zobraz rozložení hire_date do zaměstnání a průměrný plat. Rozděl hire_date do zaměstnání podle dnů v týdnu, a to od nejnižšího po nejvyšší na ose y.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, zobrazí sloupcový graf rozložení hire_date a průměrného platu. Rozděl hire_date podle dnů v týdnu a seřaď průměrný plat od nejnižšího po nejvyšší, prosím.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, najdi hire_date a průměrný plat. Rozděl hire_date podle dnů v týdnu a zobraz je pomocí sloupcového grafu, který seřaď vzestupně podle celkového počtu.",
            "Pro všechny zaměstnance, kteří mají ve svém křestním jménu písmena D nebo S, zobraz sloupcový graf o rozložení hire_date a průměrného platu. Rozděl hire_date podle dnů v týdnu, průměrný plat zobraz vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "countries",
            "regions"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1622@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = ( SELECT department_id FROM employees WHERE first_name = \"Clara\") AND first_name != \"Clara\"  ORDER BY COUNT(HIRE_DATE) ASC",
                "binning": "BIN HIRE_DATE BY MONTH"
            },
            "VQL": "Visualize BAR SELECT HIRE_DATE , COUNT(HIRE_DATE) FROM employees WHERE department_id = ( SELECT department_id FROM employees WHERE first_name = \"Clara\") AND first_name != \"Clara\"  ORDER BY COUNT(HIRE_DATE) ASC BIN HIRE_DATE BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "HIRE_DATE",
            "y_name": "COUNT(HIRE_DATE)",
            "x_data": [
                [
                    "Sept",
                    "Aug"
                ]
            ],
            "y_data": [
                [
                    3,
                    30
                ]
            ],
            "classify": [],
            "describe": "BIN HIRE_DATE BY MONTH",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro všechny zaměstnance ve stejném oddělení jako Clara s výjimkou Clary zařaď jejich datum nástupu do měsíčního intervalu a spočítej, kolik zaměstnanců v jednotlivých měsících ve sloupcovém grafu, seřaď je od nejnižšího po nejvyšší podle Y."
        ],
        "irrelevant_tables": [
            "regions",
            "departments"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1626@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY AVG(salary) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT JOB_TITLE , AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title ORDER BY AVG(salary) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "JOB_TITLE",
            "y_name": "AVG(salary)",
            "x_data": [
                [
                    "Purchasing Clerk",
                    "Stock Clerk",
                    "Shipping Clerk",
                    "Administration Assistant",
                    "Programmer",
                    "Marketing Representative",
                    "Human Resources Representative",
                    "Stock Manager",
                    "Accountant",
                    "Public Accountant",
                    "Sales Representative",
                    "Public Relations Representative",
                    "Purchasing Manager",
                    "Accounting Manager",
                    "Finance Manager",
                    "Sales Manager",
                    "Marketing Manager",
                    "Administration Vice President",
                    "President"
                ]
            ],
            "y_data": [
                [
                    2780,
                    2785,
                    3215,
                    4400,
                    5760,
                    6000,
                    6500,
                    7280,
                    7920,
                    8300,
                    8350,
                    10000,
                    11000,
                    12000,
                    12000,
                    12200,
                    13000,
                    17000,
                    24000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf, jaký je průměrný plat pro jednotlivé pracovní pozice, a seřaď je vzestupně podle Y, prosím.",
            "Zobraz sloupcový graf, jaký je průměrný plat pro každou pracovní pozici? Chci seřadit Y vzestupně, prosím.",
            "Jaký je průměrný plat pro jednotlivé pracovní pozice? Zobraz sloupcový graf, seřaď je od nejnižšího po nejvyšší podle osy Y, prosím."
        ],
        "irrelevant_tables": [
            "regions",
            "countries"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1627@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary < ( SELECT min(salary) FROM employees WHERE job_id = 'MK_MAN' ) GROUP BY JOB_ID ORDER BY JOB_ID DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary < ( SELECT min(salary) FROM employees WHERE job_id = 'MK_MAN' ) GROUP BY JOB_ID ORDER BY JOB_ID DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "JOB_ID",
            "y_name": "COUNT(JOB_ID)",
            "x_data": [
                [
                    "ST_MAN",
                    "ST_CLERK",
                    "SH_CLERK",
                    "SA_REP",
                    "SA_MAN",
                    "PU_MAN",
                    "PU_CLERK",
                    "PR_REP",
                    "MK_REP",
                    "IT_PROG",
                    "HR_REP",
                    "FI_MGR",
                    "FI_ACCOUNT",
                    "AD_ASST",
                    "AC_MGR",
                    "AC_ACCOUNT"
                ]
            ],
            "y_data": [
                [
                    5,
                    20,
                    20,
                    30,
                    3,
                    1,
                    5,
                    1,
                    1,
                    5,
                    1,
                    1,
                    5,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY JOB_ID",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro vizualizaci sloupcového grafu seskup a spočítej ID všech zaměstnanců, jejichž plat je menší než jakýkoli plat zaměstnanců, jejichž pracovní pozice je MK_MAN, a seřaď je podle jmen sestupně."
        ],
        "irrelevant_tables": [
            "jobs",
            "countries"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1632@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "DEPARTMENT_NAME",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Administration",
                    "Human Resources",
                    "Public Relations",
                    "Accounting",
                    "Marketing",
                    "Executive",
                    "IT",
                    "Finance",
                    "Purchasing",
                    "Sales",
                    "Shipping"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    3,
                    5,
                    6,
                    6,
                    34,
                    45
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf, jak se jmenují oddělení a kolik zaměstnanců v nich pracuje, seřaď celkový počet od nejnižšího po nejvyšší.",
            "Ukaž mi sloupcový graf o tom, jak se jmenují oddělení a kolik zaměstnanců v nich pracuje. Mohl bys je seřadit od nejnižšího k nejvyššímu podle osy Y?",
            "Jaké jsou názvy oddělení a kolik zaměstnanců v každém z nich pracuje? Vizualizuj pomocí sloupcového grafu, seřaď Y od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "regions",
            "countries"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1671@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT FIRST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT FIRST_NAME , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY SALARY ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "FIRST_NAME",
            "y_name": "SALARY",
            "x_data": [
                [
                    "Pat",
                    "Susan",
                    "Kimberely",
                    "William",
                    "Hermann",
                    "Shelley",
                    "Michael"
                ]
            ],
            "y_data": [
                [
                    6000,
                    6500,
                    7000,
                    8300,
                    10000,
                    12000,
                    13000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají id mezi 100 a 200. Vizualizuj sloupcový graf o rozložení first_name a platu, a zobraz podle celkového počtu vzestupně.",
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají ID mezi 100 a 200, mi poskytni srovnání platů přes first_name pomocí sloupcového grafu, seřazeného od nejnižšího po nejvyšší podle Y.",
            "U zaměstnanců, kteří nepracují v odděleních s vedoucími pracovníky, kteří mají id mezi 100 a 200, zobraz sloupcový graf rozložení first_name a platu, a seřaď je od nejnižšího po nejvyšší podle Y."
        ],
        "irrelevant_tables": [
            "jobs",
            "job_history"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1696@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200) ORDER BY HIRE_DATE DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "HIRE_DATE",
            "y_name": "SALARY",
            "x_data": [
                [
                    "1987-10-01",
                    "1987-09-30",
                    "1987-09-29",
                    "1987-09-28",
                    "1987-09-27",
                    "1987-09-26",
                    "1987-09-03"
                ]
            ],
            "y_data": [
                [
                    8300,
                    12000,
                    10000,
                    6500,
                    6000,
                    13000,
                    7000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají id mezi 100 a 200, mi ukaž trend vývoje platu v závislosti na hire_date pomocí čárového grafu, uspořádaného vzestupně podle osy x.",
            "Pro zaměstnance, kteří nepracují v odděleních s vedoucími, kteří mají id mezi 100 a 200, nakresli čárový graf o změně platu v průběhu hire_date do zaměstnání , zobraz vzestupně podle osy x.",
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají id mezi 100 a 200, čárový graf zobrazuje trend platu v závislosti na hire_date do zaměstnání, mohl bys osu x seřadit v pořadí vzestupně?",
            "Pro zaměstnance, kteří nepracují v odděleních s manažery, kteří mají id mezi 100 a 200, vizualizuj čárový graf o změně platu v průběhu hire_date, a zobraz jej vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "countries",
            "locations"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1702@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY max_salary - min_salary ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT JOB_TITLE , max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000 ORDER BY max_salary - min_salary ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "JOB_TITLE",
            "y_name": "max_salary - min_salary",
            "x_data": [
                [
                    "Marketing Manager",
                    "Sales Representative",
                    "Purchasing Manager",
                    "Accounting Manager",
                    "Finance Manager"
                ]
            ],
            "y_data": [
                [
                    6000,
                    6000,
                    7000,
                    7800,
                    7800
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké jsou názvy pracovních pozic a rozpětí platů u pracovních pozic s maximálním platem mezi 12000 a 18000? Vyznač je jako sloupcový graf, osu y seřaď vzestupně."
        ],
        "irrelevant_tables": [
            "job_history",
            "regions"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1703@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary > ( SELECT max(salary) FROM employees WHERE job_id = 'PU_MAN' ) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT JOB_ID , COUNT(JOB_ID) FROM employees WHERE salary > ( SELECT max(salary) FROM employees WHERE job_id = 'PU_MAN' ) GROUP BY JOB_ID ORDER BY COUNT(JOB_ID) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "JOB_ID",
            "y_name": "COUNT(JOB_ID)",
            "x_data": [
                [
                    "SA_MAN",
                    "AD_VP",
                    "SA_REP",
                    "MK_MAN",
                    "FI_MGR",
                    "AD_PRES",
                    "AC_MGR"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY JOB_ID",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypočítej počet jednotlivých typů ID pracovních míst pro zaměstnance, kteří vydělávají více než zaměstnanec s nejvyšším příjmem s titulem PU_MAN, pomocí sloupcového grafu a zobraz pomocí počtu ID pracovních míst sestupně."
        ],
        "irrelevant_tables": [
            "locations",
            "jobs"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1746@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history) ORDER BY HIRE_DATE ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "HIRE_DATE",
            "y_name": "SALARY",
            "x_data": [
                [
                    "1987-06-17",
                    "1987-06-20",
                    "1987-06-21",
                    "1987-06-22",
                    "1987-06-23",
                    "1987-06-24",
                    "1987-06-25",
                    "1987-06-26",
                    "1987-06-27",
                    "1987-06-28",
                    "1987-06-29",
                    "1987-06-30",
                    "1987-07-02",
                    "1987-07-03",
                    "1987-07-04",
                    "1987-07-05",
                    "1987-07-06",
                    "1987-07-07",
                    "1987-07-08",
                    "1987-07-10",
                    "1987-07-11",
                    "1987-07-12",
                    "1987-07-13",
                    "1987-07-14",
                    "1987-07-15",
                    "1987-07-16",
                    "1987-07-17",
                    "1987-07-18",
                    "1987-07-19",
                    "1987-07-20",
                    "1987-07-21",
                    "1987-07-22",
                    "1987-07-23",
                    "1987-07-24",
                    "1987-07-25",
                    "1987-07-26",
                    "1987-07-27",
                    "1987-07-28",
                    "1987-07-29",
                    "1987-07-30",
                    "1987-07-31",
                    "1987-08-01",
                    "1987-08-02",
                    "1987-08-03",
                    "1987-08-04",
                    "1987-08-05",
                    "1987-08-06",
                    "1987-08-07",
                    "1987-08-08",
                    "1987-08-09",
                    "1987-08-10",
                    "1987-08-11",
                    "1987-08-12",
                    "1987-08-13",
                    "1987-08-14",
                    "1987-08-15",
                    "1987-08-16",
                    "1987-08-17",
                    "1987-08-18",
                    "1987-08-19",
                    "1987-08-20",
                    "1987-08-21",
                    "1987-08-22",
                    "1987-08-23",
                    "1987-08-24",
                    "1987-08-25",
                    "1987-08-26",
                    "1987-08-27",
                    "1987-08-28",
                    "1987-08-29",
                    "1987-08-30",
                    "1987-08-31",
                    "1987-09-02",
                    "1987-09-03",
                    "1987-09-04",
                    "1987-09-05",
                    "1987-09-06",
                    "1987-09-07",
                    "1987-09-08",
                    "1987-09-09",
                    "1987-09-10",
                    "1987-09-11",
                    "1987-09-12",
                    "1987-09-13",
                    "1987-09-14",
                    "1987-09-15",
                    "1987-09-16",
                    "1987-09-17",
                    "1987-09-18",
                    "1987-09-19",
                    "1987-09-20",
                    "1987-09-21",
                    "1987-09-22",
                    "1987-09-23",
                    "1987-09-24",
                    "1987-09-27",
                    "1987-09-28",
                    "1987-09-29",
                    "1987-09-30",
                    "1987-10-01"
                ]
            ],
            "y_data": [
                [
                    24000,
                    9000,
                    6000,
                    4800,
                    4800,
                    4200,
                    12000,
                    9000,
                    8200,
                    7700,
                    7800,
                    6900,
                    3100,
                    2900,
                    2800,
                    2600,
                    2500,
                    8000,
                    8200,
                    6500,
                    5800,
                    3200,
                    2700,
                    2400,
                    2200,
                    3300,
                    2800,
                    2500,
                    2100,
                    3300,
                    2900,
                    2400,
                    2200,
                    3600,
                    3200,
                    2700,
                    2500,
                    3500,
                    3100,
                    2600,
                    2500,
                    14000,
                    13500,
                    12000,
                    11000,
                    10500,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10500,
                    9500,
                    7200,
                    6800,
                    6400,
                    6200,
                    11500,
                    10000,
                    9600,
                    7400,
                    7300,
                    6100,
                    11000,
                    8800,
                    8400,
                    7000,
                    6200,
                    3200,
                    3100,
                    2500,
                    2800,
                    4200,
                    4100,
                    3400,
                    3000,
                    3800,
                    3600,
                    2900,
                    2500,
                    4000,
                    3900,
                    3200,
                    2800,
                    3100,
                    3000,
                    2600,
                    2600,
                    6000,
                    6500,
                    10000,
                    12000,
                    8300
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro zaměstnance, kteří v minulosti neměli žádné zaměstnání, nakresli čárový graf o změně platu v průběhu hire_date, seřaď je podle X vzestupně.",
            "Pro zaměstnance, kteří v minulosti neměli žádné zaměstnání, vrať řádkový graf o změně platu v průběhu hire_date do zaměstnání, a chci je seřadit podle osy X vzestupně.",
            "Pro zaměstnance, kteří v minulosti neměli žádné zaměstnání, vizualizuj čárový graf o změně platu v průběhu hire_date, a seřaď jej vzestupně podle osy x, prosím.",
            "U těch zaměstnanců, kteří v minulosti neměli žádnou práci, mi ukaž změnu platu v průběhu hire_date v řádkovém grafu, mohl bys je seřadit X vzestupně?"
        ],
        "irrelevant_tables": [
            "locations",
            "departments"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1795@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT HIRE_DATE , COMMISSION_PCT FROM employees WHERE hire_date < '2002-06-21' ORDER BY HIRE_DATE DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "HIRE_DATE",
            "y_name": "COMMISSION_PCT",
            "x_data": [
                [
                    "1987-10-01",
                    "1987-09-30",
                    "1987-09-29",
                    "1987-09-28",
                    "1987-09-27",
                    "1987-09-26",
                    "1987-09-25",
                    "1987-09-24",
                    "1987-09-23",
                    "1987-09-22",
                    "1987-09-21",
                    "1987-09-20",
                    "1987-09-19",
                    "1987-09-18",
                    "1987-09-17",
                    "1987-09-16",
                    "1987-09-15",
                    "1987-09-14",
                    "1987-09-13",
                    "1987-09-12",
                    "1987-09-11",
                    "1987-09-10",
                    "1987-09-09",
                    "1987-09-08",
                    "1987-09-07",
                    "1987-09-06",
                    "1987-09-05",
                    "1987-09-04",
                    "1987-09-03",
                    "1987-09-02",
                    "1987-09-01",
                    "1987-08-31",
                    "1987-08-30",
                    "1987-08-29",
                    "1987-08-28",
                    "1987-08-27",
                    "1987-08-26",
                    "1987-08-25",
                    "1987-08-24",
                    "1987-08-23",
                    "1987-08-22",
                    "1987-08-21",
                    "1987-08-20",
                    "1987-08-19",
                    "1987-08-18",
                    "1987-08-17",
                    "1987-08-16",
                    "1987-08-15",
                    "1987-08-14",
                    "1987-08-13",
                    "1987-08-12",
                    "1987-08-11",
                    "1987-08-10",
                    "1987-08-09",
                    "1987-08-08",
                    "1987-08-07",
                    "1987-08-06",
                    "1987-08-05",
                    "1987-08-04",
                    "1987-08-03",
                    "1987-08-02",
                    "1987-08-01",
                    "1987-07-31",
                    "1987-07-30",
                    "1987-07-29",
                    "1987-07-28",
                    "1987-07-27",
                    "1987-07-26",
                    "1987-07-25",
                    "1987-07-24",
                    "1987-07-23",
                    "1987-07-22",
                    "1987-07-21",
                    "1987-07-20",
                    "1987-07-19",
                    "1987-07-18",
                    "1987-07-17",
                    "1987-07-16",
                    "1987-07-15",
                    "1987-07-14",
                    "1987-07-13",
                    "1987-07-12",
                    "1987-07-11",
                    "1987-07-10",
                    "1987-07-09",
                    "1987-07-08",
                    "1987-07-07",
                    "1987-07-06",
                    "1987-07-05",
                    "1987-07-04",
                    "1987-07-03",
                    "1987-07-02",
                    "1987-07-01",
                    "1987-06-30",
                    "1987-06-29",
                    "1987-06-28",
                    "1987-06-27",
                    "1987-06-26",
                    "1987-06-25",
                    "1987-06-24",
                    "1987-06-23",
                    "1987-06-22",
                    "1987-06-21",
                    "1987-06-20",
                    "1987-06-19",
                    "1987-06-18",
                    "1987-06-17"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.1,
                    0.15,
                    0.2,
                    0.2,
                    0.25,
                    0.3,
                    0.1,
                    0.15,
                    0.15,
                    0.2,
                    0.2,
                    0.25,
                    0.1,
                    0.1,
                    0.1,
                    0.1,
                    0.15,
                    0.25,
                    0.25,
                    0.3,
                    0.3,
                    0.35,
                    0.35,
                    0.35,
                    0.15,
                    0.2,
                    0.2,
                    0.25,
                    0.25,
                    0.3,
                    0.2,
                    0.3,
                    0.3,
                    0.3,
                    0.4,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro zaměstnance, kteří byli přijati před 21. 6. 2002, nakresli čárový graf o změně commission_pct v závislosti na hire_date, mohl bys je seřadit podle X vzestupně?",
            "Pro zaměstnance, kteří byli přijati před 21. 6. 2002, mi zobraz změnu commission_pct v závislosti na hire_date v čárovém grafu a seřaď jej vzestupně podle osy x.",
            "Pro zaměstnance, kteří byli přijati před 21. 6. 2002, zobraz čárový graf pro změnu commission_pct v závislosti na hire_date a chci je zobrazit vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "departments",
            "countries"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1802@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT FIRST_NAME , COUNT(FIRST_NAME) FROM employees WHERE first_name LIKE '%m' GROUP BY FIRST_NAME ORDER BY COUNT(FIRST_NAME) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "FIRST_NAME",
            "y_name": "COUNT(FIRST_NAME)",
            "x_data": [
                [
                    "William",
                    "Payam",
                    "Adam"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY FIRST_NAME",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "U zaměstnanců, jejichž křestní jméno končí na písmeno m, zobraz četnost křestního jména pomocí sloupcového grafu, a seřaď je podle osy y sestupně.",
            "U zaměstnanců s křestními jmény končícími na písmeno m seskup a spočítej křestní jména, abys mohl vizualizovat sloupcový graf, který zobrazí celkový počet od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [
            "jobs",
            "job_history"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1835@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY HIRE_DATE ASC"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "HIRE_DATE",
            "y_name": "SALARY",
            "x_data": [
                [
                    "1987-06-17",
                    "1987-06-18",
                    "1987-06-19",
                    "1987-06-20",
                    "1987-06-21",
                    "1987-06-22",
                    "1987-06-23",
                    "1987-06-24",
                    "1987-06-25",
                    "1987-06-26",
                    "1987-06-27",
                    "1987-06-30",
                    "1987-07-01",
                    "1987-07-02",
                    "1987-07-03",
                    "1987-07-04",
                    "1987-07-05",
                    "1987-07-06",
                    "1987-07-10",
                    "1987-07-11",
                    "1987-07-12",
                    "1987-07-13",
                    "1987-07-15",
                    "1987-07-16",
                    "1987-07-19",
                    "1987-07-20",
                    "1987-07-22",
                    "1987-07-23",
                    "1987-07-24",
                    "1987-07-25",
                    "1987-07-26",
                    "1987-07-27",
                    "1987-07-28",
                    "1987-07-29",
                    "1987-07-30",
                    "1987-07-31",
                    "1987-08-01",
                    "1987-08-02",
                    "1987-08-03",
                    "1987-08-04",
                    "1987-08-05",
                    "1987-08-06",
                    "1987-08-07",
                    "1987-08-08",
                    "1987-08-09",
                    "1987-08-10",
                    "1987-08-11",
                    "1987-08-12",
                    "1987-08-13",
                    "1987-08-14",
                    "1987-08-15",
                    "1987-08-16",
                    "1987-08-17",
                    "1987-08-18",
                    "1987-08-19",
                    "1987-08-21",
                    "1987-08-22",
                    "1987-08-24",
                    "1987-08-25",
                    "1987-08-26",
                    "1987-08-28",
                    "1987-08-29",
                    "1987-08-30",
                    "1987-08-31",
                    "1987-09-01",
                    "1987-09-02",
                    "1987-09-04",
                    "1987-09-05",
                    "1987-09-06",
                    "1987-09-08",
                    "1987-09-09",
                    "1987-09-10",
                    "1987-09-11",
                    "1987-09-12",
                    "1987-09-13",
                    "1987-09-14",
                    "1987-09-16",
                    "1987-09-17",
                    "1987-09-18",
                    "1987-09-20",
                    "1987-09-21",
                    "1987-09-22",
                    "1987-09-23",
                    "1987-09-24",
                    "1987-09-25",
                    "1987-09-27",
                    "1987-09-28",
                    "1987-09-30"
                ]
            ],
            "y_data": [
                [
                    24000,
                    17000,
                    17000,
                    9000,
                    6000,
                    4800,
                    4800,
                    4200,
                    12000,
                    9000,
                    8200,
                    6900,
                    11000,
                    3100,
                    2900,
                    2800,
                    2600,
                    2500,
                    6500,
                    5800,
                    3200,
                    2700,
                    2200,
                    3300,
                    2100,
                    3300,
                    2400,
                    2200,
                    3600,
                    3200,
                    2700,
                    2500,
                    3500,
                    3100,
                    2600,
                    2500,
                    14000,
                    13500,
                    12000,
                    11000,
                    10500,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10500,
                    9500,
                    6800,
                    6400,
                    11500,
                    10000,
                    9600,
                    7300,
                    6100,
                    11000,
                    8800,
                    8600,
                    8400,
                    6200,
                    3200,
                    3100,
                    2800,
                    4200,
                    4100,
                    3400,
                    3000,
                    3800,
                    3600,
                    2500,
                    4000,
                    3900,
                    2800,
                    3100,
                    3000,
                    2600,
                    2600,
                    4400,
                    6000,
                    6500,
                    12000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro zaměstnance, jejichž křestní jméno neobsahuje písmeno M, mi dej lineární graf, který zobrazí datum nástupu a odpovídající platy. Zobraz je vzestupně podle osy x, prosím.",
            "Pro zaměstnance bez písmene M v křestním jménu mi zadej řádkový graf, který zobrazí změnu platu v závislosti na hire_date pomocí řádkového grafu, a seřaď je podle HIRE_DATE vzestupně.",
            "Pro zaměstnance, jejichž křestní jméno neobsahuje písmeno M, vytvoř řádkový graf, který zobrazí datum nástupu do zaměstnání a odpovídající platy, a osu x seřaď vzestupně."
        ],
        "irrelevant_tables": [
            "departments",
            "regions"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1869@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT HIRE_DATE , SALARY FROM employees ORDER BY HIRE_DATE ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT HIRE_DATE , SALARY FROM employees ORDER BY HIRE_DATE ASC"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "HIRE_DATE",
            "y_name": "SALARY",
            "x_data": [
                [
                    "1987-06-17",
                    "1987-06-18",
                    "1987-06-19",
                    "1987-06-20",
                    "1987-06-21",
                    "1987-06-22",
                    "1987-06-23",
                    "1987-06-24",
                    "1987-06-25",
                    "1987-06-26",
                    "1987-06-27",
                    "1987-06-28",
                    "1987-06-29",
                    "1987-06-30",
                    "1987-07-01",
                    "1987-07-02",
                    "1987-07-03",
                    "1987-07-04",
                    "1987-07-05",
                    "1987-07-06",
                    "1987-07-07",
                    "1987-07-08",
                    "1987-07-09",
                    "1987-07-10",
                    "1987-07-11",
                    "1987-07-12",
                    "1987-07-13",
                    "1987-07-14",
                    "1987-07-15",
                    "1987-07-16",
                    "1987-07-17",
                    "1987-07-18",
                    "1987-07-19",
                    "1987-07-20",
                    "1987-07-21",
                    "1987-07-22",
                    "1987-07-23",
                    "1987-07-24",
                    "1987-07-25",
                    "1987-07-26",
                    "1987-07-27",
                    "1987-07-28",
                    "1987-07-29",
                    "1987-07-30",
                    "1987-07-31",
                    "1987-08-01",
                    "1987-08-02",
                    "1987-08-03",
                    "1987-08-04",
                    "1987-08-05",
                    "1987-08-06",
                    "1987-08-07",
                    "1987-08-08",
                    "1987-08-09",
                    "1987-08-10",
                    "1987-08-11",
                    "1987-08-12",
                    "1987-08-13",
                    "1987-08-14",
                    "1987-08-15",
                    "1987-08-16",
                    "1987-08-17",
                    "1987-08-18",
                    "1987-08-19",
                    "1987-08-20",
                    "1987-08-21",
                    "1987-08-22",
                    "1987-08-23",
                    "1987-08-24",
                    "1987-08-25",
                    "1987-08-26",
                    "1987-08-27",
                    "1987-08-28",
                    "1987-08-29",
                    "1987-08-30",
                    "1987-08-31",
                    "1987-09-01",
                    "1987-09-02",
                    "1987-09-03",
                    "1987-09-04",
                    "1987-09-05",
                    "1987-09-06",
                    "1987-09-07",
                    "1987-09-08",
                    "1987-09-09",
                    "1987-09-10",
                    "1987-09-11",
                    "1987-09-12",
                    "1987-09-13",
                    "1987-09-14",
                    "1987-09-15",
                    "1987-09-16",
                    "1987-09-17",
                    "1987-09-18",
                    "1987-09-19",
                    "1987-09-20",
                    "1987-09-21",
                    "1987-09-22",
                    "1987-09-23",
                    "1987-09-24",
                    "1987-09-25",
                    "1987-09-26",
                    "1987-09-27",
                    "1987-09-28",
                    "1987-09-29",
                    "1987-09-30",
                    "1987-10-01"
                ]
            ],
            "y_data": [
                [
                    24000,
                    17000,
                    17000,
                    9000,
                    6000,
                    4800,
                    4800,
                    4200,
                    12000,
                    9000,
                    8200,
                    7700,
                    7800,
                    6900,
                    11000,
                    3100,
                    2900,
                    2800,
                    2600,
                    2500,
                    8000,
                    8200,
                    7900,
                    6500,
                    5800,
                    3200,
                    2700,
                    2400,
                    2200,
                    3300,
                    2800,
                    2500,
                    2100,
                    3300,
                    2900,
                    2400,
                    2200,
                    3600,
                    3200,
                    2700,
                    2500,
                    3500,
                    3100,
                    2600,
                    2500,
                    14000,
                    13500,
                    12000,
                    11000,
                    10500,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10000,
                    9500,
                    9000,
                    8000,
                    7500,
                    7000,
                    10500,
                    9500,
                    7200,
                    6800,
                    6400,
                    6200,
                    11500,
                    10000,
                    9600,
                    7400,
                    7300,
                    6100,
                    11000,
                    8800,
                    8600,
                    8400,
                    7000,
                    6200,
                    3200,
                    3100,
                    2500,
                    2800,
                    4200,
                    4100,
                    3400,
                    3000,
                    3800,
                    3600,
                    2900,
                    2500,
                    4000,
                    3900,
                    3200,
                    2800,
                    3100,
                    3000,
                    2600,
                    2600,
                    4400,
                    13000,
                    6000,
                    6500,
                    10000,
                    12000,
                    8300
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Prosím, uveď mzdu každého hire_date do zaměstnání pomocí čárového grafu, chci vypsat osu x vzestupně.",
            "Čárový graf, osa X je datum nástupu zaměstnanců a osa Y je odpovídající plat a osa x je řazena vzestupně, prosím.",
            "Zobraz trend změny platu v závislosti na hire_date do zaměstnání pomocí čárového grafu a chci uspořádat osu x vzestupně."
        ],
        "irrelevant_tables": [
            "regions",
            "departments"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1956@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE ORDER BY COUNT(JOB_TITLE) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT JOB_TITLE , COUNT(JOB_TITLE) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80 GROUP BY JOB_TITLE ORDER BY COUNT(JOB_TITLE) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "JOB_TITLE",
            "y_name": "COUNT(JOB_TITLE)",
            "x_data": [
                [
                    "Sales Representative",
                    "Sales Manager"
                ]
            ],
            "y_data": [
                [
                    29,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY JOB_TITLE",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Prosím, sděl mi, kolik zaměstnanců je v oddělení 80 na jednotlivých typech pracovních pozic pomocí sloupcového grafu a zobraz je sestupně na ose Y.",
            "Porovnej celkový počet různých názvů pracovních míst pro všechna tato pracovní místa v oddělení 80 pomocí sloupcového grafu, osu y zobraz v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "regions",
            "departments"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1963@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DEPARTMENT_NAME , COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "hr_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "DEPARTMENT_NAME",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Shipping",
                    "Sales",
                    "Purchasing",
                    "Finance",
                    "IT",
                    "Executive",
                    "Marketing",
                    "Accounting",
                    "Public Relations",
                    "Human Resources",
                    "Administration"
                ]
            ],
            "y_data": [
                [
                    45,
                    34,
                    6,
                    6,
                    5,
                    3,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Uveď názvy jednotlivých oddělení a počet zaměstnanců v každém z nich. Zakresli je do sloupcového grafu a zobraz je na ose Y sestupně.",
            "Uveď název jednotlivých oddělení a počet zaměstnanců v každém z nich ve sloupcovém grafu a mohl bys je seřadit podle osy y od nejvyššího po nejnižší?"
        ],
        "irrelevant_tables": [
            "countries",
            "regions"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2726@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "scientist_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Juicy: Extracting Apple Juice with Pectinase",
                    "Build Your Own Telescope",
                    "Aerodynamics and Ice Hockey",
                    "A Silver-Cleaning Battery"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké jsou názvy projektů, které vyžadují více než 300 hodin, a kolik vědců je k nim přiřazeno? Osu x seřaď sestupně. Ukaž ve sloupcovém grafu"
        ],
        "irrelevant_tables": [
            "Scientists"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2733@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Name , COUNT(T2.Name) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%' GROUP BY T2.Name ORDER BY COUNT(T2.Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "scientist_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Aerodynamics and Gas Mileage",
                    "Build Your Own Telescope"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti název projektu, ke kterému je přiřazen vědec, jehož jméno obsahuje \"Smith\", a spočítej je pomocí sloupcového grafu. Chci je seřadit podle osy y vzestupně.",
            "Sloupcový graf pro zjištění počtu názvů projektů, ke kterým je přiřazen vědec, jehož jméno obsahuje \"Smith“. Chci je seřadit vzestupně podle celkového počtu.",
            "Jak se jmenuje projekt, ke kterému je přiřazen vědec, jehož jméno obsahuje \"Smith“? Spočítej je pomocí sloupcového grafu, chci je seřadit vzestupně podle celkového počtu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "733@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "PP",
                    "BK",
                    "PPT",
                    "AD",
                    "CV"
                ]
            ],
            "y_data": [
                [
                    6,
                    6,
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf zobrazující počet šablon pro každý kód typu šablony a mohl bys jej zobrazit sestupně podle celkového počtu?",
            "Kolik šablon existuje pro každý kód typu šablony? Zobraz sloupcový graf, seřaď jej podle počtu kódů typu šablony sestupně."
        ],
        "irrelevant_tables": [
            "Paragraphs",
            "Ref_Template_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "748@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Paragraph_Text , COUNT(Paragraph_Text) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\" GROUP BY Paragraph_Text ORDER BY COUNT(Paragraph_Text) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Paragraph_Text",
            "y_name": "COUNT(Paragraph_Text)",
            "x_data": [
                [
                    "Korea",
                    "Ukraine"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Paragraph_Text",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro počet textů odstavců dokumentu s názvem \"Hodnocení zákazníků\" a zobrazení Y v sestupném pořadí.",
            "Jaké jsou texty odstavců pro dokument s názvem \"Hodnocení zákazníků\" a spočítej je pomocí sloupcového grafu a seřaď podle celkového počtu od nejvyššího po nejnižší.",
            "Zobraz všechny texty odstavců dokumentu \"Hodnocení zákazníků\" a spočítej je pomocí sloupcového grafu, mohl bys je zobrazit sestupně podle osy y?"
        ],
        "irrelevant_tables": [
            "Ref_Template_Types",
            "Templates"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "753@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , count(*) FROM Templates GROUP BY template_type_code ORDER BY Template_Type_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PPT",
                    "PP",
                    "CV",
                    "BK",
                    "AD"
                ]
            ],
            "y_data": [
                [
                    3,
                    6,
                    2,
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf pro to, jaké jsou různé kódy typů šablon a kolik šablon odpovídá každému? Mohl bys mi je zobrazit sestupně podle osy x?",
            "Zobraz všechny kódy typů šablon a počet šablon pro každou z nich. Vizualizuj pomocí sloupcového grafu, osa X seřazena sestupně.",
            "Vrať sloupcový graf s různými kódy typů šablon a s počtem šablon, které jim odpovídají. Seřaď jej sestupně podle kódu Template_Type_Code."
        ],
        "irrelevant_tables": [
            "Ref_Template_Types",
            "Paragraphs"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "754@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Template_Type_Code , COUNT(Template_Type_Code) FROM Templates WHERE version_number > 5 GROUP BY Template_Type_Code ORDER BY COUNT(Template_Type_Code) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Template_Type_Code",
            "y_name": "COUNT(Template_Type_Code)",
            "x_data": [
                [
                    "CV",
                    "PPT",
                    "BK",
                    "PP",
                    "AD"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Template_Type_Code",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf zobrazující počet šablon s číslem verze větším než 5 pro každý kód typu šablony a seřaď osu y vzestupně.",
            "Kolik šablon s číslem verze novějším než 5 existuje pro každý kód typu šablony? Ukaž mi sloupcový graf, chci ho seřadit vzestupně podle Y."
        ],
        "irrelevant_tables": [
            "Documents",
            "Paragraphs"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "763@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Description , COUNT(Document_Description) FROM Documents GROUP BY Document_Description ORDER BY COUNT(Document_Description) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Template_Mgt",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Description",
            "y_name": "COUNT(Document_Description)",
            "x_data": [
                [
                    "b",
                    "f",
                    "k",
                    "n",
                    "r",
                    "u",
                    "z",
                    "h",
                    "w",
                    "y"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Document_Description",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - popis dokumentu, osa y - kolik popisu dokumentu. Zobraz je vzestupně podle celkového počtu.",
            "Vypiš počet dokumentů pro každý popis dokumentu ve sloupcovém grafu, zobraz počet popisů dokumentů vzestupně.",
            "Kolik dokumentů existuje pro každý popis dokumentu? Ukaž mi sloupcový graf, uveď celkový počet ve vzestupném pořadí."
        ],
        "irrelevant_tables": [
            "Paragraphs",
            "Templates"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2625@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Owner , sum(Rating_in_percent) FROM channel GROUP BY OWNER ORDER BY Owner ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "program_share",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Owner",
            "y_name": "sum(Rating_in_percent)",
            "x_data": [
                [
                    "Anhui Television",
                    "CCTV",
                    "HBS",
                    "Shandong Television"
                ]
            ],
            "y_data": [
                [
                    0.2,
                    2.43,
                    0.53,
                    0.19
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké je celkové hodnocení kanálu pro každého majitele kanálu? Vypiš je jako sloupcový graf, osa x seřazená vzestupně.",
            "Nakresli sloupcový graf závislosti vlastníka na celkovém počtu hodnocení v procentech a zobraz jej vzestupně podle X.",
            "Ukaž mi sloupcový graf pro celkové hodnocení kanálu pro každého majitele kanálu a zobraz ho vzestupně podle X.",
            "Zjisti celkový poměr hodnocení pro každého vlastníka kanálu. Vizualizuj pomocí sloupcového grafu. Mohl bys prosím zobrazit osu X vzestupně?"
        ],
        "irrelevant_tables": [
            "broadcast",
            "program"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "609@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY building ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' GROUP BY building ORDER BY building ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Chandler",
                    "Fairchild",
                    "Lambeau",
                    "Lamberton",
                    "Main",
                    "Nassau",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zjisti počet kurzů nabízených katedrou psychologie v jednotlivých budovách a seřaď je podle X.",
            "Kolik kurzů má katedra psychologie v jednotlivých budovách? Nakresli sloupcový graf, zobraz jej vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "prereq",
            "instructor"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "619@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , min(salary) FROM instructor GROUP BY dept_name ORDER BY dept_name ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "min(salary)",
            "x_data": [
                [
                    "Accounting",
                    "Astronomy",
                    "Athletics",
                    "Biology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Elec. Eng.",
                    "English",
                    "Finance",
                    "Geology",
                    "Languages",
                    "Marketing",
                    "Mech. Eng.",
                    "Physics",
                    "Pol. Sci.",
                    "Psychology",
                    "Statistics"
                ]
            ],
            "y_data": [
                [
                    32241.56,
                    79070.08,
                    50482.03,
                    45538.32,
                    80797.83,
                    79866.95,
                    34272.67,
                    35023.18,
                    105311.38,
                    99382.59,
                    32570.5,
                    43770.36,
                    51647.57,
                    108011.81,
                    87549.8,
                    59706.49,
                    45310.53
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf minimálního platu z každého názvu oddělení, seřaď název oddělení vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "teaches",
            "department"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "620@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , count(*) FROM classroom WHERE capacity > 50 GROUP BY building ORDER BY building ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Garfield",
                    "Gates",
                    "Lambeau",
                    "Nassau",
                    "Painter",
                    "Rathbone",
                    "Saucon",
                    "Stabler",
                    "Taylor",
                    "Whitman"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik místností v jednotlivých budovách má kapacitu vyšší než 50? Vizualizuj pomocí sloupcového grafu, vzestupně seřazeného podle X."
        ],
        "irrelevant_tables": [
            "teaches",
            "section"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "621@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY sum(credits) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , sum(credits) FROM course GROUP BY dept_name ORDER BY sum(credits) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "sum(credits)",
            "x_data": [
                [
                    "Marketing",
                    "Statistics",
                    "Biology",
                    "Pol. Sci.",
                    "Elec. Eng.",
                    "English",
                    "History",
                    "Athletics",
                    "Geology",
                    "Civil Eng.",
                    "Math",
                    "Astronomy",
                    "Comp. Sci.",
                    "Languages",
                    "Physics",
                    "Accounting",
                    "Mech. Eng.",
                    "Psychology",
                    "Finance",
                    "Cybernetics"
                ]
            ],
            "y_data": [
                [
                    20,
                    21,
                    23,
                    23,
                    28,
                    28,
                    29,
                    30,
                    33,
                    34,
                    34,
                    37,
                    37,
                    37,
                    38,
                    40,
                    40,
                    44,
                    49,
                    67
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf o tom, kolik kreditů celkem nabízejí jednotlivé katedry, seřaď je podle celkového počtu kreditů od nejnižšího po nejvyšší.",
            "Nakresli sloupcový graf o tom, kolik kreditů celkem nabízejí jednotlivé katedry, a seřaď je podle celkového počtu kreditů od nejnižšího po nejvyšší.",
            "Sloupcový graf celkového počtu kreditů z každého názvu katedry. Seřaď jej vzestupně podle celkového počtu kreditů.",
            "Kolik kreditů celkem nabízejí jednotlivá oddělení? Zobraz sloupcový graf, chci zobrazit osu Y vzestupně.",
            "Zjisti celkový počet kreditů za předměty poskytované různými katedrami. Vypiš je do sloupcového grafu a zobraz Y ve vzestupném pořadí."
        ],
        "irrelevant_tables": [
            "instructor",
            "section"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "624@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY avg(capacity) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , avg(capacity) FROM classroom GROUP BY building ORDER BY avg(capacity) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "avg(capacity)",
            "x_data": [
                [
                    "Lamberton",
                    "Chandler",
                    "Power",
                    "Bronfman",
                    "Drown",
                    "Main",
                    "Fairchild",
                    "Polya",
                    "Grace",
                    "Alumni",
                    "Gates",
                    "Saucon",
                    "Lambeau",
                    "Garfield",
                    "Rathbone",
                    "Whitman",
                    "Nassau",
                    "Taylor",
                    "Painter",
                    "Stabler"
                ]
            ],
            "y_data": [
                [
                    10,
                    10.5,
                    11,
                    12,
                    18,
                    26,
                    27,
                    28,
                    34,
                    36.5,
                    37.5,
                    49.33333333333334,
                    51,
                    59,
                    60,
                    76,
                    92,
                    93,
                    97,
                    113
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaká je průměrná kapacita pokojů v jednotlivých budovách? Nakresli sloupcový graf a seřaď jej vzestupně podle Y.",
            "Zjisti průměrnou kapacitu pokojů v každé budově pomocí sloupcového grafu a seřaď je vzestupně podle osy y.",
            "Sloupcový graf: osa x - budova, osa y - průměrná kapacita. Seřaď jej vzestupně podle osy y, prosím."
        ],
        "irrelevant_tables": [
            "course",
            "teaches"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "627@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY AVG(salary) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(salary) FROM instructor GROUP BY dept_name ORDER BY AVG(salary) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(salary)",
            "x_data": [
                [
                    "Physics",
                    "Finance",
                    "Pol. Sci.",
                    "Geology",
                    "Comp. Sci.",
                    "Cybernetics",
                    "Marketing",
                    "Mech. Eng.",
                    "Astronomy",
                    "Athletics",
                    "Elec. Eng.",
                    "English",
                    "Statistics",
                    "Biology",
                    "Psychology",
                    "Languages",
                    "Accounting"
                ]
            ],
            "y_data": [
                [
                    114576.9,
                    105311.38,
                    100053.07333333332,
                    99382.59,
                    98133.47,
                    96346.5675,
                    84097.4375,
                    79813.02,
                    79070.08,
                    77098.198,
                    74162.73999999999,
                    72089.04999999999,
                    67795.44166666667,
                    61287.25,
                    61143.05,
                    57421.85666666667,
                    48716.5925
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf průměrného platu z každého oddělení a mohl bys jej seřadit podle osy Y od nejvyššího po nejnižší?"
        ],
        "irrelevant_tables": [
            "classroom",
            "course"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "630@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T3.id) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.dept_name , count(DISTINCT T3.id) FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name ORDER BY count(DISTINCT T3.id) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(DISTINCT T3.id)",
            "x_data": [
                [
                    "Statistics",
                    "Athletics",
                    "Marketing",
                    "English",
                    "Elec. Eng.",
                    "Cybernetics",
                    "Accounting",
                    "Pol. Sci.",
                    "Languages",
                    "Psychology",
                    "Physics",
                    "Mech. Eng.",
                    "Comp. Sci.",
                    "Biology",
                    "Geology",
                    "Finance",
                    "Astronomy"
                ]
            ],
            "y_data": [
                [
                    6,
                    5,
                    4,
                    4,
                    4,
                    4,
                    4,
                    3,
                    3,
                    2,
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti celkový počet instruktorů pro jednotlivé katedry pomocí sloupcového grafu a mohl bys je seřadit podle osy y sestupně?",
            "Kolik instruktorů je na jednotlivých odděleních? Ukaž mi sloupcový graf a na ose y zobraz hodnoty od nejvyšší po nejnižší."
        ],
        "irrelevant_tables": [
            "teaches",
            "course"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "633@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY dept_name ORDER BY AVG(credits) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "Pol. Sci.",
                    "Comp. Sci.",
                    "Astronomy",
                    "Finance",
                    "Physics",
                    "Civil Eng.",
                    "English",
                    "Elec. Eng.",
                    "Biology",
                    "Math",
                    "Cybernetics",
                    "Athletics",
                    "Statistics",
                    "Mech. Eng.",
                    "Marketing",
                    "Geology",
                    "Psychology",
                    "History",
                    "Accounting"
                ]
            ],
            "y_data": [
                [
                    4.0,
                    4.0,
                    4.0,
                    3.8,
                    3.75,
                    3.5714285714285716,
                    3.5,
                    3.5,
                    3.4,
                    3.3333333333333335,
                    3.3333333333333335,
                    3.3333333333333335,
                    3.25,
                    3.2222222222222223,
                    3.2,
                    3.2,
                    3.111111111111111,
                    3.0,
                    3.0
                ]
            ],
            "classify": [],
            "describe": "GROUP BY dept_name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zjisti průměrný počet kreditů předmětů, které mají více než jednu prerekvizitu pro každou katedru, a seřaď je sestupně podle Y, prosím."
        ],
        "irrelevant_tables": [
            "teaches",
            "department"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "636@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY AVG(credits) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(credits) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY title ORDER BY AVG(credits) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(credits)",
            "x_data": [
                [
                    "World History",
                    "Groups and Rings",
                    "Game Programming",
                    "Embedded Systems",
                    "International Practicum",
                    "Rock and Roll",
                    "Ponzi Schemes",
                    "Operating Systems",
                    "Immunology",
                    "Graph Theory",
                    "Fiction Writing",
                    "Electron Microscopy",
                    "Elastic Structures",
                    "Differential Geometry",
                    "Cat Herding",
                    "Aquatic Chemistry"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    4,
                    4,
                    3.5,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti průměrný počet kreditů předmětů, které mají více než jednu podmínku pro každý titul pomocí sloupcového grafu, chci je seřadit sestupně podle osy y."
        ],
        "irrelevant_tables": [
            "advisor",
            "teaches"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "640@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(Distinct course_id) FROM SECTION GROUP BY year ORDER BY year ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , count(Distinct course_id) FROM SECTION GROUP BY year ORDER BY year ASC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(Distinct course_id)",
            "x_data": [
                [
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010"
                ]
            ],
            "y_data": [
                [
                    5,
                    13,
                    12,
                    7,
                    8,
                    13,
                    12,
                    9,
                    9,
                    11
                ]
            ],
            "classify": [],
            "describe": "GROUP BY year",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet různých kurzů poskytovaných v jednotlivých letech pomocí čárového grafu a seřaď je podle ročníků.",
            "Kolik různých kurzů je v každém roce poskytováno? Vizualizuj čárový graf a osu x chci vypsat vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "takes",
            "student"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "642@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION ORDER BY year DESC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION ORDER BY year DESC BIN year BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2010",
                    "2009",
                    "2008",
                    "2007",
                    "2006",
                    "2005",
                    "2004",
                    "2003",
                    "2002",
                    "2001"
                ]
            ],
            "y_data": [
                [
                    11,
                    9,
                    10,
                    12,
                    13,
                    8,
                    7,
                    12,
                    13,
                    5
                ]
            ],
            "classify": [],
            "describe": "BIN year BY YEAR",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vykresli rok počítáním celkového počtu jako trendovou linii. Všimni si, že rozdělujeme rok a zobrazení osy x sestupně prosím.",
            "Zjisti počet kurzů poskytovaných v jednotlivých letech pomocí lineárního grafu a zobraz je podle roku sestupně.",
            "Kolik kurzů se poskytuje v každém roce? Vizualizuj pomocí čárového grafu, seřazeného sestupně podle osy x."
        ],
        "irrelevant_tables": [
            "instructor",
            "department"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "647@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ,  year ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ,  year ORDER BY year DESC"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2010",
                    "2009",
                    "2008",
                    "2007",
                    "2006",
                    "2005",
                    "2004",
                    "2003",
                    "2002",
                    "2001"
                ]
            ],
            "y_data": [
                [
                    5,
                    7,
                    1,
                    6,
                    8,
                    4,
                    3,
                    6,
                    9,
                    2
                ],
                [
                    6,
                    2,
                    9,
                    6,
                    5,
                    4,
                    4,
                    6,
                    4,
                    3
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, GROUP BY year",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik kurzů se poskytuje v každém roce? Vizualizuj pomocí skupinového čárového grafu seskupeného podle semestrů. Mohl bys uvést osu x vzestupně?"
        ],
        "irrelevant_tables": [
            "course",
            "prereq"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "648@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year ASC",
                "binning": "BIN year BY YEAR"
            },
            "VQL": "Visualize LINE SELECT year , count(*) FROM SECTION GROUP BY semester ORDER BY year ASC BIN year BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(*)",
            "x_data": [
                [
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010"
                ]
            ],
            "y_data": [
                [
                    2,
                    9,
                    6,
                    3,
                    4,
                    8,
                    6,
                    1,
                    7,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    4,
                    4,
                    5,
                    6,
                    9,
                    2,
                    6
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "GROUP BY semester, BIN year BY YEAR",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet kurzů poskytovaných v jednotlivých ročnících pomocí skupinového lineárního grafu, který se seskupuje podle semestrů, a uveď ročník v pořadí vzestupně.",
            "Kolik kurzů je poskytováno v jednotlivých ročnících? Rozděl je podle ročníků a vytvořit spojnicový graf seskupený podle semestrů a seřaď je vzestupně podle osy X."
        ],
        "irrelevant_tables": [
            "instructor",
            "prereq"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "652@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY name ORDER BY name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Ullman ",
                    "Mingoz",
                    "Mahmoud",
                    "Jaekel",
                    "Dale",
                    "DAgostino",
                    "Bietzk"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš počet kurzů v roce 2008 pro každého instruktora do sloupcového grafu a seřaď X sestupně."
        ],
        "irrelevant_tables": [
            "section",
            "time_slot"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "653@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY title DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 GROUP BY title ORDER BY title DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "World History",
                    "Transaction Processing",
                    "Surfing",
                    "Race Car Driving",
                    "Networking",
                    "Marine Mammals",
                    "Embedded Systems",
                    "Elastic Structures",
                    "Animal Behavior"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš počet instruktorů pro jednotlivé kurzy v roce 2008 pomocí sloupcového grafu a seřaď je podle osy X sestupně."
        ],
        "irrelevant_tables": [
            "classroom",
            "prereq"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "654@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , count(*) FROM student GROUP BY dept_name ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Statistics",
                    "Psychology",
                    "Pol. Sci.",
                    "Physics",
                    "Mech. Eng.",
                    "Math",
                    "Marketing",
                    "Languages",
                    "History",
                    "Geology",
                    "Finance",
                    "English",
                    "Elec. Eng.",
                    "Cybernetics",
                    "Comp. Sci.",
                    "Civil Eng.",
                    "Biology",
                    "Athletics",
                    "Astronomy",
                    "Accounting"
                ]
            ],
            "y_data": [
                [
                    85,
                    100,
                    109,
                    96,
                    105,
                    91,
                    85,
                    119,
                    117,
                    92,
                    97,
                    95,
                    98,
                    86,
                    108,
                    120,
                    100,
                    92,
                    106,
                    99
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti celkový počet studentů na jednotlivých katedrách? Zobraz sloupcový graf a seřaď osu x sestupně.",
            "Kolik studentů je na jednotlivých katedrách? Zakresli je do sloupcového grafu, osu x seřaď sestupně.",
            "Vizualizuj sloupcový graf, kolik studentů je na jednotlivých katedrách, a zobraz jej sestupně podle jmen.",
            "Udělej mi sloupcový graf pro celkový počet jednotlivých názvů oddělení a seřaď osu x sestupně."
        ],
        "irrelevant_tables": [
            "takes",
            "time_slot"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "655@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dept_name , budget FROM department WHERE budget > (SELECT avg(budget) FROM department) ORDER BY dept_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dept_name",
            "y_name": "budget",
            "x_data": [
                [
                    "Psychology",
                    "Pol. Sci.",
                    "Physics",
                    "Math",
                    "Languages",
                    "History",
                    "Finance",
                    "English",
                    "Cybernetics",
                    "Biology",
                    "Athletics",
                    "Astronomy"
                ]
            ],
            "y_data": [
                [
                    848175.04,
                    573745.09,
                    942162.76,
                    777605.11,
                    601283.6,
                    699140.86,
                    866831.75,
                    611042.66,
                    794541.46,
                    647610.55,
                    734550.7,
                    617253.94
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti názvy a rozpočty oddělení, jejichž rozpočty jsou vyšší než průměrný rozpočet. Vizualizuj pomocí sloupcového grafu a zobraz názvy v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "instructor",
            "teaches"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "657@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY COUNT(building) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT building , COUNT(building) FROM department WHERE budget > (SELECT avg(budget) FROM department) GROUP BY building ORDER BY COUNT(building) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "building",
            "y_name": "COUNT(building)",
            "x_data": [
                [
                    "Brodhead",
                    "Bronfman",
                    "Linderman",
                    "Mercer",
                    "Palmer",
                    "Thompson",
                    "Whitman",
                    "Wrigley",
                    "Candlestick",
                    "Taylor"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY building",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik je oddělení, jejichž rozpočet je vyšší než průměrný rozpočet v každé budově? Ukaž mi sloupcový graf, seřaď jej podle celkového počtu vzestupně.",
            "Uveď počet oddělení s vyšším než průměrným rozpočtem v každé budově pomocí sloupcového grafu a seřaď počet budov od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "teaches",
            "advisor"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "713@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "course_teach",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Anne Walker",
                    "Vicente Carretero",
                    "Lucy Wong",
                    "Kearsley Brown",
                    "Gustaaf Deloor"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz jména učitelů a počet předmětů, které vyučují. Vizualizuj je pomocí sloupcového grafu, chci je seřadit sestupně podle osy y.",
            "Jak se jmenují učitelé a kolik předmětů vyučují? Zakresli je do sloupcového grafu, seřaď je podle osy Y od nejvyššího po nejnižší.",
            "Zobraz jména učitelů a počet kurzů, které vyučují, pomocí sloupcového grafu a seřaď je podle osy Y od nejvyššího po nejnižší.",
            "Ukaž mi sloupcový graf, kde jsou uvedena jména učitelů a kolik předmětů vyučují. Mohl bys zobrazit osu Y v sestupném pořadí?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "715@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY COUNT(Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY COUNT(Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "course_teach",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Anne Walker",
                    "Vicente Carretero",
                    "Lucy Wong",
                    "Kearsley Brown",
                    "Gustaaf Deloor"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet předmětů, které vyučují jednotliví učitelé, ve sloupcovém grafu, chci vypsat celkový počet v sestupném pořadí.",
            "Jaký je počet kurzů, které každý učitel vyučuje? Vizualizuj pomocí sloupcového grafu a chci vypsat celkový počet v sestupném pořadí."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "719@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID GROUP BY Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "course_teach",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Vicente Carretero",
                    "Lucy Wong",
                    "Kearsley Brown",
                    "Gustaaf Deloor",
                    "Anne Walker"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet kurzů, které každý učitel vyučuje, ve sloupcovém grafu, seřaď jméno v sestupném pořadí."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "380@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , AVG(Height) FROM people GROUP BY Sex ORDER BY Sex ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , AVG(Height) FROM people GROUP BY Sex ORDER BY Sex ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "AVG(Height)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    197.5,
                    195.14285714285714
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Sex",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o rozložení pohlaví a průměru výšky. Seskup je podle atributu pohlaví, zobraz vzestupně podle osy X.",
            "Vizualizuj sloupcový graf o rozložení pohlaví a průměru výšky. Seskup podle atributu Pohlaví, seřaď je vzestupně podle X.",
            "Nakresli sloupcový graf závislosti pohlaví na průměrné výšce a zobraz jej vzestupně podle osy X.",
            "Vrať sloupcový graf o rozložení Pohlaví a průměru výšky. Seskup je podle atributu pohlaví, zobraz vzestupně podle pohlaví, prosím.",
            "Ukaž mi rozložení pohlaví a průměrnou výšku, a seskup je podle atributu pohlaví do sloupcového grafu a ukaž vzestupně podle pohlaví, prosím."
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "383@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , AVG(Weight) FROM people GROUP BY Sex ORDER BY Sex ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "AVG(Weight)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    92,
                    86.71428571428571
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Sex",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi porovnání o průměru hmotnosti přes pohlaví. Seskup podle atributu pohlaví sloupcovým grafem, osu X chci seřadit vzestupně.",
            "Vrať sloupcový graf o rozložení pohlaví a průměru hmotnosti. Seskup je podle atributu pohlaví, zobraz jména vzestupně.",
            "Sloupcový graf znázorňuje rozložení pohlaví a průměrnou hmotnost, a je seskupen podle atributu pohlaví, a mohl bys je zobrazit vzestupně podle osy X?"
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "394@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Height FROM people ORDER BY Height DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Height FROM people ORDER BY Height DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Height",
            "x_data": [
                [
                    "Laurent Capet",
                    "St\u00e9phane Antiga",
                    "Dominique Daquin",
                    "Vincent Montm\u00e9at",
                    "Guillaume Samica",
                    "Frantz Granvorka",
                    "Philippe Bar\u00e7a-Cysique",
                    "Lo\u00efc De Kergret",
                    "Hubert Henno"
                ]
            ],
            "y_data": [
                [
                    202,
                    200,
                    197,
                    196,
                    196,
                    195,
                    194,
                    193,
                    188
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Udělej mi srovnání výšky nad jménem sloupcovým grafem, a mohl bys seřadit osu y v sestupném pořadí, prosím?",
            "Zjisti název a výška, vizualizuj je pomocí sloupcového grafu a seřaď je podle osy y sestupně.",
            "Sloupcový graf zobrazuje rozložení jména a výšky, a já jej chci zobrazit podle osy y sestupně.",
            "Nakresli sloupcový graf závislosti jména na výšce, seřazený podle osy y sestupně.",
            "Nakresli sloupcový graf o rozložení jména a výšky, na ose y je seřaď sestupně.",
            "Vrať sloupcový graf o rozložení položek jméno a výška, a zobraz osu Y v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "395@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Weight FROM people ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Weight FROM people ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Weight",
            "x_data": [
                [
                    "Dominique Daquin",
                    "Frantz Granvorka",
                    "Guillaume Samica",
                    "Hubert Henno",
                    "Laurent Capet",
                    "Lo\u00efc De Kergret",
                    "Philippe Bar\u00e7a-Cysique",
                    "St\u00e9phane Antiga",
                    "Vincent Montm\u00e9at"
                ]
            ],
            "y_data": [
                [
                    85,
                    90,
                    82,
                    83,
                    92,
                    89,
                    88,
                    94,
                    88
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi rozložení jmen a hmotností ve sloupcovém grafu a seřaď je vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "406@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , min(weight) FROM people GROUP BY Sex ORDER BY Sex ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , min(weight) FROM people GROUP BY Sex ORDER BY Sex ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "candidate_poll",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "min(weight)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    90,
                    82
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi minimální hmotnost podle pohlaví ve sloupci, a seřaď osu x vzestupně."
        ],
        "irrelevant_tables": [
            "candidate"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "723@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT role_description , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_description",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Manager",
                    "Proof Manager",
                    "Editor",
                    "Photo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz sloupcový graf o tom, kolik zaměstnanců má každá role, a chci zobrazit Y vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "Ref_Shipping_Agents",
            "Documents_Mailed"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "725@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY T1.role_code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.role_code , count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code ORDER BY T1.role_code DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "role_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "PT",
                    "PR",
                    "MG",
                    "ED"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik zaměstnanců mají jednotlivé role? Vykresli sloupcový graf s id role a počtem zaměstnanců, zobrazený sestupně podle kódu role_code."
        ],
        "irrelevant_tables": [
            "Ref_Document_Status",
            "Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "726@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) DESC",
                "binning": "BIN receipt_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT receipt_date , COUNT(receipt_date) FROM Documents  ORDER BY COUNT(receipt_date) DESC BIN receipt_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Control_Systems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "receipt_date",
            "y_name": "COUNT(receipt_date)",
            "x_data": [
                [
                    "Mon",
                    "Fri",
                    "Wed",
                    "Sun",
                    "Sat",
                    "Tue",
                    "Thur"
                ]
            ],
            "y_data": [
                [
                    4,
                    3,
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN receipt_date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš počet dokladů pro každé datum příjmu a rozděl jej podle dnů v týdnu do sloupcového grafu, osu y seřaď od nejvyššího po nejnižší.",
            "Sloupcový graf četnosti od každého data přijetí, datum rozděl podle dne v týdnu, seřaď y v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "Documents_Mailed",
            "Ref_Document_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3208@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM people WHERE is_male = 'T' AND people_id NOT IN (SELECT male_id FROM wedding) ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Graeme McDowell",
                    "Adam Scott"
                ]
            ],
            "y_data": [
                [
                    34,
                    26
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz jméno a věk všech mužů, kteří nemají svatbu, pomocí sloupcového grafu a seřaď je podle osy x sestupně."
        ],
        "irrelevant_tables": [
            "church"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3210@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM Church GROUP BY Open_Date ORDER BY Open_Date DESC"
        },
        "chart": "Line",
        "hardness": "Easy",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "line",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "1844",
                    "1843",
                    "1842",
                    "1841",
                    "1840",
                    "1839",
                    "1838",
                    "1837",
                    "1836",
                    "1835",
                    "1834",
                    "1833",
                    "1832",
                    "1831",
                    "1830"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY TIME",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi řádkový graf, jak se mění počet otevřených dat v průběhu data otevření, seřaď je podle Open_Date vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "wedding",
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "3214@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM people WHERE age < (SELECT avg(age) FROM people) GROUP BY Country ORDER BY Country DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "United States",
                    "Australia"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o počtu zemí pro všechny lidi, jejichž věk je nižší než průměr, a mohl bys je zobrazit sestupně podle osy X?"
        ],
        "irrelevant_tables": [
            "church",
            "wedding"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3216@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM people GROUP BY country ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Australia",
                    "Canada",
                    "Northern Ireland",
                    "Sweden",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf celkového počtu v každé zemi. Mohl bys je seřadit od nejnižšího po nejvyšší podle celkového počtu?",
            "Zobraz všechny země a počet lidí z každé země pomocí sloupcového grafu, osu y seřaď od nejnižšího k nejvyššímu řádu."
        ],
        "irrelevant_tables": [
            "wedding",
            "church"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3218@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC",
                "binning": "BIN Open_Date BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Open_Date , COUNT(Open_Date) FROM church  ORDER BY Open_Date DESC BIN Open_Date BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "wedding",
        "vis_obj": {
            "chart": "line",
            "x_name": "Open_Date",
            "y_name": "COUNT(Open_Date)",
            "x_data": [
                [
                    "1844",
                    "1843",
                    "1842",
                    "1841",
                    "1840",
                    "1839",
                    "1838",
                    "1837",
                    "1836",
                    "1835",
                    "1834",
                    "1833",
                    "1832",
                    "1831",
                    "1830"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Open_Date BY YEAR",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vizualizuj čárový graf, který rozdělí datum otevření do intervalu rok a spočítá je, a mohl bys seřadit osu X sestupně?",
            "Prosím, zobraz trend počtu církve podle data otevření (rozděl dle roku) pomocí čárového grafu, a zobraz podle osy x v sestupně prosím."
        ],
        "irrelevant_tables": [
            "wedding",
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2066@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY acc_bal DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT cust_name , acc_bal FROM customer WHERE cust_name LIKE '%a%' ORDER BY acc_bal DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "loan_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cust_name",
            "y_name": "acc_bal",
            "x_data": [
                [
                    "Mary",
                    "Jack"
                ]
            ],
            "y_data": [
                [
                    2000,
                    1000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti jméno a zůstatek na účtu zákazníka, jehož jméno obsahuje písmeno \"a“. Vizualizuj je pomocí sloupcového grafu, osu y zobraz v sestupném pořadí.",
            "Můžeš porovnat zůstatky na účtech zákazníků s písmenem \"a\" ve jméně pomocí sloupcového grafu a seřadit je sestupně u osy y?",
            "Vizualizuj sloupcový graf pro to, jaká jsou jména a zůstatky na účtech zákazníků s písmenem \"a\" v jejich jménech? Mohl bys je seřadit od nejvyššího po nejnižší podle osy y?"
        ],
        "irrelevant_tables": [
            "loan",
            "bank"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2072@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum(amount) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bname , sum(amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY sum(amount) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "loan_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bname",
            "y_name": "sum(amount)",
            "x_data": [
                [
                    "morningside",
                    "downtown",
                    "broadway"
                ]
            ],
            "y_data": [
                [
                    2050,
                    3000,
                    5000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jak se jmenují jednotlivé pobočky bank a jaké jsou jejich celkové částky půjček? Zobraz sloupcový graf a chci ho seřadit podle osy Y od nejnižší po nejvyšší.",
            "Vrať sloupcový graf s názvy různých poboček bank a jejich celkovými částkami úvěrů, zobraz osu y od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "customer"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2655@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Builder , COUNT(*) FROM railway GROUP BY Builder ORDER BY Builder ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "railway",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Builder",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Avonside",
                    "GER Hartford",
                    "GER Stratford",
                    "GNR Doncaster",
                    "GWR Swindon",
                    "MR Derby",
                    "SECR Ashford",
                    "Stephenson",
                    "Swindon Works"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz různé stavitele železnic spolu s odpovídajícím počtem železnic využívajících jednotlivé stavitele pomocí sloupcového grafu a seřaď osu x vzestupně.",
            "Zobraz různé stavitele železnic spolu s odpovídajícím počtem železnic využívajících každého stavitele. Zobraz sloupcový graf a osu x zobraz vzestupně."
        ],
        "irrelevant_tables": [
            "train",
            "manager"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2658@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY COUNT(Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "railway",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Ballarshah-Mumbai Pass",
                    "Kazipet-Nagpur Pass",
                    "Lucknow-Chennai Exp",
                    "Nagpur-Kazipet Pass",
                    "Nandigram Exp",
                    "Sewagram Exp",
                    "Wardha-Ballarshah Pass",
                    "Andaman Exp"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik vlaků je v každé kategorii názvů, uveď mi výsledek pomocí sloupcového grafu a mohl bys zobrazit počet názvů od nejnižšího po nejvyšší?",
            "Porovnej celkový počet vlaků v jednotlivých názvech pomocí sloupcového grafu a seřaď je vzestupně podle celkového počtu.",
            "Uveď mi sloupcový graf, kolik je jednotlivých jmen, a mohl bys je seřadit podle osy y vzestupně?"
        ],
        "irrelevant_tables": [
            "railway",
            "railway_manage"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2659@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Arrival , COUNT(Arrival) FROM train GROUP BY Arrival ORDER BY Arrival ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "railway",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Arrival",
            "y_name": "COUNT(Arrival)",
            "x_data": [
                [
                    "05:09",
                    "08:54",
                    "09:08",
                    "09:48",
                    "13:04",
                    "13:28",
                    "23:39",
                    "23:44"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Arrival",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf, na ose x je čas příjezdu a na ose y celkový počet vlaků v každém čase příjezdu, osu x seřaď vzestupně.",
            "Vytvoř sloupcový graf zobrazující počet příjezdů napříč příjezdy, osu x seřaď vzestupně."
        ],
        "irrelevant_tables": [
            "railway_manage",
            "manager"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2691@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "sakila_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Action",
                    "Animation",
                    "Children",
                    "Classics",
                    "Comedy",
                    "Documentary",
                    "Drama",
                    "Family",
                    "Foreign",
                    "Games",
                    "Horror",
                    "Music",
                    "New",
                    "Sci-Fi",
                    "Sports",
                    "Travel"
                ]
            ],
            "y_data": [
                [
                    64,
                    66,
                    60,
                    57,
                    58,
                    68,
                    62,
                    69,
                    73,
                    61,
                    56,
                    51,
                    63,
                    61,
                    74,
                    57
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jak se jmenují jednotlivé kategorie a kolik filmů je v každé z nich? Ukaž mi sloupcový graf. Mohl bys seřadit osu X v pořadí vzestupně, prosím?"
        ],
        "irrelevant_tables": [
            "address",
            "payment"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2360@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , count(*) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T1.director ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Steven Spielberg",
                    "Victor Fleming",
                    "Robert Wise",
                    "James Cameron"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik recenzí obdržel každý režisér? Vizualizuj pomocí sloupcového grafu a mohl bys ho seřadit podle osy Y od nejvyššího po nejnižší hodnocení?",
            "Ukaž mi sloupcový graf, kolik recenzí filmů má každý režisér, a na ose y chci ho zobrazit sestupně, prosím.",
            "Kolik filmových recenzí získá každý režisér? Zobraz sloupcový graf, osu y seřadit sestupně, prosím.",
            "Vrať sloupcový graf s údaji o tom, kolik recenzí na filmy získávají jednotliví režiséři. Seřaď osu Y od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2369@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , AVG(stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY AVG(stars) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "AVG(stars)",
            "x_data": [
                [
                    "Snow White",
                    "Avatar",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "The Sound of Music",
                    "E.T."
                ]
            ],
            "y_data": [
                [
                    4.5,
                    4.0,
                    3.3333333333333335,
                    3.0,
                    2.5,
                    2.5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké je průměrné hvězdičkové hodnocení jednotlivých filmových titulů? Mohli bys mi vrátit sloupcový graf? Seřaď ho sestupně podle Y prosím.",
            "Prosím, řekni mi průměrné hvězdičkové hodnocení jednotlivých filmových titulů pomocí sloupcového grafu, seřaď je sestupně podle Y, prosím.",
            "Vizualizuj název a průměrné hvězdičkové hodnocení filmu pomocí sloupcového grafu a mohl bys zobrazit osu y v sestupném pořadí?"
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2383@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY title ORDER BY title ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "min(T1.stars)",
            "x_data": [
                [
                    "Avatar",
                    "E.T.",
                    "Gone with the Wind",
                    "Raiders of the Lost Ark",
                    "Snow White",
                    "The Sound of Music"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobrazení názvu a nejnižšího hodnocení ze všech filmů ve sloupcovém grafu, vzestupně podle názvu."
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2398@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY max(T1.stars) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT director , max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director != \"null\" GROUP BY director ORDER BY max(T1.stars) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "director",
            "y_name": "max(T1.stars)",
            "x_data": [
                [
                    "James Cameron",
                    "Victor Fleming",
                    "Steven Spielberg",
                    "Robert Wise"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro každého režiséra vrať jméno režiséra spolu s nejvyšším hodnocením ze všech jeho filmů a ignoruj filmy, jejichž režisér je NULL. Mohl bys výsledek vynést do sloupcového grafu? Seřaď jej podle osy y od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2402@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg(T1.stars) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "avg(T1.stars)",
            "x_data": [
                [
                    "Brittany Harris",
                    "Ashley White",
                    "Chris Jackson",
                    "Mike Anderson",
                    "Sarah Martinez",
                    "Daniel Lewis",
                    "Elizabeth Thomas",
                    "James Cameron"
                ]
            ],
            "y_data": [
                [
                    2.6666666666666665,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf pro průměrný počet hvězdiček, které každý recenzent udělí filmu, a seřaď je vzestupně podle osy y.",
            "Jaký je průměrný počet hvězdiček, které každý recenzent udělí filmu? Ukaž sloupcový graf a seřaď ho vzestupně podle osy y.",
            "Nakresli sloupcový graf pro průměrné hvězdičkové hodnocení jednotlivých recenzentů a seřaď je vzestupně podle hvězdiček."
        ],
        "irrelevant_tables": [
            "Movie"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2405@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT title , COUNT(title) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars BETWEEN 3 AND 5 GROUP BY title ORDER BY COUNT(title) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "movie_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "title",
            "y_name": "COUNT(title)",
            "x_data": [
                [
                    "Snow White",
                    "Raiders of the Lost Ark",
                    "Gone with the Wind",
                    "Avatar",
                    "The Sound of Music",
                    "E.T."
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY title",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké jsou názvy všech filmů, které mají hodnocení mezi 3 a 5 hvězdičkami? Spočítej je sloupcovým grafem, a mohl bys ho zobrazit podle osy y v sestupně?",
            "Sloupcový graf pro počet titulů všech filmů, které mají mezi 3 a 5 hvězdičkami? Seřaď je podle osy y sestupně.",
            "Jaké jsou názvy všech filmů, které mají mezi 3 a 5 hvězdičkami? Spočítej je pomocí sloupcového grafu a mohl bys je zobrazit podle osy y sestupně?",
            "Sloupcový graf pro jaký počet titulů všech filmů, které mají hodnocení hvězdiček je mezi 3 a 5? Seřaď je podle osy y sestupně."
        ],
        "irrelevant_tables": [
            "Reviewer"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1432@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , COUNT(Type) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id GROUP BY Type ORDER BY COUNT(Type) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id GROUP BY Type ORDER BY COUNT(Type) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "flight_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "COUNT(Type)",
            "x_data": [
                [
                    "Subsidiary",
                    "Joint Venture",
                    "Corporate"
                ]
            ],
            "y_data": [
                [
                    9,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Type",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik společností kdy provozovalo let pro každý typ? Nakresli sloupcový graf a zobraz jej sestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "airport"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "679@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(*) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , COUNT(*) FROM company GROUP BY Headquarters ORDER BY Headquarters ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "company_employee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Brazil",
                    "China",
                    "France",
                    "Germany",
                    "Netherlands",
                    "Russia",
                    "UK",
                    "USA"
                ]
            ],
            "y_data": [
                [
                    1,
                    4,
                    1,
                    1,
                    1,
                    1,
                    2,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž jednotlivá sídla a počet společností v každém sídle ve sloupcovém grafu a mohl bys je prosím seřadit vzestupně podle X?"
        ],
        "irrelevant_tables": [
            "people",
            "employment"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "680@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Industry ,  Headquarters ORDER BY COUNT(Headquarters) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters , COUNT(Headquarters) FROM company GROUP BY Industry ,  Headquarters ORDER BY COUNT(Headquarters) DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "company_employee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Headquarters",
            "y_name": "COUNT(Headquarters)",
            "x_data": [
                [
                    "USA",
                    "China",
                    "UK",
                    "Russia",
                    "Netherlands",
                    "Germany",
                    "France",
                    "Brazil"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    3,
                    3,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    0,
                    1,
                    1
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "Automotive",
                "Banking",
                "Conglomerate",
                "Oil and gas",
                "Retailing"
            ],
            "describe": "GROUP BY Industry, GROUP BY Headquarters",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf počtu sídel vs. odvětví na základě sídla, zobraz prosím osu Y v sestupném pořadí.",
            "Kolik společností je v jednotlivých pobočkách? Vrať skládaný sloupcový graf, abys seskupil odvětví a pobočku a spočítal je podle sídla, a mohl bys je zobrazit sestupně podle toho, kolik je poboček?"
        ],
        "irrelevant_tables": [
            "employment",
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis",
                "stacked_bar": true
            },
            {
                "channel_specified": [],
                "sort_by": "field",
                "stacked_bar": true
            }
        ]
    },
    "682@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Industry , COUNT(Industry) FROM company GROUP BY Industry ORDER BY Industry ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Industry , COUNT(Industry) FROM company GROUP BY Industry ORDER BY Industry ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "company_employee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Industry",
            "y_name": "COUNT(Industry)",
            "x_data": [
                [
                    "Automotive",
                    "Banking",
                    "Conglomerate",
                    "Oil and gas",
                    "Retailing"
                ]
            ],
            "y_data": [
                [
                    1,
                    7,
                    2,
                    8,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Industry",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - průmysl, osa y - počet průmyslových odvětví. Mohl bys je uvést vzestupně podle osy X?"
        ],
        "irrelevant_tables": [
            "employment",
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2494@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company ORDER BY Record_Company DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "orchestra",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Record_Company",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "RCA",
                    "Philips Classics Records",
                    "Philips",
                    "Mercury Records",
                    "Kultur",
                    "Koch Records / Naxos Records",
                    "EMI",
                    "Deutsche Grammophon",
                    "Delos Records",
                    "Decca Records",
                    "Columbia Masterworks"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vizualizovat sloupcový graf pro kolik orchestrů spravuje každá nahrávací společnost? Mohl bys ho seřadit podle osy x sestupně prosím?"
        ],
        "irrelevant_tables": [
            "conductor",
            "show"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "415@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Year , avg(Weight) FROM CARS_DATA GROUP BY YEAR ORDER BY Year DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Year , avg(Weight) FROM CARS_DATA GROUP BY YEAR ORDER BY Year DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "Year",
            "y_name": "avg(Weight)",
            "x_data": [
                [
                    "1982",
                    "1981",
                    "1980",
                    "1979",
                    "1978",
                    "1977",
                    "1976",
                    "1975",
                    "1974",
                    "1973",
                    "1972",
                    "1971",
                    "1970"
                ]
            ],
            "y_data": [
                [
                    2453.548387096774,
                    2532.1666666666665,
                    2436.655172413793,
                    3055.3448275862074,
                    2861.805555555556,
                    2997.357142857143,
                    3078.7352941176473,
                    3176.8,
                    2877.925925925926,
                    3419.025,
                    3237.714285714286,
                    2960.3448275862074,
                    3441.3142857142852
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi čárový graf o tom, jaká je průměrná hmotnost a rok pro každý rok. Seřaď osu x v pořadí vzestupně.",
            "Ukaž mi čárový graf změny průměrné hmotnosti v průběhu roku a chci ho zobrazit vzestupně podle roku.",
            "Vizualizuj čárový graf pro jakou průměrnou hmotnost automobilů v jednotlivých letech? Seřaď je vzestupně podle X.",
            "Jaká je průměrná hmotnost a rok pro každý rok? Zobraz je jako čárový graf, chci ji zobrazit vzestupně podle roku."
        ],
        "irrelevant_tables": [
            "car_makers",
            "model_list"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "420@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId ORDER BY T1.Continent ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId ORDER BY T1.Continent ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Continent",
            "y_name": "count(*)",
            "x_data": [
                [
                    "africa",
                    "america",
                    "asia",
                    "australia",
                    "europe"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    2,
                    2,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "U každého kontinentu uveď jeho název a počet zemí, které má, pomocí sloupcového grafu. Zobraz osu x vzestupně, prosím.",
            "Kolik zemí mají jednotlivé kontinenty? Vrať sloupcový graf s názvem kontinentu a počtem zemí, zobraz osu x vzestupně."
        ],
        "irrelevant_tables": [
            "car_makers",
            "car_names"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "434@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Continent",
            "y_name": "count(*)",
            "x_data": [
                [
                    "europe",
                    "asia",
                    "america"
                ]
            ],
            "y_data": [
                [
                    11,
                    7,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz sloupcový graf, jak se jmenují jednotlivé kontinenty a kolik je na nich výrobců automobilů, a seřaď je podle celkového počtu sestupně.",
            "Jak se jmenují jednotlivé kontinenty a kolik je na nich výrobců automobilů? Zakresli je do sloupcového grafu a na ose y je znázorni od nejvyššího po nejnižší, prosím.",
            "Sloupcový graf o tom, jak se jmenují jednotlivé kontinenty a kolik výrobců automobilů je na každém z nich, a zobraz je od nejvyššího k nejnižšímu podle osy y, prosím.",
            "Kolik výrobců automobilů je na jednotlivých kontinentech? Vypiš název kontinentu a počet pomocí sloupcového grafu a mohl bys je seřadit od nejvyššího po nejnižší počet podle osy y?",
            "Kolik výrobců automobilů je na jednotlivých kontinentech? Vypiš název kontinentu a počet. Vizualizuj je pomocí sloupcového grafu, osu y seřaď sestupně.",
            "Nakresli sloupcový graf o tom, kolik výrobců automobilů je na jednotlivých kontinentech? Vypiš název kontinentu a počet a seřaď osu y sestupně."
        ],
        "irrelevant_tables": [
            "cars_data",
            "model_list"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1032@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT transaction_type , count(*) FROM Financial_transactions GROUP BY transaction_type ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_card_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "transaction_type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Refund",
                    "Payment"
                ]
            ],
            "y_data": [
                [
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobrazení typu transakce a počtu transakcí pomocí sloupcového grafu a zobraz je sestupně na ose y.",
            "Zobraz typ transakce a počet transakcí. Zobraz je jako sloupcový graf a mohl bys je seřadit podle osy y od nejvyšší po nejnižší?",
            "Ukaž mi sloupcový graf pro různé typy transakcí a kolik transakcí z každého z nich se uskutečnilo a zobraz je od nejvyššího po nejnižší celkový počet, prosím.",
            "Jaké jsou různé typy transakcí a kolik transakcí z každého z nich se uskutečnilo? Zobraz sloupcový graf od nejvyššího po nejnižší Y, prosím.",
            "Nakresli sloupcový graf typu transakce v porovnání s celkovým počtem a zobraz jej od nejvyššího po nejnižší celkový počet, prosím.",
            "Vrať histogram o tom, jaké jsou různé typy transakcí a kolik transakcí z každého z nich se uskutečnilo, a seřaď celkový počet od nejvyššího po nejnižší pořadí, prosím."
        ],
        "irrelevant_tables": [
            "Accounts",
            "Customers_Cards"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1043@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT card_type_code , COUNT(card_type_code) FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(card_type_code) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_card_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "card_type_code",
            "y_name": "COUNT(card_type_code)",
            "x_data": [
                [
                    "Debit",
                    "Credit"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "GROUP BY card_type_code",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik karet existuje v různých kódech typu karty? Sestav sloupcový graf a seřaď, kolik kódů typu karty je, sestupně.",
            "Zobraz počet karet s různým kódem typu karty ve sloupcovém grafu, osu y zobraz v sestupném pořadí.",
            "Ukaž mi počet kódů typu karty podle kódu typu karty v histogramu a mohl bys je seřadit sestupně podle celkového počtu?"
        ],
        "irrelevant_tables": [
            "Accounts",
            "Financial_Transactions"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1060@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT card_type_code , count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_card_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "card_type_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Debit",
                    "Credit"
                ]
            ],
            "y_data": [
                [
                    8,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz kódy typů karet a počet transakcí. Vizualizuj je pomocí sloupcového grafu, zobraz je pomocí osy y sestupně.",
            "Zobraz kódy typů karet a počet transakcí pomocí sloupcového grafu a zobraz je sestupně podle celkového počtu.",
            "Jaké jsou různé typy karet a kolik transakcí bylo provedeno s každou z nich? Vizualizuj je pomocí sloupcového grafu, chci je seřadit sestupně podle osy Y.",
            "Vrať sloupcový graf o tom, jaké jsou různé typy karet a kolik transakcí bylo provedeno s každou z nich? Chci zobrazit Y v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "Accounts"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2162@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name ORDER BY COUNT(Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70 GROUP BY Name ORDER BY COUNT(Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Eddie Collins",
                    "Tony Sewell",
                    "Joe Sewell"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro jaký počet jmen techniků, kteří jsou přiděleni k opravě strojů s více bodovými hodnotami než 70? Mohl bys je seřadit podle toho, kolik mají jmen od nejnižšího po nejvyšší pořadí?",
            "Jak se jmenují technici, kteří jsou přiděleni k opravě strojů s více bodovými hodnotami než 70, a spočítej je pomocí sloupcového grafu, osu Y seřaď vzestupně.",
            "Zobraz jména techniků, kteří jsou přiděleni k opravě strojů s bodovou hodnotou vyšší než 70, a spočítej je pomocí sloupcového grafu. Mohl bys je seřadit podle osy y vzestupně?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2164@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID GROUP BY Name ORDER BY COUNT(Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID GROUP BY Name ORDER BY COUNT(Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Charlie Hollocher",
                    "Eddie Collins",
                    "John Brown",
                    "Tony Sewell",
                    "Joe Sewell"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf, který seskupuje a počítá jména techniků s řadou strojů, které jsou jim přiděleny k opravě, a to v pořadí vzestupně podle osy y, prosím."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2165@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY COUNT(Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM technician WHERE Team != \"NYY\" GROUP BY Name ORDER BY COUNT(Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Eddie Collins",
                    "Tony Sewell",
                    "Mickey Cochrane",
                    "Mark Sewell",
                    "Lou Boudreau",
                    "Joe Cochrane",
                    "Charlie Hollocher"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jak se jmenuje technik, jehož tým není \"NYY\", a spočítej je pomocí sloupcového grafu, zobraz celkový počet od nejvyššího po nejnižší.",
            "Sloupcový graf pro výpis počtu jmen techniků, jejichž tým není \"NYY\", seřaď jej podle osy y sestupně prosím.",
            "Vyjmenuj jména techniků, jejichž tým není \"NYY\", a spočítej je pomocí sloupcového grafu. Mohl bys uvést Y od nejvyššího po nejnižší pořadí?"
        ],
        "irrelevant_tables": [
            "repair",
            "machine"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2169@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM technician GROUP BY Team ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "machine_repair",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "CHC",
                    "PHA",
                    "CWS",
                    "NYY",
                    "CLE"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz různé týmy techniků a počet techniků v každém týmu pomocí sloupcového grafu a seřaď Y vzestupně.",
            "Vytvoř sloupcový graf zobrazující celkový počet v týmu, celkový počet zobraz vzestupně."
        ],
        "irrelevant_tables": [
            "repair_assignment",
            "machine"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2766@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "shop_membership",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Brooke Greville",
                    "Cochrane",
                    "Popert",
                    "Taverner",
                    "Zytogorski",
                    "Alexandre"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké jsou názvy poboček, které byly zaregistrovány po roce 2015? Vizualizuj je pomocí sloupcového grafu, mohl bys seřadit celkový počet v pořadí vzestupně?",
            "Ukaž všechny názvy poboček s počtem členů v každé pobočce registrovaných po roce 2015 pomocí sloupcového grafu a mohl bys seřadit celkový počet vzestupně?",
            "Zobraz všechny názvy poboček s počtem členů v každé pobočce registrovaných po roce 2015. Zakresli je do sloupcového grafu a seřaď podle celkového počtu vzestupně."
        ],
        "irrelevant_tables": [
            "purchase"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3279@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(*) FROM elimination GROUP BY Team ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Team Orton",
                    "Team Batista"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz různé týmy ve vyřazování a počet vyřazených z každého týmu pomocí sloupcového grafu, seřazeného podle celkového počtu od nejnižšího po nejvyšší.",
            "Kolik vyřazení měly jednotlivé týmy? Vizualizuj je pomocí sloupcového grafu a seřaď je vzestupně podle osy y.",
            "Sloupcový graf pro zobrazení celkového počtu z různých týmů, a mohl bys je zobrazit vzestupně podle osy y, prosím?",
            "Sloupcový graf o tom, kolik vyřazení měl každý tým? Mohl bys je zobraz vzestupně podle osy y, prosím?",
            "Vrať sloupcový graf s údaji o počtu vyřazení jednotlivých týmů a seřaď je vzestupně podle osy y.",
            "Zobraz různé týmy ve vyřazování a počet vyřazení od každého týmu. Vizualizuj pomocí sloupcového grafu a seřaď je od nejnižšího po nejvyšší celkový počet."
        ],
        "irrelevant_tables": [
            "wrestler"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3283@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team , COUNT(Team) FROM elimination GROUP BY Team ORDER BY COUNT(Team) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "wrestler",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team",
            "y_name": "COUNT(Team)",
            "x_data": [
                [
                    "Team Orton",
                    "Team Batista"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Team",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf pro to, jaký je počet jejich týmů ve vyřazovací části? Seřaď je vzestupně podle osy y prosím.",
            "Jaký je počet jejich týmů ve vyřazovací části? Nakresli sloupcový graf a seřaď jej vzestupně podle osy y.",
            "Vytvoř sloupcový graf zobrazující počet týmů v týmu, zobrazený na ose y vzestupně.",
            "Zobraz počet týmů ve vyřazovací části ve sloupcovém grafu, mohl bys zobrazit osu y vzestupně?"
        ],
        "irrelevant_tables": [
            "wrestler"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2537@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date , COUNT(Date) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\" GROUP BY Date ORDER BY COUNT(Date) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "performance_attendance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "COUNT(Date)",
            "x_data": [
                [
                    "February 2",
                    "February 5",
                    "February 11"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz data představení, na kterých se podíleli členové s rolí \"housle\", a spočítej je pomocí sloupcového grafu a seřaď je v desítkách podle toho, kolikáté je to datum.",
            "Sloupcový graf pro zobrazení počtu termínů představení s účastí členů, jejichž role je „housle\", zobrazený podle celkového počtu sestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2539@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM performance GROUP BY Location ORDER BY COUNT(Location) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "performance_attendance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Bell Centre",
                    "Madison Square Garden",
                    "Scotiabank Place",
                    "TD Garden",
                    "Verizon Center"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Porovnej celkový počet míst v jednotlivých lokalitách pomocí sloupcového grafu a seřaď je podle osy Y od nejnižšího po nejvyšší.",
            "Sloupcový graf umístění na ose x umístění na ose y kolik umístění a pořadí na ose Y od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "member_attendance",
            "member"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1069@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(*) FROM people GROUP BY Party ORDER BY Party DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(*) FROM people GROUP BY Party ORDER BY Party DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "debate",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Republican",
                    "Independent Democrat",
                    "Democratic",
                    "Anti-Lecompton Democrat"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz různé strany lidí spolu s počtem lidí v každé straně. Načrtni je jako sloupcový graf, zobraz podle jmen sestupně.",
            "Sloupcový graf zobrazující celkový počet z různých stran, seřazený podle osy x sestupně."
        ],
        "irrelevant_tables": [
            "debate",
            "debate_people"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1077@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue ORDER BY COUNT(Venue) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM debate GROUP BY Venue ORDER BY COUNT(Venue) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "debate",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Abu Dhabi , UAE",
                    "Doha , Qatar",
                    "Dubai , UAE",
                    "Manama , Bahrain"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf, který ukazuje, kolik debat se koná na jednotlivých místech, a chci zobrazit osu y v pořadí vzestupně.",
            "Sloupcový graf: osa x - místo konání, osa y - kolik míst konání. Zobraz osu y od nejnižšího po nejvyšší pořadí."
        ],
        "irrelevant_tables": [
            "people",
            "debate_people"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1078@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Venue , COUNT(Venue) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID GROUP BY Venue ORDER BY Venue ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Venue , COUNT(Venue) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID GROUP BY Venue ORDER BY Venue ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "debate",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Venue",
            "y_name": "COUNT(Venue)",
            "x_data": [
                [
                    "Abu Dhabi , UAE",
                    "Dubai , UAE",
                    "Manama , Bahrain"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Venue",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet debat v jednotlivých místech pro ty, kteří jsou na straně souhlasu, chci uvést osu X v pořadí vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1080@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID GROUP BY Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID GROUP BY Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "debate",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "William B. Maclay",
                    "Thomas J. Barr",
                    "Luther C. Carter",
                    "James Humphrey"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet debat pro každou osobu na straně souhlasu ve sloupcovém grafu a seřaď X v sestupném pořadí."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1083@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "debate",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "William B. Maclay",
                    "Thomas J. Barr",
                    "Luther C. Carter",
                    "James Humphrey"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz jména lidí a počet případů, kdy byli na kladné straně debat, pomocí sloupcového grafu, seřazeného sestupně podle osy x."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1250@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY COUNT(date_of_completion) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\" GROUP BY date_of_completion ORDER BY COUNT(date_of_completion) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-03-22",
                    "2018-03-07",
                    "2018-03-06",
                    "2018-03-04",
                    "2018-03-02",
                    "2018-02-26"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro počet dat dokončení všech testů s výsledkem „neuspěl\" a seřaď je od nejvyššího po nejnižší na ose Y.",
            "Sloupcový graf, který vrací číslo data dokončení všech testů s výsledkem \"neuspěl\" a seřaď je od nejvyššího po nejnižší na ose Y.",
            "Jaká jsou data dokončení všech testů, které mají výsledek \"neuspěl\", a spočítej je pomocí sloupcového grafu, seřaď je od nejvyššího po nejnižší na ose Y.",
            "Vrať datum dokončení všech testů s výsledkem \"neuspěl\" a spočítej je pomocí sloupcového grafu, který je na ose Y seřazen od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [
            "Students",
            "Course_Authors_and_Tutors"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1254@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment ORDER BY date_of_enrolment ASC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\" GROUP BY date_of_enrolment ORDER BY date_of_enrolment ASC"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "2017-08-02",
                    "2017-09-06",
                    "2017-09-21",
                    "2017-10-10",
                    "2017-10-23",
                    "2017-10-29",
                    "2017-11-13"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_enrolment",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti datum zápisu pro všechny testy, které mají výsledek „uspěl\", a spočítej je pomocí čárového grafu a chci zobrazit osu x vzestupně.",
            "Čárový graf pro zjištění čísla data zápisu pro všechny testy, které mají výsledek „uspěl\", a seznam date_of_enrolment ve vzestupném pořadí, prosím."
        ],
        "irrelevant_tables": [
            "Course_Authors_and_Tutors",
            "Courses"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "1273@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY course_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT course_name , COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY course_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "course_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "modern Arts",
                    "database",
                    "advanced database",
                    "Writing in French",
                    "Spanish",
                    "Japanese",
                    "French",
                    "Chinese Painting",
                    "Art history",
                    "AI"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaký je název každého kurzu a odpovídající počet zapsaných studentů? Zobraz sloupcový graf, chci zobrazit course_name v sestupném pořadí.",
            "Zobraz sloupcový graf o tom, jak se jmenují jednotlivé kurzy a jaký je počet zapsaných studentů, zobraz je podle jmen sestupně.",
            "Vypiš název a počet zapsaných studentů pro každý kurz do sloupcového grafu a mohl bys je zobrazit sestupně podle osy X?",
            "Vrať histogram o tom, co je název každého kurzu a odpovídající počet studentů zápisu? Mohl bys je seřadit sestupně podle osy x?"
        ],
        "irrelevant_tables": [
            "Course_Authors_and_Tutors",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1278@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Arts",
                    "Language",
                    "Computer Science"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet předmětů pro jednotlivé předměty ve sloupcovém grafu a mohl bys je zobrazit vzestupně podle osy y?",
            "Kolik kurzů existuje pro každý předmět? Vytvoř sloupcový graf, seřaď jej od nejnižšího po nejvyšší stupeň podle Y."
        ],
        "irrelevant_tables": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1289@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT subject_name , COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "subject_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Computer Science",
                    "Language",
                    "Arts"
                ]
            ],
            "y_data": [
                [
                    6,
                    5,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet předmětů pro každý předmět ve sloupcovém grafu a seřaď celkový počet sestupně.",
            "Kolik kurzů existuje pro každý předmět? Vykresli sloupcový graf a zobraz jej sestupně podle osy y."
        ],
        "irrelevant_tables": [
            "Students",
            "Course_Authors_and_Tutors"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1293@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) DESC",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Dec",
                    "Aug",
                    "Sept",
                    "Oct",
                    "Nov"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti datum zápisu do kurzu „španělština\", datum rozděl podle měsíce a spočítej je pomocí sloupcového grafu, seřazeného sestupně podle osy Y."
        ],
        "irrelevant_tables": [
            "Subjects",
            "Student_Tests_Taken"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1298@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC",
                "binning": "BIN date_of_enrolment BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) ASC BIN date_of_enrolment BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "July",
                    "Aug",
                    "Nov",
                    "Sept",
                    "Dec",
                    "Oct"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    3,
                    3,
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY MONTH",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš počet zapsaných studentů v jednotlivých měsících a rozděl datum zápisu podle měsíčního intervalu pomocí sloupcového grafu a seřaď je na ose y od nejnižšího po nejvyšší.",
            "Kolik studentů se zapíše v každém měsíci? Vrať sloupcový graf s datem zápisu podle měsíčního intervalu a chci je seřadit vzestupně podle osy y."
        ],
        "irrelevant_tables": [
            "Student_Tests_Taken",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1299@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC",
                "binning": "BIN date_of_enrolment BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_enrolment , COUNT(date_of_enrolment) FROM Student_Course_Enrolment  ORDER BY COUNT(date_of_enrolment) DESC BIN date_of_enrolment BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_enrolment",
            "y_name": "COUNT(date_of_enrolment)",
            "x_data": [
                [
                    "Thur",
                    "Mon",
                    "Wed",
                    "Sun",
                    "Sat",
                    "Tue",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    3,
                    3,
                    3,
                    2,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_enrolment BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik studentů je zapsáno každý den? Vrátí sloupcový graf s datem zápisu podle dnů v týdnu a seřadí počet dat zápisu od nejvyššího po nejnižší.",
            "Vypiš počet zapsaných studentů v jednotlivých dnech a rozděl datum zápisu podle dnů v týdnu pomocí sloupcového grafu a mohl bys zobrazit osu Y v sestupném pořadí?"
        ],
        "irrelevant_tables": [
            "Student_Tests_Taken",
            "Students"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1300@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion ORDER BY date_of_completion DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT date_of_completion , COUNT(date_of_completion) FROM Student_Course_Enrolment GROUP BY date_of_completion ORDER BY date_of_completion DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "e_learning",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_of_completion",
            "y_name": "COUNT(date_of_completion)",
            "x_data": [
                [
                    "2018-03-22",
                    "2018-03-19",
                    "2018-03-18",
                    "2018-03-16",
                    "2018-03-14",
                    "2018-03-10",
                    "2018-03-09",
                    "2018-03-07",
                    "2018-03-06",
                    "2018-03-04",
                    "2018-03-02",
                    "2018-03-01",
                    "2018-02-28",
                    "2018-02-27",
                    "2018-02-26"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1,
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date_of_completion",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik studentů dokončí každý den? Vrať čárový graf seskupený podle data dokončení a seřazený podle osy X vzestupně."
        ],
        "irrelevant_tables": [
            "Student_Tests_Taken",
            "Course_Authors_and_Tutors"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "769@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , COUNT(Location_Code) FROM Document_locations GROUP BY Location_Code ORDER BY Location_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "COUNT(Location_Code)",
            "x_data": [
                [
                    "x",
                    "n",
                    "e",
                    "c",
                    "b"
                ]
            ],
            "y_data": [
                [
                    5,
                    1,
                    4,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location_Code",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik dokladů existuje pro různé kódy umístění? Vytvoř sloupcový graf pro zobrazení podílu a seřaď jej sestupně podle Location_Code, prosím."
        ],
        "irrelevant_tables": [
            "Ref_Locations",
            "Ref_Calendar"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "772@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC",
                "binning": "BIN Date_in_Location_From BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Location_From , COUNT(Date_in_Location_From) FROM Document_locations  ORDER BY COUNT(Date_in_Location_From) DESC BIN Date_in_Location_From BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Location_From",
            "y_name": "COUNT(Date_in_Location_From)",
            "x_data": [
                [
                    "Fri",
                    "Tue",
                    "Mon",
                    "Sun",
                    "Wed",
                    "Thur",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    9,
                    3,
                    2,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_in_Location_From BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet dokumentů v různých počátečních datech a rozděl počáteční data podle intervalu dnů v týdnu pomocí sloupcového grafu a seřaď osu y v sestupném pořadí, prosím.",
            "Kolik dokladů v různých počátečních datech? Vrať sloupcový graf s počátečním datem podle intervalu dnů v týdnu, chci seřadit osu y sestupně."
        ],
        "irrelevant_tables": [
            "Ref_Locations",
            "Ref_Calendar"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "773@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Date_in_Locaton_To ORDER BY Date_in_Locaton_To DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "2017-01-06",
                    "2012-07-03",
                    "2010-11-26",
                    "2009-08-18",
                    "2008-06-08",
                    "1997-03-10",
                    "1995-01-01",
                    "1987-11-05",
                    "1986-10-14",
                    "1976-06-15"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    3,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Date_in_Locaton_To",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet dokladů s různým datem ukončení a seskup je podle data ukončení pomocí čárového grafu a zobraz vzestupně pomocí X.",
            "Kolik dokladů s různým datem ukončení existuje? Vrať čárový graf seskupený podle data ukončení a zobrazený vzestupně podle X."
        ],
        "irrelevant_tables": [
            "Employees",
            "Roles"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "780@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) DESC",
                "binning": "BIN Date_in_Locaton_To BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_in_Locaton_To , COUNT(Date_in_Locaton_To) FROM Document_locations GROUP BY Location_Code ORDER BY COUNT(Date_in_Locaton_To) DESC BIN Date_in_Locaton_To BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_in_Locaton_To",
            "y_name": "COUNT(Date_in_Locaton_To)",
            "x_data": [
                [
                    "Tue",
                    "Fri",
                    "Thur",
                    "Sun",
                    "Mon",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    1,
                    1,
                    1,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0
                ],
                [
                    4,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "b",
                "c",
                "e",
                "n",
                "x"
            ],
            "describe": "GROUP BY Location_Code, BIN Date_in_Locaton_To BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet dokladů v různých datech ukončení. Rozděl datum ukončení podle dne v týdnu a seskup jej podle kódu umístění pomocí sloupcového grafu. Mohl bys je zobrazit sestupně podle osy y, prosím?"
        ],
        "irrelevant_tables": [
            "Ref_Locations",
            "Roles"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "782@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Role_Code , count(*) FROM Employees GROUP BY role_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Role_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "HR",
                    "MG",
                    "PT",
                    "PR",
                    "ED"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    5,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz všechny kódy rolí a počet zaměstnanců v jednotlivých rolích pomocí sloupcového grafu. Zobraz je vzestupně podle osy Y, prosím.",
            "Zobraz všechny kódy rolí a počet zaměstnanců v každé roli. Zobraz sloupcový graf a na ose y zobraz od nejnižšího po nejvyšší počet zaměstnanců.",
            "Sloupcový graf: osa x - kód role, osa y - celkový počet. Zobraz vzestupně podle osy Y, prosím.",
            "Jaký je kód každé role a počet zaměstnanců v každé roli. Zobraz sloupcový graf. Mohl bys seřadit osu y vzestupně?",
            "Vrať histogram o tom, jaký je kód každé role a počet zaměstnanců v každé roli, a zobraz ho vzestupně podle osy Y, prosím.",
            "Udělej mi histogram o tom, jaký je kód jednotlivých rolí a počet zaměstnanců v jednotlivých rolích. Mohl bys seřadit osu y vzestupně?"
        ],
        "irrelevant_tables": [
            "Ref_Calendar",
            "Document_Locations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "783@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC",
                "binning": "BIN Calendar_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Calendar_Date , COUNT(Calendar_Date) FROM Ref_calendar  ORDER BY COUNT(Calendar_Date) DESC BIN Calendar_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Calendar_Date",
            "y_name": "COUNT(Calendar_Date)",
            "x_data": [
                [
                    "Tue",
                    "Mon",
                    "Fri",
                    "Sun",
                    "Thur",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    3,
                    2,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Calendar_Date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz všechna kalendářních data a rozděl je podle dnů v týdnu ve sloupcovém grafu. Chci seřadit osu y v sestupném pořadí.",
            "Jaká jsou všechna kalendářní data? Zobraz sloupcový graf s rozdělením kalendářních dat podle dnů v týdnu, mohl by se zobrazit celkový počet v sestupném pořadí?"
        ],
        "irrelevant_tables": [
            "All_Documents",
            "Documents_to_be_Destroyed"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "791@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location_Code , count(*) FROM Document_locations GROUP BY location_code ORDER BY Location_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Doc_Tracking_DB",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "x",
                    "n",
                    "e",
                    "c",
                    "b"
                ]
            ],
            "y_data": [
                [
                    5,
                    1,
                    4,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz kódy umístění a počet dokumentů v každém umístění. Vizualizuj pomocí sloupcového grafu, zobraz pomocí X sestupně."
        ],
        "irrelevant_tables": [
            "All_Documents",
            "Ref_Calendar"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1122@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT payment_method_code , count(*) FROM customers GROUP BY payment_method_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "department_store",
        "vis_obj": {
            "chart": "bar",
            "x_name": "payment_method_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Direct Debit",
                    "Credit Card"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o tom, kolik zákazníků používá jednotlivé platební metody? Seřaď Y vzestupně.",
            "Vrať sloupcový graf o tom, kolik zákazníků používá jednotlivé platební metody, a mohl bys je seřadit podle osy Y?",
            "Sloupcový graf, který zobrazuje celkový počet z různých kódů platebních metod, a seřaď je od nejnižšího po nejvyšší podle celkového počtu, prosím."
        ],
        "irrelevant_tables": [
            "Products",
            "Product_Suppliers"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1137@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , COUNT(product_type_code) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 GROUP BY product_type_code ORDER BY COUNT(product_type_code) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 GROUP BY product_type_code ORDER BY COUNT(product_type_code) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "department_store",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "COUNT(product_type_code)",
            "x_data": [
                [
                    "Clothes",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf zobrazující počet výrobků dodaných dodavatelem s identifikačním číslem 3 pro různé kódy typů výrobků, seřazených sestupně podle Y, prosím."
        ],
        "irrelevant_tables": [
            "Customer_Addresses",
            "Staff_Department_Assignments"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1138@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , SUM(product_price) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 GROUP BY product_type_code ORDER BY SUM(product_price) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , SUM(product_price) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 GROUP BY product_type_code ORDER BY SUM(product_price) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "department_store",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "SUM(product_price)",
            "x_data": [
                [
                    "Hardware",
                    "Clothes"
                ]
            ],
            "y_data": [
                [
                    803.74,
                    1634.73
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz součet cen dodaných dodavatelem id 3 pro různé kódy typu výrobku ve sloupcovém grafu, seřaď vzestupně podle celkového počtu cen výrobku."
        ],
        "irrelevant_tables": [
            "Departments",
            "Department_Store_Chain"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1139@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , AVG(product_price) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 GROUP BY product_type_code ORDER BY AVG(product_price) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , AVG(product_price) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 GROUP BY product_type_code ORDER BY AVG(product_price) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "department_store",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "AVG(product_price)",
            "x_data": [
                [
                    "Hardware",
                    "Clothes"
                ]
            ],
            "y_data": [
                [
                    803.74,
                    817.365
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz průměrnou cenu dodanou dodavatelem id 3 pro různé kódy typu výrobku ve sloupcovém grafu a seřaď ji vzestupně podle osy y."
        ],
        "irrelevant_tables": [
            "Staff",
            "Supplier_Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1142@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 ORDER BY product_price ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3 ORDER BY product_price ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "department_store",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "product_price",
            "x_data": [
                [
                    "black jeans",
                    "mouse",
                    "blue jeans"
                ]
            ],
            "y_data": [
                [
                    695.16,
                    803.74,
                    939.57
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz cenu každého výrobku dodaného dodavatelem id 3 ve sloupcovém grafu a seřaď ji od nejnižší po nejvyšší na ose y.",
            "Jaká je cena každého výrobku dodaného dodavatelem id 3? Vrať sloupcový graf a seřaď osu y v pořadí vzestupně."
        ],
        "irrelevant_tables": [
            "Addresses",
            "Staff_Department_Assignments"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "997@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY date_from DESC",
                "binning": "BIN date_from BY YEAR"
            },
            "VQL": "Visualize LINE SELECT date_from , COUNT(date_from) FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id ORDER BY date_from DESC BIN date_from BY YEAR"
        },
        "chart": "Line",
        "hardness": "Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "line",
            "x_name": "date_from",
            "y_name": "COUNT(date_from)",
            "x_data": [
                [
                    "2017",
                    "2016",
                    "2015",
                    "2014",
                    "2013",
                    "2012",
                    "2011",
                    "2010",
                    "2009",
                    "2008"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    1,
                    1,
                    4,
                    4,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_from BY YEAR",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet historie adres zákazníků v každém roce a rozděl datum z intervalu podle roku pomocí čárového grafu a sestupně podle osy x."
        ],
        "irrelevant_tables": [
            "Contacts",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1000@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY COUNT(product_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products GROUP BY product_name ORDER BY COUNT(product_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "jcrew",
                    "gucci",
                    "Sony"
                ]
            ],
            "y_data": [
                [
                    5,
                    4,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Porovnej četnost názvů produktů pomocí sloupcového grafu, seřaď je podle osy Y sestupně.",
            "Sloupcový graf: osa x - název produktu, osa y - kolik název produktu. Seřaď je podle osy Y sestupně.",
            "Ukaž mi sloupcový graf s názvem výrobku a jeho četností a zobraz jej na ose y sestupně, prosím."
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Customer_Address_History"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1006@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY COUNT(product_type_code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_type_code , COUNT(product_type_code) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_type_code ORDER BY COUNT(product_type_code) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_type_code",
            "y_name": "COUNT(product_type_code)",
            "x_data": [
                [
                    "Clothes",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    5,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_type_code",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet produktů s cenou vyšší než 1000 nebo nižší než 500 pro každý kód typu produktu ve sloupcovém grafu, chci je seřadit podle celkového počtu vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "Customer_Address_History",
            "Contacts"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1009@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY COUNT(product_name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , COUNT(product_name) FROM products WHERE product_price > 1000 OR product_price < 500 GROUP BY product_name ORDER BY COUNT(product_name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "COUNT(product_name)",
            "x_data": [
                [
                    "Apple",
                    "jcrew",
                    "Sony",
                    "gucci"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY product_name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet produktů s cenou vyšší než 1000 nebo nižší než 500 pro každý název produktu ve sloupcovém grafu a mohl bys seřadit osu y sestupně?"
        ],
        "irrelevant_tables": [
            "Addresses",
            "Customer_Address_History"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1010@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT state_province_county , count(*) FROM addresses GROUP BY state_province_county ORDER BY state_province_county DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_and_products_contacts",
        "vis_obj": {
            "chart": "bar",
            "x_name": "state_province_county",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Virginia",
                    "Vermont",
                    "SouthDakota",
                    "Oregon",
                    "Oklahoma",
                    "Nevada",
                    "Maryland",
                    "Maine",
                    "Louisiana",
                    "Kentucky",
                    "Illinois",
                    "Idaho",
                    "District of Columbia",
                    "Colorado"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz jednotlivé kraje a počet adres v každém kraji. Zobraz sloupcový graf, seřaď X sestupně."
        ],
        "irrelevant_tables": [
            "Customer_Address_History",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1242@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) ASC",
                "binning": "BIN date_of_birth BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_birth , COUNT(date_of_birth) FROM Customers WHERE customer_status_code = 'Good Customer'  ORDER BY COUNT(date_of_birth) ASC BIN date_of_birth BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "driving_school",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_birth",
            "y_name": "COUNT(date_of_birth)",
            "x_data": [
                [
                    "Fri",
                    "Wed",
                    "Sat",
                    "Sun",
                    "Thur",
                    "Tue",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_birth BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Když jsou narozeniny zákazníků, kteří jsou klasifikováni jako „dobrý zákazník\", rozděl narozeniny podle dnů v týdnu a spočítej je do sloupcového grafu. Mohl bys uspořádat osu y vzestupně?"
        ],
        "irrelevant_tables": [
            "Customer_Payments",
            "Vehicles"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1245@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code ORDER BY customer_status_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code ORDER BY customer_status_code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "driving_school",
        "vis_obj": {
            "chart": "bar",
            "x_name": "customer_status_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Bad Customer",
                    "Good Customer"
                ]
            ],
            "y_data": [
                [
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro každý kód stavu zákazníka zjisti, kolik zákazníků je takto klasifikováno. Vizualizuj pomocí sloupcového grafu a zobraz vzestupně podle kódu stavu zákazníka."
        ],
        "irrelevant_tables": [
            "Lessons",
            "Vehicles"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1247@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code ORDER BY payment_method_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT payment_method_code , count(*) FROM Customer_Payments GROUP BY payment_method_code ORDER BY payment_method_code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "driving_school",
        "vis_obj": {
            "chart": "bar",
            "x_name": "payment_method_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Credit Card",
                    "Direct Debit"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Seznam všech platebních metod a počet plateb provedených jednotlivými platebními metodami. Zakresli je do sloupcového grafu, názvy zobraz vzestupně, prosím.",
            "Pro každý způsob platby zjisti, kolik plateb bylo provedeno. Zobraz sloupcový graf a seřaď jej vzestupně podle osy x, prosím."
        ],
        "irrelevant_tables": [
            "Vehicles",
            "Staff"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2704@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , count(*) FROM school GROUP BY county ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "count(*)",
            "x_data": [
                [
                    "50 Marshall",
                    "71 St. Joseph",
                    "75 Starke",
                    "46 LaPorte 71 St. Joseph",
                    "20 Elkhart"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf kraje v porovnání s celkovým počtem, zobraz jej na ose y sestupně.",
            "Vrať sloupcový graf zobrazující počet škol v každém kraji a seřaď osu y od nejvyššího po nejnižší pořadí, prosím."
        ],
        "irrelevant_tables": [
            "budget",
            "endowment"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2706@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County , sum(enrollment) FROM school GROUP BY county ORDER BY sum(enrollment) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_finance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "50 Marshall",
                    "71 St. Joseph",
                    "46 LaPorte 71 St. Joseph",
                    "75 Starke",
                    "20 Elkhart"
                ]
            ],
            "y_data": [
                [
                    1098,
                    984,
                    852,
                    620,
                    601
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Porovnej celkový počet žáků v jednotlivých okresech pomocí sloupcového grafu, osu y zobraz v sestupném pořadí.",
            "Prosím o sloupcový graf celkového počtu zapsaných v jednotlivých okresech a seřazení podle součtu zapsaných sestupně."
        ],
        "irrelevant_tables": [
            "endowment",
            "budget"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2683@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name ORDER BY T1.Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "roller_coaster",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "avg(T2.Speed)",
            "x_data": [
                [
                    "Austria",
                    "Finland",
                    "Sweden"
                ]
            ],
            "y_data": [
                [
                    58.66666666666666,
                    47.45,
                    67
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz názvy zemí a průměrnou rychlost horských drah z každé země pomocí sloupcového grafu a seřaď je vzestupně podle názvů zemí."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2051@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Date ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Date ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Sales",
            "x_data": [
                [
                    "December 16, 2001",
                    "December 22, 2001",
                    "December 30, 2001",
                    "November 12, 2001",
                    "November 18, 2001",
                    "November 4, 2001",
                    "October 14, 2001",
                    "October 29, 2001",
                    "September 9, 2001"
                ]
            ],
            "y_data": [
                [
                    2804,
                    1934,
                    3798,
                    6532,
                    3421,
                    1232,
                    4798,
                    1763,
                    798
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz datum a odpovídající prodej časopisu, v jehož výboru nepůsobil žádný z uvedených redaktorů, pomocí sloupcového grafu a seřaď je na ose X vzestupně."
        ],
        "irrelevant_tables": [
            "editor"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2052@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Theme , T1.Sales FROM journal EXCEPT SELECT T1.date , T1.theme , T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID ORDER BY T1.Sales ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Theme",
            "y_name": "Sales",
            "x_data": [
                [
                    "Miami Dolphins",
                    "Jacksonville Jaguars",
                    "at Pittsburgh Steelers",
                    "at Oakland Raiders",
                    "Green Bay Packers",
                    "at Cincinnati Bengals",
                    "Cleveland Browns",
                    "Tampa Bay Buccaneers",
                    "Baltimore Ravens"
                ]
            ],
            "y_data": [
                [
                    798,
                    1232,
                    1763,
                    1934,
                    2804,
                    3421,
                    3798,
                    4798,
                    6532
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf, který zobrazí téma a jejich prodej časopisu, v jehož výboru nepůsobil žádný z uvedených redaktorů, a chci ho seřadit vzestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "editor"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2053@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM editor ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM editor ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Anna Powierza",
                    "Gra\u017cyna Wolszczak",
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Maria G\u00f3ralczyk",
                    "Mariusz Zalejski",
                    "Piotr Pr\u0119gowski",
                    "Szymon Wydra",
                    "W\u0142adys\u0142aw Grzywna"
                ]
            ],
            "y_data": [
                [
                    35,
                    54,
                    34,
                    21,
                    38,
                    25,
                    43,
                    20,
                    24
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Porovnej věk jednotlivých redaktorů pomocí sloupcového grafu a seřaď je vzestupně podle osy x.",
            "Nakresli sloupcový graf jména v závislosti na věku a chci je seřadit podle osy x vzestupně.",
            "Jaká jsou jména a věk redaktorů? Ukaž mi sloupcový graf a chci ho seřadit podle osy x vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "journal",
            "journal_committee"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2060@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY COUNT(Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000 GROUP BY Name ORDER BY COUNT(Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Gra\u017cyna Wolszczak",
                    "W\u0142adys\u0142aw Grzywna",
                    "Maria G\u00f3ralczyk",
                    "Kamila Porczyk"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz jména redaktorů, kteří jsou ve výboru časopisů s obratem větším než 3000, a spočítej je pomocí sloupcového grafu a chci je uvést podle Y sestupně.",
            "Sloupcový graf pro zobrazení počtu jmen redaktorů, kteří jsou ve výboru časopisů s obratem větším než 3000, a mohl bys je seřadit podle osy y sestupně?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2063@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "journal_committee",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Kamila Porczyk",
                    "Marek Siudym",
                    "Maria G\u00f3ralczyk",
                    "Piotr Pr\u0119gowski",
                    "W\u0142adys\u0142aw Grzywna",
                    "Gra\u017cyna Wolszczak"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz jména jednotlivých redaktorů a počet výborů časopisu, v nichž pracují, pomocí sloupcového grafu, a to vzestupně podle celkového počtu."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1416@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , elevation FROM airports WHERE city = 'New York' ORDER BY elevation ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , elevation FROM airports WHERE city = 'New York' ORDER BY elevation ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "flight_4",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "elevation",
            "x_data": [
                [
                    "John F Kennedy International Airport",
                    "La Guardia Airport",
                    "Indianola Municipal Airport",
                    "One Police Plaza Heliport"
                ]
            ],
            "y_data": [
                [
                    13,
                    21,
                    126,
                    244
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zjisti nadmořskou výšku (nebo převýšení) letišť ve městě New York a seřaď je vzestupně podle nadmořské výšky.",
            "Jaká je nadmořská výška letišť ve městě New York? Ukaž mi sloupcový graf, seřazený vzestupně podle nadmořské výšky."
        ],
        "irrelevant_tables": [
            "airlines",
            "routes"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1419@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country ORDER BY COUNT(country) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT country , COUNT(country) FROM airlines WHERE name LIKE 'Orbit%' GROUP BY country ORDER BY COUNT(country) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "flight_4",
        "vis_obj": {
            "chart": "bar",
            "x_name": "country",
            "y_name": "COUNT(country)",
            "x_data": [
                [
                    "Azerbaijan",
                    "Turkey",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY country",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké jsou země všech leteckých společností, jejichž názvy začínají na Orbit, a spočítej je pomocí sloupcového grafu. Seřaď celkový počet od nejnižšího po nejvyšší.",
            "Najdi zemi leteckých společností, jejichž název začíná slovem \"Orbit\", a spočítej je pomocí sloupcového grafu a seřaď je podle osy y od nejnižší po nejvyšší.",
            "Sloupcový graf pro to, jaký je počet zemí všech leteckých společností, jejichž názvy začínají na Orbit. Mohl bys zobrazit osu y v pořadí vzestupně?",
            "Sloupcový graf pro zjištění počtu zemí leteckých společností, jejichž název začíná na \"Orbit“. Zobraz prosím osu y vzestupně."
        ],
        "irrelevant_tables": [
            "airports",
            "routes"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1380@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id ORDER BY avg(trust) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id ORDER BY avg(trust) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "epinions_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "avg(trust)",
            "x_data": [
                [
                    "Rosie",
                    "Mark",
                    "Terry",
                    "Nancy",
                    "Roxi"
                ]
            ],
            "y_data": [
                [
                    4.5,
                    4.666666666666667,
                    5,
                    8,
                    10
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti jméno každého cílového uživatele a průměrné skóre důvěryhodnosti. Vizualizuj je pomocí sloupcového grafu, seřaď osu y od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "review",
            "item"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1382@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY avg(T2.rating) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY avg(T2.rating) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "epinions_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "avg(T2.rating)",
            "x_data": [
                [
                    "Mark",
                    "Helen"
                ]
            ],
            "y_data": [
                [
                    7,
                    7.333333333333332
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro každého uživatele vrať jeho jméno a průměrné hodnocení recenzí, které zadal. Zobraz je jako sloupcový graf, mohl bys osu y zobraz vzestupně?"
        ],
        "irrelevant_tables": [
            "trust",
            "item"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1085@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY COUNT(Country) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM member GROUP BY Country ORDER BY COUNT(Country) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "United States",
                    "Canada"
                ]
            ],
            "y_data": [
                [
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet členů v jednotlivých zemích a seřazení osy y v sestupném pořadí.",
            "Vykresli, kolik zemí seskupených podle zemí jako sloupcový graf. Mohl bys zobrazit osu y od nejvyšší po nejnižší, prosím?"
        ],
        "irrelevant_tables": [
            "round",
            "college"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1087@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY COUNT(College_Location) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT College_Location , COUNT(College_Location) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID GROUP BY College_Location ORDER BY COUNT(College_Location) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "College_Location",
            "y_name": "COUNT(College_Location)",
            "x_data": [
                [
                    "McGill",
                    "Western Ontario",
                    "St. Francis Xavier",
                    "Ottawa",
                    "Minnesota"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY College_Location",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf zobrazující počet členů, kteří navštívili jednotlivé koleje, zobrazený na ose y od nejvyššího počtu po nejnižší."
        ],
        "irrelevant_tables": [
            "round"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1091@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(*) FROM member GROUP BY Country ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "decoration_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Canada",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    4,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz jednotlivé země a počet členů z každé z nich. Vizualizuj je pomocí sloupcového grafu, seřaď podle osy y od nejnižšího po nejvyšší, prosím.",
            "Celkový počet seskupený podle zemí vynes do sloupcového grafu a seřaď podle osy y od nejnižšího po nejvyšší.",
            "Zobraz jednotlivé země a počet členů z každé z nich pomocí sloupcového grafu a mohl bys je seřadit podle osy Y?"
        ],
        "irrelevant_tables": [
            "college",
            "round"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3038@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM train GROUP BY Name ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Quilon Fast Passenger",
                    "Parasuram Express",
                    "Madurai Fast Passenger",
                    "Jayanthi Janatha Express",
                    "Island Express",
                    "Guruvayur Express",
                    "Ananthapuri Express"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf, seskup podle jména a vypočítej celkový počet každé skupiny, mohl bys zobrazit jméno v sestupném pořadí, prosím?"
        ],
        "irrelevant_tables": [
            "train_station",
            "station"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3043@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM station GROUP BY Location ORDER BY COUNT(Location) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    10
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet umístění z různých míst a seznam celkového počtu od nejnižšího po nejvyšší pořadí.",
            "Na kolika místech? Nakresli sloupcový graf, seřaď celkový počet od nejnižšího po nejvyšší.",
            "Sloupcový graf ukazuje místa. Osa Y je seřazena vzestupně."
        ],
        "irrelevant_tables": [
            "train_station",
            "train"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3045@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , SUM(Number_of_Platforms) FROM station GROUP BY Location ORDER BY SUM(Number_of_Platforms) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "SUM(Number_of_Platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Uveď sloupcový graf o počtu plošin v různých lokalitách, zobraz celkový počet vzestupně.",
            "Vytvoř sloupcový graf zobrazující celkový počet platforem v jednotlivých lokalitách a zobraz celkový počet vzestupně.",
            "Jaký je počet platforem v jednotlivých lokalitách? Zobraz srovnání pomocí sloupcového grafu, chci ho seřadit podle Y vzestupně."
        ],
        "irrelevant_tables": [
            "train",
            "train_station"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3050@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Total_Passengers FROM station WHERE LOCATION != 'London' ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Total_Passengers",
            "x_data": [
                [
                    "Birmingham New Street",
                    "Glasgow Central"
                ]
            ],
            "y_data": [
                [
                    36.330999999999996,
                    29.658
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz jména a celkový počet cestujících pro všechny vlakové stanice, které nejsou v Londýně. Vizualizuj je pomocí sloupcového grafu a chci je seřadit vzestupně podle jmen, prosím."
        ],
        "irrelevant_tables": [
            "train",
            "train_station"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3052@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(number_of_platforms) FROM station GROUP BY LOCATION ORDER BY Location ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(number_of_platforms)",
            "x_data": [
                [
                    "Birmingham",
                    "Glasgow",
                    "London"
                ]
            ],
            "y_data": [
                [
                    13,
                    17,
                    140
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz všechny lokality a celkový počet nástupišť pro všechna vlaková nádraží v každé lokalitě ve sloupcovém grafu a seřaď je vzestupně podle lokality.",
            "Sloupcový graf celkového počtu plošin z každého místa a zobrazení na ose X vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "train",
            "train_station"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3053@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , sum(total_passengers) FROM station GROUP BY LOCATION ORDER BY Location DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "train_station",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "sum(total_passengers)",
            "x_data": [
                [
                    "London",
                    "Glasgow",
                    "Birmingham"
                ]
            ],
            "y_data": [
                [
                    498.50700000000006,
                    29.658,
                    36.330999999999996
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - umístění, osa y - součet cestujících celkem. Chci je seřadit sestupně podle umístění, prosím."
        ],
        "irrelevant_tables": [
            "train",
            "train_station"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "38@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype ORDER BY AllergyType DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT AllergyType , count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype ORDER BY AllergyType DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "AllergyType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "food",
                    "environmental",
                    "animal"
                ]
            ],
            "y_data": [
                [
                    28,
                    23,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o tom, kolik studentů je postiženo jednotlivými typy alergií? Mohl bys je seřadit sestupně podle typu alergie?"
        ],
        "irrelevant_tables": [
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "41@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Fname , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY AVG(Age) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Fname , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY Fname ORDER BY AVG(Age) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Fname",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "Susan",
                    "Linda",
                    "Stacy",
                    "Tracy",
                    "Lisa",
                    "Jandy",
                    "Shiela",
                    "Sarah"
                ]
            ],
            "y_data": [
                [
                    16,
                    18,
                    18,
                    19,
                    19.5,
                    20,
                    21,
                    23
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Fname",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž průměrný věk všech studentek a seskup je podle křestního jména do sloupcového grafu a mohl bys seřadit průměrný věk podle vzestupného pořadí?"
        ],
        "irrelevant_tables": [
            "Allergy_Type",
            "Has_Allergy"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "42@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY COUNT(LName) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY COUNT(LName) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "LName",
            "y_name": "COUNT(LName)",
            "x_data": [
                [
                    "Apap",
                    "Cheng",
                    "Jones",
                    "Kim",
                    "Lee",
                    "Nelson",
                    "Prater",
                    "Schmidt",
                    "Smith"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY LName",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o počtu příjmení všech studentů, jejichž pohlaví je F. Seřaď je vzestupně podle osy y.",
            "Sloupcový graf zobrazující počet příjmení všech studentek. Jejich pohlaví je F a jsou seřazeny vzestupně podle osy y, prosím."
        ],
        "irrelevant_tables": [
            "Has_Allergy",
            "Allergy_Type"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "44@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT LName , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY AVG(Age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT LName , AVG(Age) FROM Student WHERE Sex = 'F' GROUP BY LName ORDER BY AVG(Age) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "LName",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "Schmidt",
                    "Jones",
                    "Cheng",
                    "Nelson",
                    "Smith",
                    "Kim",
                    "Prater",
                    "Apap",
                    "Lee"
                ]
            ],
            "y_data": [
                [
                    26,
                    21,
                    21,
                    20,
                    19,
                    19,
                    18,
                    18,
                    16
                ]
            ],
            "classify": [],
            "describe": "GROUP BY LName",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Ukaž průměrný věk všech studentek a seskup je podle příjmení pomocí sloupcového grafu a mohl bys seřadit průměrný věk v sestupném pořadí?"
        ],
        "irrelevant_tables": [
            "Allergy_Type",
            "Has_Allergy"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "47@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType ORDER BY COUNT(AllergyType) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT AllergyType , COUNT(AllergyType) FROM Allergy_type GROUP BY AllergyType ORDER BY COUNT(AllergyType) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "AllergyType",
            "y_name": "COUNT(AllergyType)",
            "x_data": [
                [
                    "food",
                    "animal",
                    "environmental"
                ]
            ],
            "y_data": [
                [
                    7,
                    4,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY AllergyType",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet jednotlivých typů alergií ve sloupcovém grafu, seřazeném sestupně podle počtu typů alergií.",
            "Vytvoř sloupcový graf zobrazující počet typů alergií v jednotlivých typech alergií a seřaď je sestupně podle počtu typů alergií.",
            "Jaký je počet jednotlivých typů alergií? Vrať sloupcový graf a seřaď je sestupně podle počtu alergických typů."
        ],
        "irrelevant_tables": [
            "Has_Allergy",
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "49@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT LName , COUNT(LName) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = \"food\") GROUP BY LName ORDER BY COUNT(LName) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = \"food\") GROUP BY LName ORDER BY COUNT(LName) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "LName",
            "y_name": "COUNT(LName)",
            "x_data": [
                [
                    "Adams",
                    "Andreou",
                    "Brody",
                    "Brown",
                    "Cheng",
                    "Davis",
                    "Epp",
                    "Goldman",
                    "Jones",
                    "Nelson",
                    "Prater",
                    "Rugh",
                    "Schmidt",
                    "Simms",
                    "Smith",
                    "Tai",
                    "Thornton",
                    "Wilson",
                    "Pang"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY LName",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš příjmení žáků, kteří nemají žádný typ alergie na potraviny, a spočítej je v grafu. Osu Y znázorni od nejnižšího po nejvyšší pořadí.",
            "Jaké je příjmení každého žáka, který není alergický na žádný druh potraviny? Spočítej je pomocí sloupcového grafu, seřaď celkový počet vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "53@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT LName , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = \"Cat\") ORDER BY LName ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT LName , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = \"Cat\") ORDER BY LName ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "LName",
            "y_name": "Age",
            "x_data": [
                [
                    "Apap",
                    "Lee"
                ]
            ],
            "y_data": [
                [
                    18,
                    17
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaká jsou příjmení a věk studentů, kteří jsou alergičtí na mléko a kočku? Vykresli je jako sloupcový graf, chci zobrazit LName vzestupně."
        ],
        "irrelevant_tables": [
            "Allergy_Type"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "56@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Allergy , COUNT(T1.Allergy) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" GROUP BY T1.Allergy ORDER BY T1.Allergy ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Allergy , COUNT(T1.Allergy) FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" GROUP BY T1.Allergy ORDER BY T1.Allergy ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Allergy",
            "y_name": "COUNT(Allergy)",
            "x_data": [
                [
                    "Anchovies",
                    "Cat",
                    "Dog",
                    "Eggs",
                    "Milk",
                    "Ragweed",
                    "Shellfish",
                    "Tree Pollen",
                    "Grass Pollen"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Allergy",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaký je počet jednotlivých alergií, které má dívka jménem Lisa? Zobraz je jako sloupcový graf a seřaď je podle celkového počtu vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "58@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , avg(age) FROM Student GROUP BY sex ORDER BY avg(age) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , avg(age) FROM Student GROUP BY sex ORDER BY avg(age) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "M",
                    "F"
                ]
            ],
            "y_data": [
                [
                    19.5,
                    19.7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaký je průměrný věk studentů a studentek? Načrtni je do sloupcového grafu a seřaď Y vzestupně.",
            "Ukaž průměrný věk studentů a studentek. Vizualizuj pomocí sloupcového grafu, chci je seřadit podle průměrného věku vzestupně, prosím.",
            "Zobraz průměrný věk studentů a studentek pomocí sloupcového grafu, Y seřaď vzestupně.",
            "Sloupcový graf o tom, jaký je průměrný věk studentů a studentek, a pořadí na ose y vzestupně.",
            "Vizualizuj sloupcový graf o tom, jaký je průměrný věk studentů a studentek, a uveď Y v pořadí vzestupně.",
            "Ukaž mi průměrný věk podle pohlaví v histogramu a seřaď osu Y vzestupně."
        ],
        "irrelevant_tables": [
            "Allergy_Type",
            "Has_Allergy"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "59@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT city_code , count(*) FROM Student GROUP BY city_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT city_code , count(*) FROM Student GROUP BY city_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ATL",
                    "BOS",
                    "CHI",
                    "DAL",
                    "DET",
                    "HOU",
                    "LON",
                    "LOS",
                    "NAR",
                    "PEK",
                    "ROC",
                    "SFO",
                    "YYZ",
                    "HKG",
                    "NYC",
                    "PHL",
                    "WAS",
                    "BAL",
                    "PIT"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz všechna města a odpovídající počet studentů pomocí sloupcového grafu. Mohl bys je seřadit vzestupně podle celkového počtu?",
            "Zobraz všechna města a odpovídající počet studentů. Vykresli je jako sloupcový graf, chci je zobrazit vzestupně podle celkového počtu.",
            "Sloupcový graf o tom, kolik studentů žije v jednotlivých městech, mohl bys je seřadit vzestupně podle celkového počtu?",
            "Vykresli celkový počet seskupený podle kódu města jako sloupcový graf a mohl bys ho vypsat vzestupně podle osy y?",
            "Vrať histogram o tom, kolik studentů žije v jednotlivých městech, a uveď jejich celkový počet ve vzestupném pořadí."
        ],
        "irrelevant_tables": [
            "Has_Allergy",
            "Allergy_Type"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "61@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT AllergyType , count(*) FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "AllergyType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "environmental",
                    "animal",
                    "food"
                ]
            ],
            "y_data": [
                [
                    3,
                    4,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf s informacemi o tom, jaké jsou typy alergií a kolik alergií odpovídá každému z nich, zobraz je pomocí Y od nejnižšího po nejvyšší.",
            "Zobraz všechny typy alergií a počet alergií v každém typu. Zobraz je jako sloupcový graf, od nejnižšího po nejvyšší na ose Y .",
            "Sloupcový graf pro zobrazení celkového počtu z různých typů alergií a zobrazení podle Y vzestupně.",
            "Zobraz všechny typy alergií a počet alergií v jednotlivých typech ve sloupcovém grafu a seřaď celkový počet vzestupně."
        ],
        "irrelevant_tables": [
            "Student",
            "Has_Allergy"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1324@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf celkového počtu z každé strany, zobraz celkový počet vzestupně, prosím.",
            "Uveď mi histogram o tom, jaké jsou jednotlivé strany zastupitelstva? Uveď název strany a počet zástupců v každé straně a celkový počet v pořadí vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "election"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1328@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY Party ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , COUNT(Party) FROM representative GROUP BY Party ORDER BY Party ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election_representative",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(Party)",
            "x_data": [
                [
                    "Democratic",
                    "Republican"
                ]
            ],
            "y_data": [
                [
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet zástupců jednotlivých stran, seřaď X vzestupně."
        ],
        "irrelevant_tables": [
            "election"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "483@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Competition , count(*) FROM MATCH GROUP BY Competition ORDER BY Competition ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Competition , count(*) FROM MATCH GROUP BY Competition ORDER BY Competition ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "city_record",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Competition",
            "y_name": "count(*)",
            "x_data": [
                [
                    "1994 FIFA World Cup qualification",
                    "2002 FIFA World Cup qualification",
                    "Friendly match"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjistit počet zápasů v různých soutěžích. Vizualizuj je pomocí sloupcového grafu, chci je zobrazit vzestupně podle osy X.",
            "Sloupcový graf: osa x - soutěž, osa y - celkový počet, a zobrazení podle osy X vzestupně."
        ],
        "irrelevant_tables": [
            "city",
            "temperature"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1015@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category , count(*) FROM mailshot_campaigns GROUP BY product_category ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_campaigns_ecommerce",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category",
            "y_name": "count(*)",
            "x_data": [
                [
                    "food",
                    "clothes"
                ]
            ],
            "y_data": [
                [
                    11,
                    9
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz všechny jednotlivé kategorie produktů spolu s počtem e-mailových zásilek v každé kategorii ve sloupcovém grafu a zobraz je od nejvyššího po nejnižší celkový počet, prosím.",
            "Zobraz všechny kategorie produktů spolu s počtem e-mailových zásilek v každé kategorii. Vizualizuj je pomocí sloupcového grafu a zobraz je od nejvyššího po nejnižší celkový počet, prosím."
        ],
        "irrelevant_tables": [
            "Products",
            "Mailshot_Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1017@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT address_type_code , COUNT(address_type_code) FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id GROUP BY address_type_code ORDER BY COUNT(address_type_code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT address_type_code , COUNT(address_type_code) FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id GROUP BY address_type_code ORDER BY COUNT(address_type_code) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_campaigns_ecommerce",
        "vis_obj": {
            "chart": "bar",
            "x_name": "address_type_code",
            "y_name": "COUNT(address_type_code)",
            "x_data": [
                [
                    "Shipping",
                    "Billing"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY address_type_code",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet adres zákazníků v jednotlivých typech adres pomocí sloupcového grafu, osu y zobraz vzestupně."
        ],
        "irrelevant_tables": [
            "Mailshot_Customers",
            "Mailshot_Campaigns"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1019@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT premises_type , COUNT(premises_type) FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id GROUP BY premises_type ORDER BY premises_type DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT premises_type , COUNT(premises_type) FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id GROUP BY premises_type ORDER BY premises_type DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customers_campaigns_ecommerce",
        "vis_obj": {
            "chart": "bar",
            "x_name": "premises_type",
            "y_name": "COUNT(premises_type)",
            "x_data": [
                [
                    "Warehouse",
                    "Residence",
                    "Office"
                ]
            ],
            "y_data": [
                [
                    6,
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY premises_type",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Uveď sloupcový graf počtu adres zákazníků v jednotlivých typech prostor, osu x zobraz v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "Mailshot_Customers",
            "Products"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1022@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT outcome_code , count(*) FROM mailshot_customers GROUP BY outcome_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customers_campaigns_ecommerce",
        "vis_obj": {
            "chart": "bar",
            "x_name": "outcome_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "No Response",
                    "Order"
                ]
            ],
            "y_data": [
                [
                    5,
                    10
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz kód výsledku mailshotů spolu s počtem mailshotů v každém kódu výsledku. Zakresli je jako sloupcový graf a zobraz podle celkového počtu vzestupně.",
            "Zobraz kód výsledku mailshotů spolu s počtem mailshotů v každém kódu výsledku ve sloupcovém grafu a osu y zobraz vzestupně."
        ],
        "irrelevant_tables": [
            "Premises",
            "Order_Items"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2594@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "poker_player",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nationality",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Russia",
                    "Bulgaria"
                ]
            ],
            "y_data": [
                [
                    6,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf, kolik lidí je jednotlivých národností, seřaď je podle osy y od nejvyššího počtu po nejnižší.",
            "Jaké jsou různé národnosti lidí a odpovídající počet lidí z každého národa. Vizualizuj je pomocí sloupcového grafu a seřaď je podle osy Y od nejvyšší po nejnižší.",
            "Vizualizuj sloupcový graf o tom, kolik lidí je jednotlivých národností. Seřaď je sestupně podle Y, prosím.",
            "Kolik lidí je jednotlivých národností? Vizualizuj je pomocí sloupcového grafu, seřaď Y od nejvyššího po nejnižší, prosím.",
            "Vrať sloupcový graf o tom, jaké jsou různé národnosti lidí a odpovídající počet lidí z každého národa? Seřaď Y od nejvyššího po nejnižší pořadí, prosím.",
            "Nakresli sloupcový graf závislosti národnosti na celkovém počtu a seřaď jej od nejvyššího po nejnižší celkový počet."
        ],
        "irrelevant_tables": [
            "poker_player"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "909@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_category_code , avg(product_price) FROM products GROUP BY product_category_code ORDER BY avg(product_price) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_code",
            "y_name": "avg(product_price)",
            "x_data": [
                [
                    "Food",
                    "Book",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    2.88,
                    35,
                    66.67
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf pro průměrnou cenu výrobků v jednotlivých kategoriích, seřaď je podle Y od nejnižší po nejvyšší.",
            "Sloupcový graf pro zobrazení průměrné ceny produktu z různých kódů kategorií produktů a chci zobrazit vzestupně podle osy Y.",
            "Vrátí průměrnou cenu produktů, které mají jednotlivé kódy kategorií, ve sloupcovém grafu a na ose y uvede pořadí od nejnižšího po nejvyšší.",
            "Sloupcový graf o tom, jaká je průměrná cena produktů v jednotlivých kategoriích, a seřazení od nejnižší po nejvyšší na ose y."
        ],
        "irrelevant_tables": [
            "Customers",
            "Complaints"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "911@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT product_name , count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Chocolate",
                    "The Great Gatsby",
                    "Mouse",
                    "Keyboard"
                ]
            ],
            "y_data": [
                [
                    6,
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké jsou názvy všech různých produktů a kolik stížností obdržel každý z nich. Zobraz sloupcový graf a seřaď osu Y sestupně.",
            "Nakresli sloupcový graf, který zobrazí, jaké jsou názvy všech různých produktů a kolik stížností každý z nich obdržel, zobraz od nejvyššího k nejnižšímu na ose Y.",
            "Vypiš názvy všech produktů spolu s počtem stížností, které obdržely, pomocí sloupcového grafu a zobraz je od nejvyššího po nejnižší počet na ose Y."
        ],
        "irrelevant_tables": [
            "Staff",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "690@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM singer GROUP BY country ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "France",
                    "United States",
                    "Netherlands"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf země versus celkový počet a seřaď celkový počet sestupně.",
            "Vrať sloupcový graf s údaji o počtu zpěváků z jednotlivých zemí a seřaď celkový počet sestupně.",
            "Zobraz všechny země a počet zpěváků v každé zemi ve sloupcovém grafu, osu Y zobraz od nejvyššího po nejnižší pořadí.",
            "Zobraz všechny země a počet zpěváků v každé zemi. Zobraz sloupcový graf a mohl bys jej seřadit podle osy Y od nejvyššího po nejnižší?",
            "Udělej mi histogram, kolik zpěváků pochází z jednotlivých zemí, a seřaď celkový počet sestupně."
        ],
        "irrelevant_tables": [
            "singer_in_concert",
            "concert"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "692@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014 GROUP BY Name ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "John Nizinik",
                    "Justin Brown",
                    "Rose White",
                    "Timbaland",
                    "Tribal King"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaká jsou jména zpěváků, kteří vystoupili na koncertě v roce 2014, a spočítej je pomocí sloupcového grafu, osu X zobraz vzestupně."
        ],
        "irrelevant_tables": [
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "700@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "concert_singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Tribal King",
                    "Timbaland",
                    "Rose White",
                    "Justin Brown",
                    "John Nizinik"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o tom, jaká jsou jména zpěváků a počet koncertů pro každou osobu? Zobraz jména v sestupném pořadí.",
            "Seznam jmen zpěváků a počet koncertů pro každého zpěváka se sloupcovým grafem. Chci je seřadit podle Name in sestupně.",
            "Udělej mi histogram toho, jaká jsou jména zpěváků a počet koncertů pro každou osobu. Seřaď je podle jména sestupně, prosím."
        ],
        "irrelevant_tables": [
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "816@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Statement_Details , SUM(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details ORDER BY SUM(Account_Details) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Statement_Details , SUM(Account_Details) FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY Statement_Details ORDER BY SUM(Account_Details) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Statement_Details",
            "y_name": "SUM(Account_Details)",
            "x_data": [
                [
                    "Private Project",
                    "Open Project"
                ]
            ],
            "y_data": [
                [
                    21335,
                    20316
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Statement_Details",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz součet údajů o účtu pro různé údaje výpisu ve sloupcovém grafu a seřaď je sestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "Projects",
            "Documents"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "827@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Type_Code , count(*) FROM Documents GROUP BY document_type_code ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "FM",
                    "CV",
                    "PP",
                    "BK"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Seznam kódů typů dokumentů a počet dokumentů v každém kódu. Vizualizuj je pomocí sloupcového grafu, seřazení od nejnižšího po nejvyšší podle Y.",
            "Kolik dokladů existuje od každého typu? Zobraz sloupcový graf, mohl bys zobrazit od nejnižšího po nejvyšší celkový počet?",
            "Seznam kódů typů dokumentů a počet dokumentů v každém kódu se sloupcovým grafem. Chci je seřadit vzestupně podle osy y.",
            "Vrať sloupcový graf o tom, kolik dokumentů je jednotlivých typů, a seřaď je vzestupně podle celkového počtu.",
            "Uveď mi histogram o tom, kolik je dokumentů jednotlivých typů, a seřaď je od nejnižšího po nejvyšší podle Y."
        ],
        "irrelevant_tables": [
            "Ref_Budget_Codes",
            "Projects"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "829@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description ORDER BY Document_Type_Description ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Document_Type_Description , COUNT(Document_Type_Description) FROM Ref_document_types GROUP BY Document_Type_Description ORDER BY Document_Type_Description ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Type_Description",
            "y_name": "COUNT(Document_Type_Description)",
            "x_data": [
                [
                    "excellent",
                    "fun",
                    "good",
                    "very good"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Document_Type_Description",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro zobrazení počtu popisů typu dokumentu z různých typů popisu dokumentu a zobrazení vzestupně podle osy x.",
            "Kolik typů dokumentů pro různé typy popisu dokumentů existuje? Vizualizuj pomocí sloupcového grafu, seřaď vzestupně podle osy x.",
            "Zobraz počet typů dokumentů pro různé typy popisů dokumentů ve sloupcovém grafu a zobraz je vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "Documents_with_Expenses",
            "Statements"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "833@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Budget_Type_Description , COUNT(Budget_Type_Description) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY Budget_Type_Description ORDER BY COUNT(Budget_Type_Description) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Budget_Type_Description , COUNT(Budget_Type_Description) FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code GROUP BY Budget_Type_Description ORDER BY COUNT(Budget_Type_Description) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Budget_Type_Description",
            "y_name": "COUNT(Budget_Type_Description)",
            "x_data": [
                [
                    "Government",
                    "Self founded",
                    "Organisation"
                ]
            ],
            "y_data": [
                [
                    6,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Budget_Type_Description",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet dokladů pro různé typy popisu rozpočtu ve sloupcovém grafu a seřaď je sestupně podle celkového počtu.",
            "Vrať sloupcový graf, který zobrazí, kolik dokladů pro různé typy popisu rozpočtu je seřazeno sestupně podle Y."
        ],
        "irrelevant_tables": [
            "Statements",
            "Ref_Document_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "847@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code  ORDER BY COUNT(Document_Date) DESC",
                "binning": "BIN Document_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code  ORDER BY COUNT(Document_Date) DESC BIN Document_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Date",
            "y_name": "COUNT(Document_Date)",
            "x_data": [
                [
                    "Wed",
                    "Fri",
                    "Thur",
                    "Sun",
                    "Sat",
                    "Mon",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    2,
                    2,
                    2,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Document_Date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet dokumentů vytvořených v jednotlivých dnech a datum dokumentu rozděl podle dnů v týdnu pomocí sloupcového grafu, seřaď podle osy y sestupně.",
            "Kolik dokumentů se vytvoří za den? Rozděl datum dokumentu podle dnů v týdnu do sloupcového grafu, a mohl bys uvést osu y v sestupném pořadí?"
        ],
        "irrelevant_tables": [
            "Ref_Budget_Codes",
            "Accounts"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "851@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY COUNT(Document_Date) DESC",
                "binning": "BIN Document_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Document_Date , COUNT(Document_Date) FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY Document_Type_Description ORDER BY COUNT(Document_Date) DESC BIN Document_Date BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Date",
            "y_name": "COUNT(Document_Date)",
            "x_data": [
                [
                    "Wed",
                    "Fri",
                    "Thur",
                    "Sat",
                    "Sun",
                    "Mon",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1,
                    2,
                    1,
                    0
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    1,
                    2,
                    1,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "excellent",
                "fun",
                "good"
            ],
            "describe": "GROUP BY Document_Type_Description, BIN Document_Date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik dokumentů se vytvoří za den? Rozděl datum dokumentu podle dne v týdnu a seskup je podle popisu typu dokumentu se skládaným sloupcovým grafem, chci seřadit Y v sestupném pořadí.",
            "Zobraz počet dokumentů vytvořených v jednotlivých dnech a datum dokumentů rozděl podle dnů v týdnu a seskup je podle typu dokumentu s popisem pomocí sloupcového grafu. Mohl bys je seřadit podle osy Y sestupně, prosím?"
        ],
        "irrelevant_tables": [
            "Ref_Budget_Codes",
            "Projects"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "853@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Document_Date , COUNT(Document_Date) FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'  ORDER BY COUNT(Document_Date) DESC",
                "binning": "BIN Document_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Document_Date , COUNT(Document_Date) FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'  ORDER BY COUNT(Document_Date) DESC BIN Document_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Docs_and_Epenses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Document_Date",
            "y_name": "COUNT(Document_Date)",
            "x_data": [
                [
                    "Wed",
                    "Thur",
                    "Sun",
                    "Tue",
                    "Sat",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Document_Date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobrazení počtu dokladů v jednotlivých dnech pro všechny doklady na projektu s podrobnostmi \"Graph Database project\" a datum dokladu rozděl podle dnů v týdnu pomocí sloupcového grafu a zobraz jej podle Y od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [
            "Documents_with_Expenses",
            "Accounts"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1987@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Policy_Type_Code , count(*) FROM policies GROUP BY policy_type_code ORDER BY Policy_Type_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Policy_Type_Code , count(*) FROM policies GROUP BY policy_type_code ORDER BY Policy_Type_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_and_eClaims",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Policy_Type_Code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Deputy",
                    "Jurisdiction",
                    "Normal",
                    "Uniformed"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    1,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - kód typu politiky, osa y - celkový počet, a řazení vzestupně podle osy X."
        ],
        "irrelevant_tables": [
            "Customers",
            "Claim_Headers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1991@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC",
                "binning": "BIN Date_Claim_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Claim_Made , COUNT(Date_Claim_Made) FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims )  ORDER BY COUNT(Date_Claim_Made) DESC BIN Date_Claim_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Claim_Made",
            "y_name": "COUNT(Date_Claim_Made)",
            "x_data": [
                [
                    "Fri",
                    "Thur",
                    "Wed",
                    "Tue",
                    "Sun",
                    "Sat",
                    "Mon"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Claim_Made BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro všechny reklamace, jejichž nárokovaná částka je vyšší než průměr, rozděl datum reklamace do intervalů podle dnů v týdnu a spočítej je pro vizualizaci ve sloupcovém grafu, seřazeného od nejvyšší po nejnižší hodnotu podle osy y.",
            "Které ze všech pohledávek mají nárokovanou částku vyšší než průměr? Prosím, rozděl datum vzniku nároku na týdenní intervaly a spočítej je, abys mohl zobrazit sloupcový graf. Mohl bys zobrazit sestupně podle osy y?"
        ],
        "irrelevant_tables": [
            "Customer_Policies",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2010@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Payment_Method_Code , COUNT(Payment_Method_Code) FROM Payments GROUP BY Payment_Method_Code ORDER BY Payment_Method_Code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Payment_Method_Code",
            "y_name": "COUNT(Payment_Method_Code)",
            "x_data": [
                [
                    "Visa",
                    "MasterCard",
                    "Discover Card",
                    "American Express"
                ]
            ],
            "y_data": [
                [
                    4,
                    7,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Payment_Method_Code",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Porovnej četnost jednotlivých kódů platebních metod pomocí sloupcového grafu a mohl bys zobrazit osu x v sestupném pořadí, prosím?",
            "Vykresli počet kódů platebních metod seskupených podle kódu platební metody jako sloupcový graf, seřazený sestupně podle kódu Payment_Method_Code."
        ],
        "irrelevant_tables": [
            "Claims",
            "Customers"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2024@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) DESC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) DESC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "U plateb zpracovaných pomocí služby Visa rozděl den platby do intervalu rok a spočítej je pro sloupcový graf, seřazený od nejvyšší po nejnižší hodnotu podle osy y.",
            "U těch plateb, které byly zpracovány pomocí Visa, mi prosím ukaž počet plateb v jednotlivých letech pomocí sloupcového grafu. Zobraz je sestupně podle toho, kolikrát byla platba provedena."
        ],
        "irrelevant_tables": [
            "Customers",
            "Settlements"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2028@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) DESC",
                "binning": "BIN Date_Payment_Made BY YEAR"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , AVG(Amount_Payment) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY AVG(Amount_Payment) DESC BIN Date_Payment_Made BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "AVG(Amount_Payment)",
            "x_data": [
                [
                    "2017",
                    "2018"
                ]
            ],
            "y_data": [
                [
                    262456.6666666667,
                    7343
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY YEAR",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypočítej průměrnou částku za všechny platby zpracované pomocí Visa v jednotlivých letech pomocí sloupcového grafu a mohl bys seřadit osu y v sestupném pořadí?"
        ],
        "irrelevant_tables": [
            "Settlements",
            "Claims"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2030@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Amount_Payment ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa' ORDER BY Amount_Payment ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "Amount_Payment",
            "x_data": [
                [
                    "2018-02-24",
                    "2017-05-28",
                    "2017-05-03",
                    "2017-12-16"
                ]
            ],
            "y_data": [
                [
                    7343,
                    155654,
                    172309,
                    459407
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobrazení částky pro všechny platby zpracované s Visa s rozdělením data platby pomocí sloupcového grafu, chci seřadit vzestupně podle Amount_Payment, prosím.",
            "Které platby byly zpracovány pomocí služby Visa? Vypiš datum a částku pomocí sloupcového grafu a seřaď je podle Y od nejnižší po nejvyšší, prosím.",
            "Uveď mi histogram, který zobrazí datum a částku všech plateb zpracovaných pomocí služby Visa a zobrazí je vzestupně podle osy Y, prosím."
        ],
        "irrelevant_tables": [
            "Claims",
            "Settlements"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2031@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC",
                "binning": "BIN Date_Payment_Made BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Payment_Made , COUNT(Date_Payment_Made) FROM Payments WHERE Payment_Method_Code = 'Visa'  ORDER BY COUNT(Date_Payment_Made) ASC BIN Date_Payment_Made BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "insurance_policies",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Payment_Made",
            "y_name": "COUNT(Date_Payment_Made)",
            "x_data": [
                [
                    "Fri",
                    "Mon",
                    "Thur",
                    "Tue",
                    "Sun",
                    "Wed",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Payment_Made BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "U plateb zpracovaných pomocí karty Visa mi zobraz počet plateb za každý den v týdnu pomocí sloupcového grafu a seřaď celkový počet vzestupně.",
            "U plateb zpracovávaných pomocí služby Visa zařaď den platby do intervalu den v týdnu, spočítej je do sloupcového grafu a seřaď celkový počet vzestupně."
        ],
        "irrelevant_tables": [
            "Settlements",
            "Claims"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "709@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Police_force , COUNT(*) FROM county_public_safety GROUP BY Police_force ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "county_public_safety",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Police_force",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "RCMP",
                    "Central Saanich Police",
                    "Abbotsford Police Department"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf o tom, kolik krajů odpovídá každé policejní síle? Mohl bys je seřadit podle osy y sestupně?",
            "Zobraz sloupcový graf o tom, kolik krajů odpovídá jednotlivým policejním sborům, osa Y seřazena sestupně."
        ],
        "irrelevant_tables": [
            "city"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "171@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year , avg(games) FROM home_game where team_id = 'BS1' GROUP BY YEAR ORDER BY year DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year , avg(games) FROM home_game where team_id = 'BS1' GROUP BY YEAR ORDER BY year DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "baseball_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "avg(attendance)",
            "x_data": [
                [
                    1875,
                    1874,
                    1873,
                    1872,
                    1871
                ]
            ],
            "y_data": [
                [
                    12.333333333333334,
                    17.5,
                    10.0,
                    21.0,
                    8.5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaký je průměrný počet zápasů odehraných týmem BS1 na domácích zápasech v jednotlivých letech? Vykresli je jako čárový graf a mohl bys zobrazit rok v pořadí ASC?",
            "Vrať lineární graf o tom, jaký je průměrný počet zápasů odehraných týmem BS1 na domácích zápasech v jednotlivých letech? Zobraz vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "salary",
            "manager_award_vote"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2451@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Highschooler GROUP BY name ORDER BY COUNT(name) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "network_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Alexis",
                    "Andrew",
                    "Austin",
                    "Brittany",
                    "Cassandra",
                    "Haley",
                    "Jessica",
                    "John",
                    "Kris",
                    "Kyle",
                    "Logan",
                    "Tiffany",
                    "Gabriel",
                    "Jordan"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Můžeš mi ukázat sloupcový graf, který by odpověděl na otázku: kolik lidí s různými jmény pro každého středoškoláka existuje? Zobraz od nejnižšího po nejvyšší počet jmen.",
            "Spočítej jména jednotlivých středoškoláků pomocí sloupcového grafu, zobraz od nejnižšího po nejvyšší počet jmen."
        ],
        "irrelevant_tables": [
            "Friend",
            "Likes"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2453@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , AVG(grade) FROM Highschooler GROUP BY name ORDER BY AVG(grade) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "network_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "AVG(grade)",
            "x_data": [
                [
                    "Logan",
                    "Kyle",
                    "John",
                    "Jessica",
                    "Austin",
                    "Alexis",
                    "Jordan",
                    "Kris",
                    "Haley",
                    "Gabriel",
                    "Brittany",
                    "Andrew",
                    "Tiffany",
                    "Cassandra"
                ]
            ],
            "y_data": [
                [
                    12,
                    12,
                    12,
                    11,
                    11,
                    11,
                    10.5,
                    10,
                    10,
                    10,
                    10,
                    10,
                    9,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o tom, jaká jsou jména a průměrné známky jednotlivých středoškoláků, seřaď Y od nejvyššího po nejnižší.",
            "Zobraz jména a průměrné známky jednotlivých středoškoláků pomocí sloupcového grafu, mohl bys je seřadit sestupně podle osy Y?",
            "Jaká jsou jména a průměrné známky jednotlivých středoškoláků? Vypiš je jako sloupcový graf a mohl bys je uvést sestupně na ose y?",
            "Sloupcový graf pro zobrazení průměrné známky z různých jmen. Mohl bys zobrazit osu y v sestupném pořadí?",
            "Zobraz sloupcový graf pro to, jaká jsou jména a průměrné známky pro každého středoškoláka? Mohl bys zobrazit osu y v sestupném pořadí?"
        ],
        "irrelevant_tables": [
            "Friend",
            "Likes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2454@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY name ORDER BY COUNT(name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "network_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Jordan",
                    "Gabriel",
                    "Tiffany",
                    "Logan",
                    "Kyle",
                    "Kris",
                    "Jessica",
                    "Haley",
                    "Cassandra",
                    "Austin",
                    "Andrew",
                    "Alexis"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet jmen středoškoláků pomocí sloupcového grafu a seřaď je podle celkového počtu sestupně."
        ],
        "irrelevant_tables": [
            "Likes"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2455@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.name , SUM(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY T2.name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "network_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "SUM(count(*))",
            "x_data": [
                [
                    "Alexis",
                    "Andrew",
                    "Austin",
                    "Cassandra",
                    "Gabriel",
                    "Haley",
                    "Jessica",
                    "Jordan",
                    "Kris",
                    "Kyle",
                    "Logan",
                    "Tiffany"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1,
                    1,
                    3,
                    1,
                    1,
                    3,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jak se jmenují středoškoláci a kolik má každý z nich kamarádů? Vizualizuj je pomocí sloupcového grafu, seznam uveď vzestupně podle jména, prosím.",
            "Nakresli sloupcový graf: Jak se jmenují středoškoláci a kolik má každý z nich kamarádů? Mohl bys je seřadit vzestupně podle osy X?",
            "Sloupcový graf o tom, jak se jmenují středoškoláci a kolik má každý z nich kamarádů? Mohl bys je seřadit vzestupně podle osy X?"
        ],
        "irrelevant_tables": [
            "Likes"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2456@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.name , AVG(count(*)) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name ORDER BY AVG(count(*)) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "network_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Austin",
                    "Cassandra",
                    "Haley",
                    "Jessica",
                    "Kyle",
                    "Logan",
                    "Tiffany",
                    "Alexis",
                    "Kris",
                    "Andrew",
                    "Gabriel",
                    "Jordan"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaká jsou jména středoškoláků a kolik má každý z nich přátel. Zobraz sloupcový graf a seřaď je podle osy Y vzestupně, prosím.",
            "Zobraz sloupcový graf: Jak se jmenují středoškoláci a kolik má každý z nich kamarádů? Seřaď je vzestupně podle celkového počtu.",
            "Ukaž jména středoškoláků a odpovídající počet jejich přátel. Vyznač je jako sloupcový graf a seřaď je vzestupně podle osy y.",
            "Zobraz jména středoškoláků a odpovídající počet jejich přátel ve sloupcovém grafu, seřazeném vzestupně podle osy y.",
            "Sloupcový graf o tom, jak se jmenují středoškoláci a kolik má každý z nich kamarádů, zobraz vzestupně na ose Y."
        ],
        "irrelevant_tables": [
            "Likes"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "486@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Name , T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID ORDER BY T2.Height DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "climbing",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Height",
            "x_data": [
                [
                    "Klaus Enders",
                    "Siegfried Schauzu",
                    "Hans Luthringhauser",
                    "Jean Claude Castella",
                    "Horst Owesle",
                    "Georg Auerbacher",
                    "Arseneus Butscher",
                    "Charlie Freedman",
                    "L Currie",
                    "Mick Horsepole"
                ]
            ],
            "y_data": [
                [
                    5895,
                    5895,
                    5199,
                    5199,
                    5199,
                    5148,
                    4985,
                    4985,
                    4890,
                    4890
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz jména horolezců a výšky hor, na které vylezli, pomocí sloupcového grafu. Mohl bys je zobrazit pomocí Height in sestupně, prosím?",
            "Zobraz sloupcový graf: Jaká jsou jména horolezců a odpovídající výšky hor, na které vylezli, a zobraz je podle Height in sestupně.",
            "Jaká jsou jména horolezců a odpovídající výšky hor, na které lezou. Zobraz sloupcový graf na ose Y od nejvyšší po nejnižší, prosím.",
            "Sloupcový graf o tom, jaká jsou jména horolezců a odpovídající výšky hor, na které lezou, a chci je zobrazit sestupně podle osy y."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "490@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM mountain WHERE Height > 5000 GROUP BY Country ORDER BY COUNT(Country) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "climbing",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "DR Congo Uganda",
                    "Kenya",
                    "Tanzania"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké jsou země pohoří s výškou větší než 5000 a spočítej je sloupcovým grafem a chci uvést osu y vzestupně.",
            "Sloupcový graf pro počet zemí s pohořími s výškou větší než 5000? Řazení podle osy Y vzestupně.",
            "Sloupcový graf pro vrácení počtu zemí pohoří, které mají výšku větší než 5000, a chci vypsat osu y vzestupně.",
            "Vrať země pohoří, které mají výšku větší než 5000, a spočítej je pomocí sloupcového grafu. Mohl bys seřadit osu y vzestupně?"
        ],
        "irrelevant_tables": [
            "climber"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2904@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM stadium GROUP BY country ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "swimming",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Russia",
                    "Spain",
                    "Hungary",
                    "France",
                    "England",
                    "Azerbaijan"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik má která země stadionů? Zobraz sloupcový graf a seřaď je podle osy Y sestupně.",
            "Nakresli sloupcový graf o tom, kolik má která země stadionů, a seřaď je sestupně podle celkového počtu.",
            "Ukaž mi sloupcový graf, kolik má která země stadionů, seřazený sestupně podle celkového počtu.",
            "Zobraz mi celkový počet podle zemí v histogramu, chci zobrazit osu Y od nejvyššího po nejnižší pořadí."
        ],
        "irrelevant_tables": [
            "swimmer",
            "record"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2909@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nationality , AVG(meter_100) FROM swimmer GROUP BY Nationality ORDER BY Nationality ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "swimming",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nationality",
            "y_name": "AVG(meter_100)",
            "x_data": [
                [
                    "Australia",
                    "Canada",
                    "Italy",
                    "Ukraine",
                    "Tunisia",
                    "Poland",
                    "France"
                ]
            ],
            "y_data": [
                [
                    57.345,
                    57.84,
                    57.66,
                    57.34,
                    57.31,
                    57.31,
                    55.67
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Nationality",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o rozložení národnosti a průměru meter_100, seskup podle atributu národnost a zobraz vzestupně podle národnosti.",
            "Zjisti národnost a průměr meter_100, seskup je podle atributu národnost a vizualizuj je pomocí sloupcového grafu, zobraz vzestupně podle osy x.",
            "Uveď mi srovnání průměru meter_100 podle národnosti, a seskup podle atributu Národnost pomocí sloupcového grafu, zobraz vzestupně podle národnosti."
        ],
        "irrelevant_tables": [
            "event",
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2915@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , meter_100 FROM swimmer ORDER BY meter_100 ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "swimming",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "meter_100",
            "x_data": [
                [
                    "S\u00e9bastien Rouault",
                    "Oussama Mellouli",
                    "Przemys\u0142aw Sta\u0144czyk",
                    "Grant Hackett",
                    "Sergiy Fesenko",
                    "Craig Stevens",
                    "Federico Colbertaldo",
                    "Ryan Cochrane"
                ]
            ],
            "y_data": [
                [
                    55.67,
                    57.31,
                    57.31,
                    57.34,
                    57.34,
                    57.35,
                    57.66,
                    57.84
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Srovnej mi meter_100 nad názvem pomocí sloupcového grafu, zobrazeného vzestupně podle osy y.",
            "Nakresli sloupcový graf závislosti jména na meter_100 a seřaď jej vzestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "record",
            "stadium"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2931@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T4.name , COUNT(T4.name) FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia' GROUP BY T4.name ORDER BY COUNT(T4.name) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "swimming",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Nou Mestalla",
                    "Yubileyniy Stadium",
                    "Gazprom Arena",
                    "Baku Olympic Stadium"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti názvy stadionů, na kterých byli někteří australští plavci, a spočítej je pomocí sloupcového grafu, který chci na ose y zobrazit od nejvyššího po nejnižší.",
            "Sloupcový graf pro zjištění počtu názvů stadionů, na kterých byli někteří australští plavci. Mohl bys je uvést podle celkového počtu od nejvyššího po nejnižší?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "920@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) ASC",
                "binning": "BIN active_from_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' ORDER BY COUNT(active_from_date) ASC BIN active_from_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN active_from_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet zákazníků, kteří používají e-mail jako kontaktní kanál pro každý rok. Vizualizuj pomocí sloupcového grafu a seřaď jej vzestupně podle osy y.",
            "Vrať sloupcový graf zobrazující počet zákazníků, jejichž kód kontaktního kanálu je e-mail, pro každý rok. Mohl bys seřadit od nejnižšího po nejvyšší počet na ose y?"
        ],
        "irrelevant_tables": [
            "Products",
            "Order_Items"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "921@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) DESC",
                "binning": "BIN active_from_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT active_from_date , COUNT(active_from_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email' GROUP BY customer_name ORDER BY COUNT(active_from_date) DESC BIN active_from_date BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "customers_and_addresses",
        "vis_obj": {
            "chart": "bar",
            "x_name": "active_from_date",
            "y_name": "COUNT(active_from_date)",
            "x_data": [
                [
                    "Cash",
                    "Cheque",
                    "Credit Card"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1
                ],
                [
                    1,
                    0,
                    1
                ],
                [
                    2,
                    4,
                    2
                ],
                [
                    0,
                    1,
                    0
                ],
                [
                    0,
                    2,
                    0
                ]
            ],
            "classify": [
                "Cell",
                "Fax",
                "Handheld",
                "Mobile",
                "Email"
            ],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet zákazníků s různým kontaktním kanálem a způsobem platby ve sloupcovém grafu a seřaď je sestupně podle osy y."
        ],
        "irrelevant_tables": [
            "Customer_Orders",
            "Customer_Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field",
                "stacked_bar": true
            }
        ]
    },
    "2985@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10 GROUP BY transaction_type_description ORDER BY COUNT(date_of_transaction) DESC",
                "binning": "BIN date_of_transaction BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT T2.date_of_transaction , COUNT(T2.date_of_transaction) FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count GROUP BY transaction_type_description ORDER BY COUNT(date_of_transaction) DESC BIN date_of_transaction BY WEEKDAY"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_transaction",
            "y_name": "COUNT(date_of_transaction)",
            "x_data": [
                [
                    "Sun",
                    "Sat",
                    "Wed",
                    "Tue",
                    "Thur",
                    "Mon",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    2,
                    2,
                    0,
                    0,
                    1
                ],
                [
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    2
                ]
            ],
            "classify": [
                "Purchase",
                "Sale"
            ],
            "describe": "GROUP BY transaction_type_description, BIN date_of_transaction BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Najdi popisy typů transakcí a data, pokud je počet akcií přepočítán, seskup podle typu transakce, spočítej datum transakce a datum rozděl do intervalu dnů v týdnu. Zobraz ve sloupcovém grafu. Chci zobrazit osu y od nejvyššího po nejnižší pořadí."
        ],
        "irrelevant_tables": [
            "Lots",
            "Investors"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "2993@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM LOTS GROUP BY lot_details ORDER BY COUNT(lot_details) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "lot_details",
            "y_name": "COUNT(lot_details)",
            "x_data": [
                [
                    "q",
                    "r",
                    "x",
                    "h",
                    "m",
                    "s",
                    "d",
                    "z"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY lot_details",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf seskupí údaje o šarži a vypočítá počet jednotlivých údajů o šarži a uvede osu y v pořadí vzestupně, prosím.",
            "Sloupcový graf: osa x - údaje o šarži, osa y - počet údajů o šarži, seřazeno vzestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "Transactions",
            "Investors"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3001@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT lot_details , COUNT(lot_details) FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = \"l\" GROUP BY lot_details ORDER BY lot_details ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "lot_details",
            "y_name": "COUNT(lot_details)",
            "x_data": [
                [
                    "h",
                    "m",
                    "s",
                    "z"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY lot_details",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať údaje o šaržích, které patří investorům s údaji \"l\", a spočítá je pomocí sloupcového grafu, seřazené vzestupně podle údajů o šarži.",
            "Sloupcový graf pro vrácení počtu údajů o šaržích, které patří investorům s údaji \"l“? Zobraz pomocí X vzestupně."
        ],
        "irrelevant_tables": [
            "Purchases",
            "Transactions"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3002@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Investor_details , COUNT(Investor_details) FROM INVESTORS GROUP BY Investor_details ORDER BY COUNT(Investor_details) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Investor_details",
            "y_name": "COUNT(Investor_details)",
            "x_data": [
                [
                    "b",
                    "c",
                    "i",
                    "j",
                    "o",
                    "q",
                    "r",
                    "t",
                    "d",
                    "k",
                    "l",
                    "w",
                    "y",
                    "z"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Investor_details",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz všechny údaje o investorech a spočítej je pomocí sloupcového grafu a seřaď je vzestupně podle osy Y.",
            "Zobraz počet údajů o investorech seskupených podle údajů o investorech jako sloupcový graf, seřaď je vzestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "Transactions_Lots",
            "Lots"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3005@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT transaction_type_code , avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY transaction_type_code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "transaction_type_code",
            "y_name": "avg(amount_of_transaction)",
            "x_data": [
                [
                    "PUR",
                    "SALE"
                ]
            ],
            "y_data": [
                [
                    25945880.3716125,
                    11198167.237771427
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vytvoř sloupcový graf zobrazující průměrnou částku transakce podle kódu typu transakce, zobrazeného podle transaction_type_code vzestupně.",
            "Zobraz průměrnou částku transakce pro různé typy transakcí pomocí sloupcového grafu a chci ji seřadit podle osy x vzestupně."
        ],
        "irrelevant_tables": [
            "Sales",
            "Investors"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3007@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC",
                "binning": "BIN date_of_transaction BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM TRANSACTIONS  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_transaction",
            "y_name": "COUNT(date_of_transaction)",
            "x_data": [
                [
                    "Thur",
                    "Mon",
                    "Sat",
                    "Fri",
                    "Tue",
                    "Wed",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    1,
                    3,
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_transaction BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf, který rozdělí všechna data transakcí do intervalu dnů v týdnu a na ose y bude jejich celkový počet, přičemž osa y bude zobrazena vzestupně."
        ],
        "irrelevant_tables": [
            "Ref_Transaction_Types",
            "Purchases"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3014@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) ASC",
                "binning": "BIN date_of_transaction BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_transaction , COUNT(date_of_transaction) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000  ORDER BY COUNT(date_of_transaction) ASC BIN date_of_transaction BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_transaction",
            "y_name": "COUNT(date_of_transaction)",
            "x_data": [
                [
                    "Sat",
                    "Thur",
                    "Fri",
                    "Mon",
                    "Tue",
                    "Sun",
                    "Wed"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1,
                    2,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_transaction BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti údaje o podrobnostech a datech prodeje transakcí s částkou menší než 3000? Rozděl datum transakce do intervalu dnů v týdnu a vypočítej celkový počet jednotlivých dnů pomocí sloupcového grafu a zobraz Y ve vzestupném pořadí."
        ],
        "irrelevant_tables": [
            "Lots",
            "Purchases"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3015@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY sales_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT sales_details , COUNT(sales_details) FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000 GROUP BY sales_details ORDER BY sales_details DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "sales_details",
            "y_name": "COUNT(sales_details)",
            "x_data": [
                [
                    "y",
                    "t",
                    "s",
                    "p",
                    "o",
                    "n",
                    "f",
                    "e"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY sales_details",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro údaje o prodeji s částkou menší než 3000 zobraz sloupcový graf, kde na ose x jsou údaje o prodeji a na ose y jejich počet, a seřaď názvy sestupně."
        ],
        "irrelevant_tables": [
            "Purchases",
            "Lots"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "3022@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT purchase_details , COUNT(purchase_details) FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000 GROUP BY purchase_details ORDER BY purchase_details DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "tracking_share_transactions",
        "vis_obj": {
            "chart": "bar",
            "x_name": "purchase_details",
            "y_name": "COUNT(purchase_details)",
            "x_data": [
                [
                    "r",
                    "i",
                    "c",
                    "a"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY purchase_details",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaký je počet údajů o nákupu u transakcí s částkou vyšší než 10000? Vykresli sloupcový graf a chci jej seřadit podle osy X sestupně prosím."
        ],
        "irrelevant_tables": [
            "Ref_Transaction_Types",
            "Lots"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1462@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT SportName , count(*) FROM Sportsinfo GROUP BY sportname ORDER BY SportName ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "game_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "SportName",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Athletics",
                    "Baseball",
                    "Basketball",
                    "Cricket",
                    "Curling",
                    "Football",
                    "Lacrosse",
                    "Soccer",
                    "Swimming",
                    "Tennis"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi histogram, kolik studentů hraje jednotlivé sporty, a zobraz osu X vzestupně."
        ],
        "irrelevant_tables": [
            "Video_Games",
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1470@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y' GROUP BY LName ORDER BY COUNT(LName) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "game_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "LName",
            "y_name": "COUNT(LName)",
            "x_data": [
                [
                    "Jones",
                    "Kim",
                    "Lee",
                    "Simms",
                    "Pang",
                    "Shieber"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY LName",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaká jsou příjmení všech stipendistů a spočítej je pomocí sloupcového grafu a seřaď je podle osy y od nejnižšího po nejvyšší, prosím.",
            "Sloupcový graf pro počet příjmení všech stipendistů, osa y seřazena vzestupně, prosím.",
            "Zobraz příjmení všech studentů, kteří jsou na stipendiu, a spočítej je pomocí sloupcového grafu, chci seřadit celkový počet vzestupně."
        ],
        "irrelevant_tables": [
            "Video_Games",
            "Plays_Games"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "857@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Store_Name , COUNT(Store_Name) FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = \"stop\" GROUP BY Store_Name ORDER BY Store_Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Store_Name , COUNT(Store_Name) FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = \"stop\" GROUP BY Store_Name ORDER BY Store_Name DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Store_Name",
            "y_name": "COUNT(Store_Name)",
            "x_data": [
                [
                    "Warino Photo",
                    "Queen Art",
                    "Kling Workshop",
                    "Bednar Film"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Store_Name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro počet názvů skupin dílen, které mají rezervace se stavovým kódem \"stop“? Zobraz osu x v sestupném pořadí.",
            "Jaké jsou názvy skupin dílen, které mají rezervace se stavovým kódem \"stop\", a spočítej je pomocí sloupcového grafu, seřaď Store_Name sestupně.",
            "Které skupiny workshopů mají rezervace se stavovým kódem \"stop\"? Udělej mi jména a spočítej je pomocí sloupcového grafu a zobraz je sestupně podle osy x, prosím."
        ],
        "irrelevant_tables": [
            "Addresses",
            "Marketing_Regions"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "859@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name ORDER BY Product_Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Product_Name , avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name ORDER BY Product_Name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Product_Name",
            "y_name": "avg(Product_Price)",
            "x_data": [
                [
                    "dinning",
                    "film",
                    "photo"
                ]
            ],
            "y_data": [
                [
                    238704.33333333328,
                    11385515.333333336,
                    5102691.666666667
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf pro průměrnou cenu každého názvu výrobku, chci je seřadit vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "Services",
            "Ref_Service_Types"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "862@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Planned_Delivery_Date , COUNT(Planned_Delivery_Date) FROM BOOKINGS  ORDER BY COUNT(Planned_Delivery_Date) DESC",
                "binning": "BIN Planned_Delivery_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Planned_Delivery_Date , COUNT(Planned_Delivery_Date) FROM BOOKINGS  ORDER BY COUNT(Planned_Delivery_Date) DESC BIN Planned_Delivery_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Planned_Delivery_Date",
            "y_name": "COUNT(Planned_Delivery_Date)",
            "x_data": [
                [
                    "Thur",
                    "Tue",
                    "Mon",
                    "Sun",
                    "Sat",
                    "Fri",
                    "Wed"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    3,
                    2,
                    1,
                    1,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Planned_Delivery_Date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz všechny plánované termíny dodání, rozděl je podle dnů v týdnu ve sloupcovém grafu a seřaď Y sestupně."
        ],
        "irrelevant_tables": [
            "Bookings_Services",
            "Customer_Orders"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "863@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM BOOKINGS  ORDER BY COUNT(Actual_Delivery_Date) ASC",
                "binning": "BIN Actual_Delivery_Date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Actual_Delivery_Date , COUNT(Actual_Delivery_Date) FROM BOOKINGS  ORDER BY COUNT(Actual_Delivery_Date) ASC BIN Actual_Delivery_Date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Actual_Delivery_Date",
            "y_name": "COUNT(Actual_Delivery_Date)",
            "x_data": [
                [
                    "Tue",
                    "Wed",
                    "Mon",
                    "Sat",
                    "Sun",
                    "Thur",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    2,
                    2,
                    3,
                    3,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN Actual_Delivery_Date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz všechny skutečné termíny dodání a rozděl je podle dnů v týdnu ve sloupcovém grafu. Mohl bys zobrazit, kolik je skutečných termínů dodání vzestupně?"
        ],
        "irrelevant_tables": [
            "Order_Items",
            "Invoices"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "872@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code ORDER BY payment_method_code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT payment_method_code , count(*) FROM INVOICES GROUP BY payment_method_code ORDER BY payment_method_code DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "bar",
            "x_name": "payment_method_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Visa",
                    "MasterCard",
                    "American E"
                ]
            ],
            "y_data": [
                [
                    5,
                    6,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš jednotlivé kódy platebních metod s počtem objednávek šílený do sloupcového grafu a mohl bys je seřadit podle osy X sestupně?",
            "Seznam různých kódů platebních metod s počtem objednávek šílený. Zobraz sloupcový graf, a chci ho zobrazit podle osy x sestupně.",
            "Uveď mi sloupcový graf pro celkový počet kódů jednotlivých platebních metod a mohl bys je zobrazit sestupně podle názvů?",
            "Zobraz všechny kódy platebních metod a počty objednávek pro každý kód ve sloupcovém grafu, zobrazeném podle kódu platební metody sestupně."
        ],
        "irrelevant_tables": [
            "Performers_in_Bookings",
            "Clients"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "882@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT City_Town , count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town ORDER BY City_Town DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "bar",
            "x_name": "City_Town",
            "y_name": "count(*)",
            "x_data": [
                [
                    "West Sherwoodstad",
                    "South Eugenia",
                    "Rueckermouth",
                    "Purdyville",
                    "Port Maximeview",
                    "New Lonzoville",
                    "Nataliamouth",
                    "Monahanshire",
                    "Macejkovicchester",
                    "Jasthaven",
                    "Feliciaberg",
                    "Chrisside"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik je v jednotlivých městech skupin dramatických workshopů? Vrať město i počet pomocí sloupcového grafu a chci je seřadit podle City_Town sestupně.",
            "Zobraz všechna města spolu s počtem skupin dramatického workshopu v každém městě. Vizualizuj je pomocí sloupcového grafu. Mohl bys je seřadit podle osy x sestupně?",
            "Uveď mi histogram o tom, kolik je v jednotlivých městech skupin dramatických workshopů? Vrať město i počet, mohl bys je seřadit podle osy x sestupně?"
        ],
        "irrelevant_tables": [
            "Ref_Service_Types",
            "Bookings_Services"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "884@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY Service_Type_Description DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Service_Type_Description , COUNT(Service_Type_Description) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Price > 100 GROUP BY Service_Type_Description ORDER BY Service_Type_Description DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "cre_Drama_Workshop_Groups",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Service_Type_Description",
            "y_name": "COUNT(Service_Type_Description)",
            "x_data": [
                [
                    "provide photo service",
                    "provide filming service",
                    "provide dinning service",
                    "provide adv promoting service"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Service_Type_Description",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké jsou popisy typů služeb s cenou produktu nad 100? Spočítej je pomocí sloupcového grafu a chci je seřadit sestupně podle názvů.",
            "Sloupcový graf pro počet popisů typů služeb s cenou produktu nad 100? Seřaď je podle osy x sestupně."
        ],
        "irrelevant_tables": [
            "Performers_in_Bookings",
            "Invoice_Items"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1302@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name ORDER BY County_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County_name , COUNT(County_name) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY County_name ORDER BY County_name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "election",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County_name",
            "y_name": "COUNT(County_name)",
            "x_data": [
                [
                    "Baltimore County",
                    "Colony",
                    "Howard",
                    "Mansfield"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY County_name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet delegátů v jednotlivých krajích pomocí sloupcového grafu, seřazeného podle osy x."
        ],
        "irrelevant_tables": [
            "party"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1304@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County_name , Population FROM county ORDER BY Population ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County_name , Population FROM county ORDER BY Population ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "election",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County_name",
            "y_name": "Population",
            "x_data": [
                [
                    "Manning",
                    "Howard",
                    "Colony",
                    "Mansfield",
                    "Baltimore County"
                ]
            ],
            "y_data": [
                [
                    13300,
                    21000,
                    79000,
                    87200,
                    90000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz název okresu a počet obyvatel všech okresů pomocí sloupcového grafu. Mohl bys zobrazit osu y vzestupně?",
            "Nakresli sloupcový graf pro to, jaké jsou názvy a počet obyvatel jednotlivých krajů? Chci je seřadit vzestupně podle Y.",
            "Jaké jsou názvy a počet obyvatel jednotlivých krajů? Načrtni je jako sloupcový graf a zobraz je podle počtu obyvatel od nejnižšího po nejvyšší.",
            "Zobraz název okresu a počet obyvatel všech okresů. Zobraz sloupcový graf, vzestupné řazení podle osy y."
        ],
        "irrelevant_tables": [
            "party",
            "election"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1307@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Party , SUM(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY SUM(COUNT(*)) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Party , SUM(COUNT(*)) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY SUM(COUNT(*)) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "election",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "SUM(COUNT(*))",
            "x_data": [
                [
                    "Democratic",
                    "Liberal",
                    "Working Families",
                    "Independence"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Pro každou stranu vrať název strany a počet delegátů této strany. Vyplň sloupcový graf a celkový počet zobraz v sestupném pořadí.",
            "Zobraz název každé strany a odpovídající počet delegátů z této strany. Zakresli je do sloupcového grafu a seřaď je sestupně podle osy y.",
            "Zobraz název každé strany a odpovídající počet delegátů z této strany pomocí sloupcového grafu a seřaď je podle celkového počtu sestupně."
        ],
        "irrelevant_tables": [
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1311@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY COUNT(T2.Party) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.Party , COUNT(T2.Party) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T2.Party ORDER BY COUNT(T2.Party) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "election",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "COUNT(Party)",
            "x_data": [
                [
                    "Independence",
                    "Working Families",
                    "Liberal",
                    "Democratic"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Party",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet delegátů v jednotlivých stranách pomocí sloupcového grafu a seřaď je vzestupně podle osy Y."
        ],
        "irrelevant_tables": [
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1315@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT County_name , COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "election",
        "vis_obj": {
            "chart": "bar",
            "x_name": "County_name",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Mansfield",
                    "Baltimore County",
                    "Colony",
                    "Howard"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz název každého kraje spolu s odpovídajícím počtem delegátů z daného kraje pomocí sloupcového grafu a seřaď je vzestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "party"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1320@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Committee , COUNT(Committee) FROM election GROUP BY Committee ORDER BY COUNT(Committee) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Committee , COUNT(Committee) FROM election GROUP BY Committee ORDER BY COUNT(Committee) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "election",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Committee",
            "y_name": "COUNT(Committee)",
            "x_data": [
                [
                    "Economic Matters",
                    "Environmental Matters",
                    "Environmental Matters (Vice-Chair)",
                    "Health and Government Operations",
                    "Ways and Means",
                    "Appropriations"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Committee",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik delegátů je v jednotlivých výborech? Vrať sloupcový graf, zobraz ho vzestupně podle toho, kolik je komisí, prosím.",
            "Zobraz počet delegátů v jednotlivých výborech pomocí sloupcového grafu a mohl bys prosím seřadit osu y vzestupně?"
        ],
        "irrelevant_tables": [
            "party",
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1322@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller ORDER BY Comptroller ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Comptroller , COUNT(Comptroller) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2 GROUP BY Comptroller ORDER BY Comptroller ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "election",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Comptroller",
            "y_name": "COUNT(Comptroller)",
            "x_data": [
                [
                    "Alan Hevesi",
                    "Carl McCall",
                    "John Faso"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Comptroller",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kdo byli zapisovatelé stran spojených s delegáty z okrsku 1 nebo 2? Spočítej je pomocí sloupcového grafu a zobraz vzestupně podle osy X.",
            "Najdi strany spojené s delegáty z okrsku 1 nebo 2. Kdo působil jako komisař stran? Spočítej je pomocí sloupcového grafu a seřaď je podle osy x."
        ],
        "irrelevant_tables": [
            "county"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "364@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Publisher , COUNT(*) FROM publication GROUP BY Publisher ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Publisher , COUNT(*) FROM publication GROUP BY Publisher ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "book_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Publisher",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Bertelsmann",
                    "Springer Nature",
                    "Thomson Reuters",
                    "Pearson",
                    "Wiley"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz různé vydavatele spolu s počtem jejich publikací. Zakresli je jako sloupcový graf, zobraz je na ose y od nejnižšího po nejvyšší.",
            "Zobraz různé vydavatele spolu s počtem jejich publikací ve sloupcovém grafu, celkový počet zobraz od nejnižšího po nejvyšší.",
            "Nakresli sloupcový graf vydavatele v porovnání s celkovým počtem a mohl bys je seřadit podle osy y od nejnižšího po nejvyšší, prosím?"
        ],
        "irrelevant_tables": [
            "book"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "365@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Publication_Date , COUNT(Publication_Date) FROM publication GROUP BY Publication_Date ORDER BY Publication_Date ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Publication_Date , COUNT(Publication_Date) FROM publication GROUP BY Publication_Date ORDER BY Publication_Date ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "book_2",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Publication_Date",
            "y_name": "COUNT(Publication_Date)",
            "x_data": [
                [
                    "April 2007",
                    "August 2008",
                    "June 2006",
                    "March 2007",
                    "March 2008",
                    "October 2005"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Publication_Date",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - datum zveřejnění, osa y - kolik je dat zveřejnění. Mohl bys je seřadit podle osy x vzestupně?",
            "Sloupcový graf zobrazující počet dat vydání knih, zobrazený vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "book"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "2436@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Category , COUNT(*) FROM music_festival GROUP BY Category ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "music_4",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Category",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Best Song",
                    "Best Lyrics",
                    "Best Sound Song"
                ]
            ],
            "y_data": [
                [
                    5,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať počet hudebních festivalů každé kategorie do sloupcového grafu a seřaď je podle osy y od nejvyššího po nejnižší.",
            "Ukaž mi celkový počet podle kategorií v histogramu, mohl bys seřadit Y sestupně?"
        ],
        "irrelevant_tables": [
            "artist",
            "volume"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2439@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Category , COUNT(Category) FROM music_festival WHERE RESULT = \"Awarded\" GROUP BY Category ORDER BY Category ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "music_4",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Category",
            "y_name": "COUNT(Category)",
            "x_data": [
                [
                    "Best Song",
                    "Best Sound Song"
                ]
            ],
            "y_data": [
                [
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Category",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké jsou kategorie hudebních festivalů s výsledkem „oceněno\" a spočítat je pomocí sloupcového grafu, chci uvést osu x vzestupně.",
            "Sloupcový graf pro to, jaký je počet kategorií hudebních festivalů s výsledkem „oceněno\"? Chci uvést osu x vzestupně."
        ],
        "irrelevant_tables": [
            "volume",
            "artist"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2441@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM music_festival GROUP BY Result ORDER BY Result DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "music_4",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Nominated",
                    "Awarded"
                ]
            ],
            "y_data": [
                [
                    6,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrátí výsledky všech hudebních festivalů pomocí sloupcového grafu, seřazené sestupně podle X."
        ],
        "irrelevant_tables": [
            "artist",
            "volume"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2127@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Participant_Type_Code , COUNT(Participant_Type_Code) FROM Participants GROUP BY Participant_Type_Code ORDER BY Participant_Type_Code ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_in_alabama",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Participant_Type_Code",
            "y_name": "COUNT(Participant_Type_Code)",
            "x_data": [
                [
                    "Organizer",
                    "Participant"
                ]
            ],
            "y_data": [
                [
                    7,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Participant_Type_Code",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - kód typu účastníka, osa y - počet kódů typu účastníka a seřazení vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "Services",
            "Participants_in_Events"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2135@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Event_Details , COUNT(Event_Details) FROM EVENTS GROUP BY Event_Details ORDER BY Event_Details DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "local_govt_in_alabama",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Event_Details",
            "y_name": "COUNT(Event_Details)",
            "x_data": [
                [
                    "Success",
                    "Fail"
                ]
            ],
            "y_data": [
                [
                    6,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Event_Details",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - podrobnosti o události, osa y - kolik podrobností o události. Chci je seřadit podle osy X sestupně.",
            "Seskup a spočítej podrobnosti o událostech pomocí sloupcového grafu a chci je vypsat podle jmen sestupně."
        ],
        "irrelevant_tables": [
            "Services",
            "Participants_in_Events"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2143@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Participant_Type_Code , SUM(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code ORDER BY SUM(count(*)) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Participant_Type_Code , SUM(count(*)) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_Type_Code ORDER BY SUM(count(*)) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "local_govt_in_alabama",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Participant_Type_Code",
            "y_name": "SUM(count(*))",
            "x_data": [
                [
                    "Participant",
                    "Organizer"
                ]
            ],
            "y_data": [
                [
                    12,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Participant_Type_Code",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolika akcí se jednotliví účastníci zúčastnili? Zobraz jejich celkový počet podle jednotlivých kódů typů účastníků pomocí sloupcového grafu a seřaď osu y sestupně."
        ],
        "irrelevant_tables": [
            "Services"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1149@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Software_Platform , COUNT(*) FROM device GROUP BY Software_Platform ORDER BY Software_Platform DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Software_Platform",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "iOS",
                    "Android"
                ]
            ],
            "y_data": [
                [
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o tom, jaké jsou různé softwarové platformy pro zařízení, a kolik zařízení má každý? Mohl bys zobrazit na ose x sestupně?",
            "Sloupcový graf: osa x - softwarová platforma, osa y - celkový počet. Seřaď je podle Software_Platform sestupně."
        ],
        "irrelevant_tables": [
            "stock",
            "shop"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "1150@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY COUNT(Location) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Location , COUNT(Location) FROM shop GROUP BY Location ORDER BY COUNT(Location) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "device",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Location",
            "y_name": "COUNT(Location)",
            "x_data": [
                [
                    "Cymmer",
                    "Gelli",
                    "Maerdy",
                    "Pentre",
                    "Porth",
                    "Wattstown",
                    "Blaenllechau",
                    "Dinas",
                    "Penygraig"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Location",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf zobrazující počet obchodů v jednotlivých lokalitách. Mohl bys prosím seřadit vzestupně kolik existuje lokalit?",
            "Vytvoř sloupcový graf, který zobrazuje počet umístění v jednotlivých lokalitách, a chci je seřadit vzestupně podle osy y."
        ],
        "irrelevant_tables": [
            "stock",
            "device"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2814@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Competition_type , COUNT(Competition_type) FROM competition GROUP BY Competition_type ORDER BY COUNT(Competition_type) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "sports_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Competition_type",
            "y_name": "COUNT(Competition_type)",
            "x_data": [
                [
                    "Tournament",
                    "Friendly"
                ]
            ],
            "y_data": [
                [
                    3,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Competition_type",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet různých typů soutěží pomocí sloupcového grafu, seřaď je vzestupně podle Y, prosím.",
            "Sloupcový graf zobrazující počet různých typů soutěží, chci seřadit osu Y vzestupně.",
            "Uveď mi sloupcový graf, kolik typů soutěží je v jednotlivých typech soutěží, a seřaď počet typů soutěží vzestupně."
        ],
        "irrelevant_tables": [
            "club",
            "club_rank"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2815@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Competition_type ,  Country ORDER BY Country DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "sports_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Spain",
                    "Slovenia",
                    "Russia",
                    "Italy",
                    "Ireland",
                    "Australia"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    2,
                    2,
                    1,
                    2
                ],
                [
                    0,
                    2,
                    1,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "Friendly",
                "Tournament"
            ],
            "describe": "GROUP BY Competition_type, GROUP BY Country",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypočítej celkový počet v každém typu soutěže a poté jej rozděl podle zemí. Vytvoř sloupcový graf a zobraz jej sestupně pomocí osy x."
        ],
        "irrelevant_tables": [
            "competition_result",
            "club_rank"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis",
                "stacked_bar": false
            }
        ]
    },
    "2816@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , COUNT(Country) FROM competition GROUP BY Country ORDER BY COUNT(Country) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "sports_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "COUNT(Country)",
            "x_data": [
                [
                    "Ireland",
                    "Spain",
                    "Australia",
                    "Italy",
                    "Slovenia",
                    "Russia"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro počet soutěží v jednotlivých zemích a chci vypsat osu y vzestupně.",
            "Ukaž mi počet zemí v histogramu a seřaď je vzestupně podle osy y."
        ],
        "irrelevant_tables": [
            "club_rank",
            "competition_result"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2823@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.name , COUNT(T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.name ORDER BY T1.name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "sports_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "AIB",
                    "ASC",
                    "BK Slide",
                    "HGS2",
                    "IFG"
                ]
            ],
            "y_data": [
                [
                    2,
                    4,
                    6,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "U jmen a hráčů klubů spočítej jména podle jmen ve sloupcovém grafu a seřaď je vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "club_rank",
            "competition_result"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2827@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Position , avg(Points) FROM player GROUP BY POSITION ORDER BY avg(Points) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "sports_competition",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Position",
            "y_name": "avg(Points)",
            "x_data": [
                [
                    "Prop",
                    "Left Wing",
                    "Full Back",
                    "Loose Forward",
                    "Second Row",
                    "Hooker",
                    "Right Centre",
                    "Right Wing",
                    "Stand Off",
                    "Scrum Half"
                ]
            ],
            "y_data": [
                [
                    9.333333333333334,
                    12,
                    20,
                    20,
                    20,
                    36,
                    36,
                    36,
                    110,
                    188
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš pozice hráčů a průměrný počet bodů hráčů na každé pozici. Vizualizuj je pomocí sloupcového grafu a mohl bys je seřadit podle celkového počtu vzestupně?",
            "Jaký je průměrný počet bodů pro hráče na jednotlivých pozicích? Zakresli je do sloupcového grafu. Mohl bys zobrazit osu y od nejnižšího po nejvyšší pořadí?",
            "Vypiš pozice hráčů a průměrný počet bodů hráčů na každé pozici pomocí sloupcového grafu, mohl bys je seřadit podle průměru bodů?",
            "Udělej mi sloupcový graf pro průměrné body jednotlivých pozic a seřaď je podle osy Y vzestupně."
        ],
        "irrelevant_tables": [
            "club",
            "club_rank"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3261@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Result , COUNT(Result) FROM acceptance GROUP BY Result ORDER BY COUNT(Result) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Result",
            "y_name": "COUNT(Result)",
            "x_data": [
                [
                    "Accepted",
                    "Rejected"
                ]
            ],
            "y_data": [
                [
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Result",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Seskup je podle výsledku a spočítej je pomocí sloupcového grafu, seřaď je od nejnižšího po nejvyšší podle Y.",
            "Pro každý příspěvek seskup jeho výsledek přijetí a spočítej je. Vizualizuj je ve sloupcovém grafu a chci je seřadit vzestupně podle osy y.",
            "Sloupcový graf, který zobrazuje počet různých výsledků a jejich vzestupné seřazení podle osy Y."
        ],
        "irrelevant_tables": [
            "workshop",
            "submission"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3266@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Author , COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY Author DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "workshop_paper",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Author",
            "y_name": "COUNT(DISTINCT T1.workshop_id)",
            "x_data": [
                [
                    "Steve Raible",
                    "Steve Niehaus",
                    "Sherman Smith",
                    "Sammy Green",
                    "Jeff Lloyd"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz každého autora a počet workshopů, které odevzdal. Zobraz sloupcový graf a chci seřadit osu x sestupně.",
            "Kolika workshopů se každý autor zúčastnil? Vrať jméno autora a počet workshopů ve sloupcovém grafu. Mohl bys seřadit jména v sestupném pořadí?",
            "Vizualizuj sloupcový graf, do kolika workshopů se přihlásil každý autor? Vrať jméno autora a počet seminářů a mohl bys seřadit jména v sestupném pořadí?",
            "Zobraz jednotlivé autory a počet workshopů, do kterých se přihlásili, pomocí sloupcového grafu a mohl bys je seřadit podle osy X sestupně?",
            "Uveď mi histogram o tom, do kolika workshopů se přihlásil každý autor? Vrať jméno autora a počet workshopů a mohl bys je seřadit podle osy X sestupně?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2698@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Home_city , AVG(Age) FROM driver GROUP BY Home_city ORDER BY AVG(Age) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_bus",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Home_city",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "Manchester",
                    "Hartford",
                    "East Hartford",
                    "Coventry",
                    "Bethel"
                ]
            ],
            "y_data": [
                [
                    52,
                    43.5,
                    37,
                    35,
                    30
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Home_city",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Porovnej průměrný věk řidičů ze stejného domovského města pomocí sloupcového grafu, mohl bys je seřadit sestupně podle osy Y, prosím?",
            "Průměrný věk seskupený podle domovského města znázorni ve sloupcovém grafu, zobraz je od nejvyššího po nejnižší celkový počet."
        ],
        "irrelevant_tables": [
            "school",
            "school_bus"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2702@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Party , count(*) FROM driver GROUP BY party ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "school_bus",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Party",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Dem",
                    "Rep"
                ]
            ],
            "y_data": [
                [
                    10,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vytvoř sloupcový graf zobrazující celkový počet napříč stranami a seřaď jej sestupně podle osy y.",
            "Zobraz strany a počet řidičů v každé straně. Vyplň je jako sloupcový graf a chci seřadit osu y od nejvyššího po nejnižší pořadí, prosím.",
            "Zobraz stranu a počet řidičů v každé straně pomocí sloupcového grafu a chci je seřadit sestupně podle celkového počtu, prosím."
        ],
        "irrelevant_tables": [
            "school",
            "school_bus"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2626@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "100 North Tampa",
                    "Floridan Hotel",
                    "Park Tower",
                    "Citizens Bank Building",
                    "Franklin Exchange Building",
                    "One Tampa City Center",
                    "Tampa City Hall"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro každou budovu uveď název budovy a počet institucí v ní. Zakresli je jako sloupcový graf, seřaď je podle celkového počtu vzestupně prosím."
        ],
        "irrelevant_tables": [
            "protein"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2629@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , count(*) FROM institution GROUP BY TYPE ORDER BY Type ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "protein_institute",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Private",
                    "Public",
                    "Tribal"
                ]
            ],
            "y_data": [
                [
                    7,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf typu versus celkového počtu a chci ho seřadit vzestupně podle osy x.",
            "Prosím o sloupcový graf zobrazující typy institucí spolu s počtem institucí pro každý typ a mohl bys seřadit osu x vzestupně?"
        ],
        "irrelevant_tables": [
            "protein",
            "building"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "7@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Building , count(*) FROM Faculty GROUP BY building ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Building",
            "y_name": "count(*)",
            "x_data": [
                [
                    "NEB",
                    "Barton",
                    "Krieger"
                ]
            ],
            "y_data": [
                [
                    18,
                    20,
                    20
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz všechny budovy spolu s počtem členů fakulty, které budovy mají. Zakresli je jako sloupcový graf, seřaď celkový počet vzestupně.",
            "Vrať sloupcový graf o tom, kolik členů fakulty má každá budova? Vypiš výsledek s názvem budovy a zobraz celkový počet vzestupně.",
            "Kolik členů fakulty má každá budova? Vypiš výsledek s názvem budovy pomocí sloupcového grafu a zobraz Y vzestupně.",
            "Kolik členů fakulty má každá budova? Vypiš výsledek s názvem budovy. Vizualizuj ho pomocí sloupcového grafu, seřaď celkový počet od nejnižšího po nejvyšší.",
            "Ukaž mi sloupcový graf o tom, kolik členů fakulty má každá budova? Vypiš výsledek s názvem budovy a seřaď celkový počet od nejnižšího po nejvyšší.",
            "Zobraz všechny budovy spolu s počtem členů fakulty, které budovy mají, pomocí sloupcového grafu. Mohl bys je zobrazit od nejnižšího po nejvyšší počet na ose y, prosím?",
            "Sloupcový graf pro zobrazení celkového počtu různých budov, řazení na ose y od nejnižšího po nejvyšší pořadí."
        ],
        "irrelevant_tables": [
            "Student",
            "Faculty_Participates_in"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "11@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Rank , count(*) FROM Faculty GROUP BY Sex ,  Rank ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Rank , count(*) FROM Faculty GROUP BY Sex ,  Rank ORDER BY count(*) ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Rank",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AssocProf",
                    "AsstProf",
                    "Instructor",
                    "Professor"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    3,
                    0
                ],
                [
                    7,
                    12,
                    5,
                    27
                ]
            ],
            "classify": [
                "F",
                "M"
            ],
            "describe": "GROUP BY Sex, GROUP BY Rank",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik členů fakulty máme pro každou hodnost a pohlaví? Vykresli je jako sloupcový graf, chci seřadit osu y vzestupně.",
            "Sloupcový graf celkového počtu pro fakulty s každým pohlavím v každé hodnosti, mohl bys je seřadit vzestupně podle osy Y?",
            "Zobraz všechny hodnosti a počet mužů a žen na fakultě pro každou hodnost ve sloupcovém grafu? Seřaď je vzestupně podle Y."
        ],
        "irrelevant_tables": [
            "Participates_in",
            "Faculty_Participates_in"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis",
                "stacked_bar": true
            },
            {
                "channel_specified": [],
                "sort_by": "axis",
                "stacked_bar": true
            },
            {
                "channel_specified": [],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "12@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , count(*) FROM Faculty GROUP BY Sex ORDER BY Sex ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , count(*) FROM Faculty GROUP BY Sex ORDER BY Sex ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "count(*)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    7,
                    51
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Sex",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik členů fakulty máme pro každé pohlaví? Nakresli sloupcový graf a chci ho seřadit podle jmen vzestupně, prosím.",
            "Vytvoř sloupcový graf zobrazující celkový počet u všech pohlaví a seřaď je podle osy x.",
            "Sloupcový graf znázorňující počet mužů a žen na fakultě. Mohl bys jej znázornit pomocí osy x vzestupně?"
        ],
        "irrelevant_tables": [
            "Faculty_Participates_in",
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "17@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Rank , count(Rank) FROM Faculty GROUP BY Rank ORDER BY count(Rank) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Rank , count(Rank) FROM Faculty GROUP BY Rank ORDER BY count(Rank) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Rank",
            "y_name": "count(Rank)",
            "x_data": [
                [
                    "Professor",
                    "AsstProf",
                    "Instructor",
                    "AssocProf"
                ]
            ],
            "y_data": [
                [
                    27,
                    15,
                    8,
                    8
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Rank",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf celkového počtu podle jednotlivých hodností, seřazený od nejvyššího po nejnižší podle Y.",
            "Zobraz ve sloupcovém grafu počet vyučujících pro každou hodnost a seřaď je podle celkového počtu od nejvyššího po nejnižší.",
            "Kolik členů fakulty máme pro každou hodnost? Zobraz sloupcový graf a seřaď je od nejvyššího po nejnižší podle Y."
        ],
        "irrelevant_tables": [
            "Participates_in",
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "22@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , count(*) FROM Faculty WHERE rank = \"AsstProf\" GROUP BY sex ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , count(*) FROM Faculty WHERE rank = \"AsstProf\" GROUP BY sex ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "count(*)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    3,
                    12
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet docentů a docentek pomocí sloupcového grafu, osa y je vzestupná.",
            "Zobraz sloupcový graf pro to, kolik máme docentů a docentek. Osu Y zobraz vzestupně.",
            "Vizualizuj sloupcový graf pro to, kolik máme docentů a docentek. Chci ho seřadit vzestupně podle osy Y.",
            "Zobraz počet docentů a docentek. Sestav sloupcový graf, osu Y seřaď vzestupně."
        ],
        "irrelevant_tables": [
            "Activity",
            "Faculty_Participates_in"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "24@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Rank , count(*) FROM Faculty GROUP BY rank ORDER BY Rank ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Rank , count(*) FROM Faculty GROUP BY rank ORDER BY Rank ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Rank",
            "y_name": "count(*)",
            "x_data": [
                [
                    "AssocProf",
                    "AsstProf",
                    "Instructor",
                    "Professor"
                ]
            ],
            "y_data": [
                [
                    8,
                    15,
                    8,
                    27
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o tom, kolik členů fakulty máme pro každou hodnost fakulty? Seřaď vzestupně podle osy x, prosím."
        ],
        "irrelevant_tables": [
            "Activity",
            "Faculty_Participates_in"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "26@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Fname , count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Fname , count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Fname",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Ellie",
                    "Leslie",
                    "Robert",
                    "Alan",
                    "Cheng",
                    "Joanne",
                    "Lawrence",
                    "Louis",
                    "Luigi",
                    "Russell",
                    "Steven",
                    "Daniel",
                    "David",
                    "Mark",
                    "Michael",
                    "Scott",
                    "Stacey",
                    "Yair"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaké je křestní jméno členů fakulty, kteří se účastnili alespoň jedné aktivity? U každého z nich také uveď počet aktivit, kterých se zúčastnili, pomocí sloupcového grafu, seřaď podle Y vzestupně.",
            "Sloupcový graf zobrazující křestní jména všech členů fakulty, kteří se účastnili nějaké aktivity, spolu s počtem aktivit, kterých se účastnili. Osu y zobraz od nejnižšího po nejvyšší pořadí."
        ],
        "irrelevant_tables": [
            "Activity",
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "30@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT activity_name , count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "activity_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Baseball",
                    "Kayaking",
                    "Soccer",
                    "Spelunking",
                    "Square Dancing",
                    "Volleyball",
                    "Canasta",
                    "Extreme Canasta",
                    "Football",
                    "Canoeing",
                    "Chess",
                    "Mountain Climbing",
                    "Crossword Puzzles"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    3,
                    3,
                    3,
                    4,
                    5,
                    6,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik členů fakulty se účastní jednotlivých aktivit? Vrať názvy aktivit a počet členů fakulty pomocí sloupcového grafu a zobraz osu Y vzestupně.",
            "Zobraz názvy všech aktivit a počet pracovníků fakulty zapojených do jednotlivých aktivit. Zobraz sloupcový graf a mohl bys je seřadit vzestupně podle celkového počtu ?",
            "Zobraz sloupcový graf o tom, kolik členů fakulty se účastní jednotlivých aktivit? Vrať názvy aktivit a počet členů fakulty a seřaď je vzestupně podle osy y.",
            "Ukaž všechny názvy aktivit a počet pracovníků fakulty zapojených do jednotlivých aktivit ve sloupcovém grafu a mohl bys seřadit celkový počet od nejnižšího po nejvyšší?",
            "Kolik členů fakulty se účastní jednotlivých aktivit? Vrať názvy aktivit a počet členů fakulty. Zobraz sloupcový graf a můžeš je seřadit vzestupně podle celkového počtu?"
        ],
        "irrelevant_tables": [
            "Student"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2575@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY sum(T1.Num_of_stock) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name ORDER BY sum(T1.Num_of_stock) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "sum(T1.Num_of_stock)",
            "x_data": [
                [
                    "IPhone 7",
                    "IPhone X",
                    "IPhone 5s",
                    "IPhone 6s"
                ]
            ],
            "y_data": [
                [
                    874,
                    2540,
                    2914,
                    4324
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "U každého telefonu zobraz jeho názvy a celkový počet zásob. Vizualizuj pomocí sloupcového grafu, seřaď jej podle osy Y vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2581@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY Name ORDER BY COUNT(Name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "IPhone X",
                    "IPhone 5s",
                    "IPhone 7",
                    "IPhone 6s"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Porovnej počet trhů, na kterých se jednotlivé telefony prodávají, pomocí sloupcového grafu. Mohl bys zobrazit počet trhů v sestupném pořadí?",
            "Chci porovnat počet názvů telefonů pomocí sloupcového grafu, mohl bys je seřadit podle počtu trhu sestupně?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2582@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT District , COUNT(District) FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID GROUP BY District ORDER BY COUNT(District) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "phone_market",
        "vis_obj": {
            "chart": "bar",
            "x_name": "District",
            "y_name": "COUNT(District)",
            "x_data": [
                [
                    "British Columbia",
                    "Alberta",
                    "Quebec",
                    "Ontario"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY District",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf pro vizualizaci počtu okresů trhů, na kterých se nacházejí, a seznam podle celkového počtu od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1371@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Investor , COUNT(*) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "entrepreneur",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Investor",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Doug Richard",
                    "Peter Jones",
                    "Rachel Elnaugh",
                    "Simon Woodroffe",
                    "Duncan Bannatyne"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz sloupcový graf pro to, kdo jsou investoři podnikatelů a odpovídající počet podnikatelů investovaných každým investorem? Chci je zobrazit vzestupně podle osy y.",
            "Nakresli sloupcový graf investora v porovnání s celkovým počtem, celkový počet zobraz vzestupně, prosím.",
            "Vrať histogram o tom, kolik podnikatelů odpovídá každému investorovi. Chci je seřadit od nejnižšího po nejvyšší počet podle osy Y."
        ],
        "irrelevant_tables": [
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1373@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Investor , COUNT(Investor) FROM entrepreneur GROUP BY Investor ORDER BY COUNT(Investor) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "entrepreneur",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Investor",
            "y_name": "COUNT(Investor)",
            "x_data": [
                [
                    "Duncan Bannatyne",
                    "Simon Woodroffe",
                    "Rachel Elnaugh",
                    "Peter Jones",
                    "Doug Richard"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Investor",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro zobrazení počtu investorů od různých investorů a zobrazení osy Y v sestupném pořadí, prosím.",
            "Do kolika společností investoval každý investor? Ukaž mi sloupcový graf a zobraz osu Y v sestupném pořadí, prosím.",
            "Zobraz počet společností, do kterých investoval každý investor, pomocí sloupcového grafu. Osu y seřaď od nejvyššího po nejnižší pořadí."
        ],
        "irrelevant_tables": [
            "people"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1375@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = \"Simon Woodroffe\" OR T1.Investor = \"Peter Jones\"  ORDER BY Date_of_Birth ASC",
                "binning": "BIN Date_of_Birth BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Date_of_Birth , COUNT(Date_of_Birth) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = \"Simon Woodroffe\" OR T1.Investor = \"Peter Jones\"  ORDER BY Date_of_Birth ASC BIN Date_of_Birth BY YEAR"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "entrepreneur",
        "vis_obj": {
            "chart": "line",
            "x_name": "Date_of_Birth",
            "y_name": "COUNT(Date_of_Birth)",
            "x_data": [
                [
                    1972,
                    1975,
                    1977,
                    1981
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN Date_of_Birth BY YEAR",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Čárové grafy zobrazující trendy roku narození podnikatelů. Mohl bys prosím uvést osu x ve vzestupném pořadí?",
            "Čárový graf pro vrácení počtu dat (rozděl podle roku) narození podnikatelů, řazení X vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "66@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\"  ORDER BY COUNT(booking_start_date) ASC",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\"  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2017",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    3,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet počátečních dat všech rezervací apartmánů provedených hosty s kódem pohlaví \"Žena\" pro každý rok pomocí sloupcového grafu a osu y seřaď vzestupně.",
            "Jaký je počet rezervací apartmánů od hostů ženského pohlaví (kód pohlaví \"žena\") za každý rok? Nakresli sloupcový graf, chci jej seřadit vzestupně na ose y."
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "67@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\"  ORDER BY COUNT(booking_start_date) ASC",
                "binning": "BIN booking_start_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\"  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "Sun",
                    "Fri",
                    "Thur",
                    "Wed",
                    "Mon",
                    "Sat",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    0,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zobraz počet počátečních dat všech rezervací apartmánů provedených hosty s kódem pohlaví \"Žena\" pro každý den v týdnu, zobraz Y od nejnižšího po nejvyšší pořadí.",
            "Sloupcový graf zobrazující počet rezervací apartmánů provedených hosty ženského pohlaví (kód pohlaví \"Žena\") pro každý den v týdnu, a mohl bys zobrazit celkový počet vzestupně pořadí?"
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "Apartments"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "70@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2  ORDER BY COUNT(booking_start_date) ASC",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2017",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    6,
                    9
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaký je počet termínů zahájení rezervací apartmánů s více než 2 ložnicemi pro každý rok? Vrať sloupcový graf a seřaď Y vzestupně.",
            "Zjisti počet dat zahájení rezervací pro byty, které mají více než dvě ložnice, pro každý rok pomocí sloupcového grafu. Mohl bys je zobrazit vzestupně podle celkového počtu, prosím?"
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "Guests"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "71@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2  ORDER BY COUNT(booking_start_date) ASC",
                "binning": "BIN booking_start_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "Sun",
                    "Thur",
                    "Wed",
                    "Fri",
                    "Tue",
                    "Mon",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zjisti počet termínů zahájení rezervací pro apartmány s více než dvěma ložnicemi pro každý den v týdnu a seřaď celkový počet vzestupně.",
            "Jaký je počet termínů zahájení rezervace apartmánů s více než 2 ložnicemi pro každý den v týdnu? Ukaž mi sloupcový graf a zobraz ho vzestupně podle celkového počtu, prosím."
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "Apartment_Facilities"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "75@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = \"Duplex\"  ORDER BY COUNT(booking_start_date) ASC",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = \"Duplex\"  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2017",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    1,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaký je počet termínů zahájení rezervací apartmánů s typovým kódem \"Duplex\" v jednotlivých letech? Vrať sloupcový graf, zobraz osu y vzestupně.",
            "Vrať počet dat zahájení rezervací pro byty, které mají kód typu \"Duplex\" pro každý rok ve sloupcovém grafu a mohl bys seřadit osu y vzestupně?"
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "76@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = \"Duplex\"  ORDER BY COUNT(booking_start_date) DESC",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = \"Duplex\"  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    6,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať ve sloupcovém grafu počet dat ukončení rezervace pro byty s kódem typu \"Duplex\" pro každý rok a seřaď je sestupně podle počtu dat zahájení rezervace."
        ],
        "irrelevant_tables": [
            "Guests",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "82@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY facility_code ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT facility_code , COUNT(facility_code) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4 GROUP BY facility_code ORDER BY facility_code ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "facility_code",
            "y_name": "COUNT(facility_code)",
            "x_data": [
                [
                    "Cable TV",
                    "Gym"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY facility_code",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro zobrazení počtu kódů zařízení bytů s více než 4 ložnicemi, který chci zobrazit vzestupně podle facility_code.",
            "Jaké jsou kódy zařízení bytů s více než čtyřmi pokoji a spočítej je pomocí sloupcového grafu. Chci je zobrazit vzestupně podle kódu zařízení."
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "Guests"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "83@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC",
                "binning": "BIN booking_end_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC BIN booking_end_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_end_date",
            "y_name": "COUNT(booking_end_date)",
            "x_data": [
                [
                    "2018",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    4,
                    11
                ]
            ],
            "classify": [],
            "describe": "BIN booking_end_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik bylo za rok rezervací apartmánů? Ukaž mi sloupcový graf s datem ukončení rezervace podle roku, seřazený vzestupně podle Y.",
            "Zobraz počet rezervací bytů v jednotlivých letech a datum ukončení rezervace podle roku pomocí sloupcového grafu. Mohl bys prosím uvést Y vzestupně?"
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "84@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC",
                "binning": "BIN booking_end_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings  ORDER BY COUNT(booking_end_date) ASC BIN booking_end_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_end_date",
            "y_name": "COUNT(booking_end_date)",
            "x_data": [
                [
                    "Thur",
                    "Fri",
                    "Mon",
                    "Sun",
                    "Wed",
                    "Sat",
                    "Tue"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    2,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "BIN booking_end_date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet rezervací apartmánů v jednotlivých dnech v týdnu a datum ukončení rezervace rozděl podle dnů v týdnu pomocí sloupcového grafu, seřazeného od nejnižšího po nejvyšší celkový počet.",
            "Kolik rezervací apartmánů je v jednotlivých pracovních dnech? Ukaž mi sloupcový graf s datem ukončení rezervace podle dnů v týdnu. Mohl bys zobrazit osu Y vzestupně?"
        ],
        "irrelevant_tables": [
            "Apartments",
            "Guests"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "87@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings GROUP BY booking_end_date ORDER BY booking_end_date DESC",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT booking_end_date , COUNT(booking_end_date) FROM Apartment_Bookings GROUP BY booking_end_date ORDER BY booking_end_date DESC"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "line",
            "x_name": "booking_end_date",
            "y_name": "COUNT(booking_end_date)",
            "x_data": [
                [
                    "2018-03-20",
                    "2018-02-25",
                    "2018-02-19",
                    "2018-02-06",
                    "2017-11-29",
                    "2017-11-13",
                    "2017-11-12",
                    "2017-10-25",
                    "2017-10-07",
                    "2017-10-06",
                    "2017-10-03",
                    "2017-09-30",
                    "2017-09-29",
                    "2017-09-28"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY booking_end_date",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet rezervací apartmánů v jednotlivých dnech a seskup je podle data ukončení rezervace pomocí čárového grafu, seřazeného sestupně podle booking_end_date."
        ],
        "irrelevant_tables": [
            "Apartment_Facilities",
            "Guests"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "88@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2017",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    6,
                    9
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik bylo za každý rok rezervací apartmánů? Nakresli sloupcový graf s datem zahájení rezervace podle ročního intervalu a seřaď jej vzestupně podle osy Y.",
            "Kolik bylo za každý rok rezervací apartmánů? Nakresli sloupcový graf, v němž se datum zahájení rezervace rozdělí podle ročních intervalů a na ose y se seřadí od nejnižšího po nejvyšší.",
            "Zobraz počet rezervací apartmánů za každý rok a datum zahájení rezervace podle ročního intervalu ve sloupcovém grafu, který je na ose y seřazen od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "Apartments",
            "Apartment_Facilities"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "89@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2017",
                    "2016"
                ]
            ],
            "y_data": [
                [
                    6,
                    9
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet rezervací apartmánů pro každý rok a datum zahájení rezervace podle ročního intervalu ve sloupcovém grafu a zobraz osu y od nejnižšího po nejvyšší.",
            "Kolik bylo za každý rok rezervací apartmánů? Nakresli sloupcový graf, v němž se datum zahájení rezervace rozdělí podle ročních intervalů a seřadí se vzestupně podle Y, prosím."
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "Apartment_Facilities"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "90@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) DESC",
                "binning": "BIN booking_start_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "Sat",
                    "Mon",
                    "Tue",
                    "Fri",
                    "Wed",
                    "Thur",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet rezervací apartmánů pro každý den v týdnu a datum zahájení rezervace podle intervalu dnů v týdnu ve sloupcovém grafu a seřaď osu y sestupně.",
            "Kolik bylo za každý všední den rezervací apartmánů? Nakresli sloupcový graf, v němž se datum zahájení rezervace rozdělí podle intervalu dnů v týdnu a seřadí se podle osy y od nejvyššího po nejnižší, prosím."
        ],
        "irrelevant_tables": [
            "Apartment_Facilities",
            "Apartments"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "91@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC",
                "binning": "BIN booking_start_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id  ORDER BY COUNT(booking_start_date) ASC BIN booking_start_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "Sun",
                    "Thur",
                    "Wed",
                    "Fri",
                    "Tue",
                    "Mon",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    4,
                    4
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet rezervací apartmánů pro každý den v týdnu a datum začátku rezervace podle intervalu dnů v týdnu ve sloupcovém grafu a seřaď je vzestupně podle osy Y, prosím.",
            "Kolik bylo za každý všední den rezervací apartmánů? Nakresli sloupcový graf s datem zahájení rezervace podle intervalu dnů v týdnu, seřazený vzestupně podle osy y."
        ],
        "irrelevant_tables": [
            "Apartments",
            "Apartment_Facilities"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "92@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT guest_first_name , COUNT(guest_first_name) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id GROUP BY guest_first_name ORDER BY COUNT(guest_first_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT guest_first_name , COUNT(guest_first_name) FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id GROUP BY guest_first_name ORDER BY COUNT(guest_first_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "guest_first_name",
            "y_name": "COUNT(guest_first_name)",
            "x_data": [
                [
                    "Else",
                    "Gabe",
                    "Juvenal",
                    "Keith",
                    "Louvenia",
                    "Mozell",
                    "Tamia",
                    "Keon",
                    "Lou",
                    "Rebeca"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    4
                ]
            ],
            "classify": [],
            "describe": "GROUP BY guest_first_name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik bylo rezervací pro různé hosty? Zobraz mi sloupcový graf seskupený podle křestního jména hosta, zobrazený podle počtu křestních jmen hosta vzestupně.",
            "Zobraz počet rezervací pro různé hosty a seskup je podle křestního jména hosta do sloupcového grafu a seřaď je podle celkového počtu od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "Apartment_Facilities",
            "View_Unit_Status"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "99@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id  ORDER BY COUNT(booking_start_date) DESC",
                "binning": "BIN booking_start_date BY YEAR"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY YEAR"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "2016",
                    "2017"
                ]
            ],
            "y_data": [
                [
                    9,
                    6
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY YEAR",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet dat zahájení všech rezervací apartmánů pro každý rok pomocí sloupcového grafu, osa y se zobrazuje od nejvyššího po nejnižší pořadí.",
            "Jaké je číslo data zahájení rezervace každého apartmánu pro každý rok? Vrať sloupcový graf, a chci ho seřadit podle osy y sestupně prosím."
        ],
        "irrelevant_tables": [
            "Apartment_Buildings",
            "Guests"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "100@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id  ORDER BY COUNT(booking_start_date) DESC",
                "binning": "BIN booking_start_date BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT booking_start_date , COUNT(booking_start_date) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id  ORDER BY COUNT(booking_start_date) DESC BIN booking_start_date BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "booking_start_date",
            "y_name": "COUNT(booking_start_date)",
            "x_data": [
                [
                    "Sat",
                    "Mon",
                    "Tue",
                    "Fri",
                    "Wed",
                    "Thur",
                    "Sun"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN booking_start_date BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké je číslo data zahájení každé rezervace apartmánu pro každý den v týdnu? Vrať sloupcový graf a zobraz jej podle osy y sestupně.",
            "Zobraz počet termínů zahájení všech rezervací apartmánů pro každý den v týdnu pomocí sloupcového grafu, zobraz je sestupně podle celkového počtu, prosím."
        ],
        "irrelevant_tables": [
            "Apartment_Facilities",
            "Apartment_Buildings"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "102@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT apt_number , COUNT(apt_number) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id GROUP BY apt_number ORDER BY COUNT(apt_number) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT apt_number , COUNT(apt_number) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id GROUP BY apt_number ORDER BY COUNT(apt_number) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "apt_number",
            "y_name": "COUNT(apt_number)",
            "x_data": [
                [
                    "Apt. 187",
                    "Apt. 477",
                    "Apt. 585",
                    "Apt. 794",
                    "Apt. 940",
                    "Suite 088",
                    "Suite 634",
                    "Suite 749",
                    "Apt. 859",
                    "Suite 693"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY apt_number",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf o počtu rezervací pro každé číslo bytu, chci uvést osu y vzestupně.",
            "Kolik bylo rezervací pro každé číslo apartmánu? Vykresli sloupcový graf, zobraz osu y vzestupně."
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Guests"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "104@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT apt_type_code , COUNT(apt_type_code) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = \"Kyle\" GROUP BY apt_type_code ORDER BY COUNT(apt_type_code) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT apt_type_code , COUNT(apt_type_code) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = \"Kyle\" GROUP BY apt_type_code ORDER BY COUNT(apt_type_code) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "apartment_rentals",
        "vis_obj": {
            "chart": "bar",
            "x_name": "apt_type_code",
            "y_name": "COUNT(apt_type_code)",
            "x_data": [
                [
                    "Flat",
                    "Studio",
                    "Duplex"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY apt_type_code",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik budov spravuje společnost Kyle? Vrať sloupcový graf seskupený podle kódů typů bytů, osu y seřaď vzestupně.",
            "Udělej mi sloupcový graf zobrazující počet budov spravovaných společností \"Kyle\" a seskup je podle kódů typů bytů. Mohl bys je seřadit od nejnižšího po nejvyšší celkový počet?"
        ],
        "irrelevant_tables": [
            "View_Unit_Status",
            "Apartment_Facilities"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1521@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Hometown , COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "gymnast",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Hometown",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Bonao",
                    "Los Alcarrizos",
                    "Santiago de los Caballeros",
                    "Santo Domingo"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf o tom, kolik gymnastů je z každého rodného města, a seřaď je podle Y od nejnižšího po nejvyšší.",
            "Kolik gymnastů je z každého rodného města? Vypiš je jako sloupcový graf, seřaď je podle celkového počtu.",
            "Ukaž mi sloupcový graf, kolik gymnastů je z každého rodného města. Chci je zobrazit od nejnižšího po nejvyšší celkový počet.",
            "Nakresli sloupcový graf, z jakých měst pocházejí gymnastky a jaký je jejich počet? Seřaď je podle Y od nejnižšího po nejvyšší.",
            "Zobraz sloupcový graf, v jakých městech mají gymnastky rodiště a jaký je jejich počet, a seřaď je na ose y vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2855@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , COUNT(name) FROM playlists GROUP BY name ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "store_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "90's Music",
                    "Audiobooks",
                    "Brazilian Music",
                    "Classical",
                    "Classical 101 - Deep Cuts",
                    "Classical 101 - Next Steps",
                    "Classical 101 - The Basics",
                    "Grunge",
                    "Heavy Metal Classic",
                    "Movies",
                    "Music",
                    "Music Videos",
                    "On-The-Go 1",
                    "TV Shows"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš název všech playlistů a spočítej je pomocí sloupcového grafu, zobrazeného na ose X vzestupně.",
            "Sloupcový graf pro to, jaký je počet názvů všech playlistů? Mohl bys uspořádat osu x vzestupně, prosím?",
            "Sloupcový graf: osa x - název osa y - kolik záznamů pro název existuje. Zobraz vzestupně podle názvů."
        ],
        "irrelevant_tables": [
            "sqlite_sequence",
            "invoices"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "1329@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "employee_hire_evaluation",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "FC Haka",
                    "HJK",
                    "FF Jaro",
                    "FC Lahti",
                    "FC KooTeePee",
                    "FC Inter"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet zaměstnanců přijatých v jednotlivých prodejnách; zobraz název prodejny a nakresli je jako sloupcový graf. Zobraz Y v sestupném pořadí.",
            "Pro každou prodejnu vrať počet zaměstnanců, kteří v ní pracují, a název prodejny. Zakresli je jako sloupcový graf, celkový počet uveď v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "evaluation",
            "employee"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1335@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Is_full_time , COUNT(Is_full_time) FROM hiring GROUP BY Is_full_time ORDER BY COUNT(Is_full_time) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "employee_hire_evaluation",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Is_full_time",
            "y_name": "COUNT(Is_full_time)",
            "x_data": [
                [
                    "T",
                    "F"
                ]
            ],
            "y_data": [
                [
                    5,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Is_full_time",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o rozložení Is_full_time a množství Is_full_time. Seskup podle atributu Is_full_time a zobraz Y v sestupném pořadí.",
            "Sloupcový graf zobrazuje rozložení Is_full_time a množství Is_full_time. Seskup podle atributu Is_full_time a seřaď podle celkového počtu sestupně.",
            "Vrať sloupcový graf o rozložení Is_full_time a množství Is_full_time. Seskup je podle atributu Is_full_time a zobraz sestupně podle počtu Is_full_time.",
            "Udělej mi srovnání o množství Is_full_time nad Is_full_time, a seskup podle atributu Is_full_time sloupcovým grafem a seřaď podle Y od nejvyššího po nejnižší.",
            "Nakresli sloupcový graf zaměstnanců na plný úvazek vs počtu zaměstnanců na plný úvazek a seřaď je podle Y od nejvyššího po nejnižší.",
            "Ukaž mi rozložení Is_full_time a množství Is_full_time. Seskup podle atributu Is_full_time do sloupcového grafu a zobraz sestupně podle počtu Is_full_time."
        ],
        "irrelevant_tables": [
            "evaluation",
            "shop"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1349@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC",
                "binning": "BIN Start_from BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring GROUP BY Is_full_time ORDER BY Start_from ASC BIN Start_from BY YEAR"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "employee_hire_evaluation",
        "vis_obj": {
            "chart": "line",
            "x_name": "Start_from",
            "y_name": "COUNT(Start_from)",
            "x_data": [
                [
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    0
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [
                "F",
                "T"
            ],
            "describe": "GROUP BY Is_full_time, BIN Start_from BY YEAR",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli čárový graf o změně množství Start_from nad Start_from. Seskup podle atributu Is_full_time a rozděl start_from podle roku, osu x seřaď vzestupně.",
            "Vizualizuj čárový graf o změně množství Start_from nad Start_from. Seskup podle atributu Is_full_time a rozděl start_from podle roku a zobraz podle osy X vzestupně.",
            "Čárový graf zobrazuje změnu množství Start_from nad Start_from. Seskup jej podle atributu Is_full_time a rozděl start_from podle roku, zobrazení podle Start_from vzestupně."
        ],
        "irrelevant_tables": [
            "shop",
            "evaluation"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "field"
            }
        ]
    },
    "1356@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC",
                "binning": "BIN Start_from BY YEAR"
            },
            "VQL": "Visualize LINE SELECT Start_from , COUNT(Start_from) FROM hiring  ORDER BY Start_from ASC BIN Start_from BY YEAR"
        },
        "chart": "Line",
        "hardness": "Medium",
        "db_id": "employee_hire_evaluation",
        "vis_obj": {
            "chart": "line",
            "x_name": "Start_from",
            "y_name": "COUNT(Start_from)",
            "x_data": [
                [
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Start_from BY YEAR",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj čárový graf o změně množství Start_from nad Start_from. Rozděl start_from podle roku a zobraz vzestupně pomocí X.",
            "Nakresli lineární graf o změně množství Start_from přes Start_from. Rozděl start_from podle roku. Mohl bys zobrazit data na ose X vzestupně?",
            "Čárový graf zobrazuje trend množství Start_from přes Start_from rozděl start_from podle roku a zobraz vzestupně na ose x.",
            "Ukaž mi změnu množství Start_from přes Start_from rozděl start_from podle roku v čárovém grafu a mohl bys zobrazit data na ose X vzestupně?"
        ],
        "irrelevant_tables": [
            "employee",
            "evaluation"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "515@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department ORDER BY count(DISTINCT dept_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_name) FROM department ORDER BY count(DISTINCT dept_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "SCHOOL_CODE",
            "y_name": "count(DISTINCT dept_name)",
            "x_data": [
                [
                    "BUS",
                    "A&SCI"
                ]
            ],
            "y_data": [
                [
                    4,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet kateder v každé škole. Vyznač je jako sloupcový graf, osu y zobraz vzestupně.",
            "Kolik kateder je na jednotlivých školách? Zobraz sloupcový graf a osu y zobraz vzestupně.",
            "Sloupcový graf o počtu kateder na jednotlivých školách, osu y seřaď vzestupně.",
            "Vrať sloupcový graf s údaji o tom, kolik kateder je na jednotlivých školách, a seřaď je vzestupně podle count(DISTINCTdept_name)."
        ],
        "irrelevant_tables": [
            "ENROLL",
            "EMPLOYEE"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "522@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY CRS_CODE ,  EMP_FNAME ORDER BY COUNT(EMP_FNAME) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY CRS_CODE ,  EMP_FNAME ORDER BY COUNT(EMP_FNAME) DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_FNAME",
            "y_name": "COUNT(EMP_FNAME)",
            "x_data": [
                [
                    "Peter",
                    "Gerald",
                    "Ismael",
                    "Carlos",
                    "Arnelle",
                    "Robert"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    2,
                    1
                ],
                [
                    0,
                    0,
                    2,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    0,
                    2,
                    0,
                    0
                ],
                [
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    2,
                    0,
                    0,
                    0,
                    0
                ],
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [
                "ACCT-211",
                "ACCT-212",
                "CIS-220",
                "CIS-420",
                "QM-261",
                "QM-362"
            ],
            "describe": "GROUP BY CRS_CODE, GROUP BY EMP_FNAME",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik předmětů každý učitel vyučoval? Ukaž mi sloupcový graf na ose x je křestní jméno instruktora a skupina podle kódu kurzu. Mohl bys seřadit počet emp fname sestupně, prosím?"
        ],
        "irrelevant_tables": [
            "STUDENT",
            "ENROLL"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "field",
                "stacked_bar": true
            }
        ]
    },
    "523@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY EMP_FNAME ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY EMP_FNAME ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_FNAME",
            "y_name": "COUNT(EMP_FNAME)",
            "x_data": [
                [
                    "Arnelle",
                    "Carlos",
                    "Gerald",
                    "Ismael",
                    "Peter",
                    "Robert"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    3,
                    2,
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY EMP_FNAME",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik předmětů každý učitel vyučoval? Ukaž mi sloupcový graf seskupený podle křestního jména instruktora a seřazený podle jmen vzestupně."
        ],
        "irrelevant_tables": [
            "COURSE",
            "DEPARTMENT"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "529@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code ORDER BY DEPT_CODE DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "DEPT_CODE",
            "y_name": "count(*)",
            "x_data": [
                [
                    "SOC",
                    "PSYCH",
                    "MKT/MGT",
                    "MATH",
                    "HIST",
                    "ENG",
                    "ECON/FIN",
                    "CIS",
                    "BIOL",
                    "ART",
                    "ACCT"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1,
                    3,
                    2,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet profesorů s doktorským titulem na jednotlivých katedrách. Zobraz sloupcový graf a chci seřadit osu x sestupně."
        ],
        "irrelevant_tables": [
            "DEPARTMENT",
            "CLASS"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "533@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DEPT_CODE , min(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY min(stu_gpa) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DEPT_CODE , min(stu_gpa) FROM student GROUP BY DEPT_CODE ORDER BY min(stu_gpa) DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "DEPT_CODE",
            "y_name": "min(stu_gpa)",
            "x_data": [
                [
                    "EDU",
                    "CIS",
                    "BIOL",
                    "ACCT",
                    "ENGL"
                ]
            ],
            "y_data": [
                [
                    3.87,
                    3.09,
                    2.84,
                    2.26,
                    2.11
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaký je nejnižší průměrný studijní výsledek pro každou katedru? Vrať sloupcový graf, zobrazený sestupně podle Y.",
            "Sloupcový graf: osa x - kód katedry, osa y - minimální studijní gpa. Zobraz osu Y v sestupném pořadí.",
            "Pomocí sloupcového grafu zjisti minimální gpa všech studentů na jednotlivých katedrách a zobraz je sestupně podle Y."
        ],
        "irrelevant_tables": [
            "CLASS",
            "EMPLOYEE"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "543@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY SCHOOL_CODE DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT SCHOOL_CODE , count(DISTINCT dept_address) FROM department ORDER BY SCHOOL_CODE DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "SCHOOL_CODE",
            "y_name": "count(DISTINCT dept_address)",
            "x_data": [
                [
                    "BUS",
                    "A&SCI"
                ]
            ],
            "y_data": [
                [
                    4,
                    7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o tom, kolik různých míst má která škola, a seřaď je podle osy x sestupně.",
            "Spočítej různé adresy jednotlivých škol pomocí sloupcového grafu a seřaď je podle osy x sestupně, prosím."
        ],
        "irrelevant_tables": [
            "PROFESSOR",
            "ENROLL"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "544@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT PROF_OFFICE , COUNT(PROF_OFFICE) FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num GROUP BY PROF_OFFICE ORDER BY PROF_OFFICE DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT PROF_OFFICE , COUNT(PROF_OFFICE) FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num GROUP BY PROF_OFFICE ORDER BY PROF_OFFICE DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "PROF_OFFICE",
            "y_name": "COUNT(PROF_OFFICE)",
            "x_data": [
                [
                    "KLR 409B",
                    "KLR 333",
                    "KLR 300",
                    "KLR 284",
                    "KLR 244",
                    "KLR 229D",
                    "KLR 211",
                    "KLR 203E",
                    "KLR 126",
                    "DRE 208",
                    "DRE 156",
                    "DRE 102",
                    "BBG 208",
                    "BBG 185",
                    "AAK 297",
                    "AAK 230",
                    "AAK 201",
                    "AAK 194",
                    "AAK 160"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY PROF_OFFICE",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet profesorů na jednotlivých pracovištích pomocí sloupcového grafu, mohl bys je zobrazit sestupně podle pracovišť?"
        ],
        "irrelevant_tables": [
            "CLASS",
            "STUDENT"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "545@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY EMP_FNAME DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num GROUP BY EMP_FNAME ORDER BY EMP_FNAME DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_FNAME",
            "y_name": "COUNT(EMP_FNAME)",
            "x_data": [
                [
                    "Willa",
                    "Van",
                    "Ross",
                    "Ronald",
                    "Robert",
                    "Ralph",
                    "Preston",
                    "Peter",
                    "Melanie",
                    "James",
                    "Ismael",
                    "Hermine",
                    "Herman",
                    "Gerald",
                    "George",
                    "Doreen",
                    "Carlos",
                    "Arnelle",
                    "Annelise",
                    "Anne"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY EMP_FNAME",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik profesorů připadá na každé křestní jméno? Ukaž mi sloupcový graf. Mohl bys ho seřadit podle jmen sestupně, prosím?"
        ],
        "irrelevant_tables": [
            "CLASS",
            "DEPARTMENT"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "548@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT EMP_DOB , T2.EMP_NUM, COUNT(EMP_DOB) FROM employee AS T1 JOIN PROFESSOR AS T2 ON T1.EMP_NUM = T2.EMP_NUM group by T2.EMP_NUM ORDER BY EMP_DOB ASC",
                "binning": "BIN EMP_DOB BY YEAR"
            },
            "VQL": "Visualize LINE SELECT EMP_DOB , T2.EMP_NUM, COUNT(EMP_DOB) FROM employee AS T1 JOIN PROFESSOR AS T2 ON T1.EMP_NUM = T2.EMP_NUM group by T2.EMP_NUM ORDER BY EMP_DOB ASC"
        },
        "chart": "Line",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "EMP_DOB",
            "y_name": "COUNT(EMP_DOB)",
            "x_data": [
                [
                    1937,
                    1939,
                    1940,
                    1941,
                    1944,
                    1945,
                    1946,
                    1948,
                    1949,
                    1950,
                    1951,
                    1952,
                    1953,
                    1955,
                    1957,
                    1960,
                    1963,
                    1973
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    2,
                    1,
                    2,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN EMP_DOB BY YEAR",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz data narození profesorů a rozděl data podle ročních intervalů v čárovém grafu. Osu X zobraz vzestupně.",
            "Jaké je datum narození profesorů vyučujících předmět ACCT-211? Zařaď datum podle intervalu roku do řádkového grafu a seřaď podle roku vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "PROFESSOR",
            "DEPARTMENT"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            }
        ]
    },
    "550@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'  ORDER BY COUNT(EMP_HIREDATE) DESC",
                "binning": "BIN EMP_HIREDATE BY MONTH"
            },
            "VQL": "Visualize BAR SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'  ORDER BY COUNT(EMP_HIREDATE) DESC BIN EMP_HIREDATE BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_HIREDATE",
            "y_name": "COUNT(EMP_HIREDATE)",
            "x_data": [
                [
                    "May",
                    "Aug",
                    "June",
                    "July"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN EMP_HIREDATE BY MONTH",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet profesorů, kteří jsou v kanceláři DRE 102 zaměstnáni v každém měsíci pomocí sloupcového grafu, osu y zobraz v sestupném pořadí.",
            "Kolik profesorů, jejichž kancelář se nachází v DRE 102, je každý měsíc přijato do zaměstnání? Vrať sloupcový graf a zobraz osu y v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "DEPARTMENT",
            "CLASS"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "552@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'  ORDER BY COUNT(EMP_HIREDATE) ASC",
                "binning": "BIN EMP_HIREDATE BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT EMP_HIREDATE , COUNT(EMP_HIREDATE) FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'  ORDER BY COUNT(EMP_HIREDATE) ASC BIN EMP_HIREDATE BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_HIREDATE",
            "y_name": "COUNT(EMP_HIREDATE)",
            "x_data": [
                [
                    "Mon",
                    "Sun",
                    "Thur",
                    "Tue",
                    "Wed",
                    "Fri",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN EMP_HIREDATE BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik profesorů, jejichž kancelář se nachází v DRE 102, je zaměstnáno v každém pracovním dni? Vrať sloupcový graf a mohl bys jej seřadit vzestupně podle osy Y?",
            "Zobraz počet profesorů, kteří jsou v kanceláři DRE 102 zaměstnáni v každém dni v týdnu pomocí sloupcového grafu a chci je vypsat od nejnižšího po nejvyšší Y."
        ],
        "irrelevant_tables": [
            "CLASS",
            "COURSE"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "553@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT CRS_CODE , count(*) FROM CLASS GROUP BY crs_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT CRS_CODE , count(*) FROM CLASS GROUP BY crs_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "CRS_CODE",
            "y_name": "count(*)",
            "x_data": [
                [
                    "CIS-220",
                    "ACCT-211",
                    "QM-362",
                    "QM-261",
                    "ACCT-212",
                    "CIS-420"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik má každý kurz sekcí? Vizualizuj pomocí sloupcového grafu a seřaď osu y sestupně.",
            "Kolik má každý kurz sekcí? Vizualizuj pomocí sloupcového grafu a uveď celkový počet od nejvyššího po nejnižší, prosím.",
            "Vizualizuj sloupcový graf o tom, kolik má každý kurz sekcí. Seřaď jej podle celkového počtu sestupně.",
            "Sloupcový graf: osa x - kód crs, osa y - celkový počet, a seřaď osu Y od nejvyšší po nejnižší.",
            "Nakresli sloupcový graf o tom, kolik má každý kurz sekcí. Zobraz jej sestupně podle osy y."
        ],
        "irrelevant_tables": [
            "PROFESSOR",
            "STUDENT"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "555@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code GROUP BY dept_code ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "DEPT_CODE",
            "y_name": "count(*)",
            "x_data": [
                [
                    "CIS",
                    "ACCT"
                ]
            ],
            "y_data": [
                [
                    8,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik tříd se koná v jednotlivých odděleních? Vizualizuj pomocí sloupcového grafu a seřaď je podle celkového počtu od nejvyššího po nejnižší.",
            "Zjisti počet tříd v jednotlivých odděleních. Vizualizuj je pomocí sloupcového grafu a chci seřadit osu Y sestupně.",
            "Sloupcový graf o tom, kolik tříd se koná v jednotlivých odděleních? Mohli bys je seřadit sestupně podle Y?",
            "Vrať sloupcový graf o tom, kolik tříd se koná v jednotlivých odděleních? Chci je seřadit sestupně podle osy Y."
        ],
        "irrelevant_tables": [
            "STUDENT",
            "EMPLOYEE"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "558@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT EMP_FNAME , COUNT(EMP_FNAME) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num GROUP BY CRS_DESCRIPTION ,  EMP_FNAME ORDER BY EMP_FNAME ASC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "EMP_FNAME",
            "y_name": "COUNT(EMP_FNAME)",
            "x_data": [
                [
                    "Arnelle",
                    "Carlos",
                    "Gerald",
                    "Ismael",
                    "Peter",
                    "Robert"
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    0,
                    0,
                    0,
                    1
                ],
                [
                    0,
                    0,
                    0,
                    2,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    0
                ],
                [
                    0,
                    2,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    2,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    2,
                    0
                ]
            ],
            "classify": [
                "Accounting I",
                "Accounting II",
                "Database Design and Implementation",
                "Intro. to Microcomputing",
                "Intro. to Statistics",
                "Statistical Applications"
            ],
            "describe": "GROUP BY CRS_DESCRIPTION, GROUP BY EMP_FNAME",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobrazení počtu kurzů pro každého instruktora ve sloupcovém grafu. Osa x je křestní jméno instruktora a skupina podle popisu kurzu a chci je zobrazit vzestupně podle osy x.",
            "Kolik kurzů učí každý učitel? Ukaž mi sloupcový graf na ose x je křestní jméno učitele. Seřaď ji podle popisu předmětu a zobraz podle X vzestupně."
        ],
        "irrelevant_tables": [
            "ENROLL",
            "DEPARTMENT"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            },
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "564@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DEPT_CODE , count(*) FROM student GROUP BY dept_code ORDER BY DEPT_CODE ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DEPT_CODE , count(*) FROM student GROUP BY dept_code ORDER BY DEPT_CODE ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "DEPT_CODE",
            "y_name": "count(*)",
            "x_data": [
                [
                    "ACCT",
                    "BIOL",
                    "CIS",
                    "EDU",
                    "ENGL"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet studentů pro každou katedru. Vypiš je jako sloupcový graf, chci je vypsat podle jmen vzestupně.",
            "Kolik studentů je na jednotlivých katedrách? Vizualizuj pomocí sloupcového grafu a chci je seřadit podle jmen vzestupně.",
            "Vrať histogram o počtu studentů na jednotlivých katedrách a zobraz jej pomocí osy X vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "PROFESSOR",
            "ENROLL"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "576@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME ORDER BY COUNT(STU_FNAME) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT STU_FNAME , COUNT(STU_FNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_FNAME ORDER BY COUNT(STU_FNAME) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "STU_FNAME",
            "y_name": "COUNT(STU_FNAME)",
            "x_data": [
                [
                    "William",
                    "Anne"
                ]
            ],
            "y_data": [
                [
                    3,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY STU_FNAME",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik studentů, kteří se účastní kurzu, obdrželo A nebo C? Seskup je podle křestních jmen studentů pomocí sloupcového grafu a zobraz je sestupně podle celkového počtu.",
            "Zjisti počet studentů, kteří absolvovali nějaký předmět a dostali jedničku nebo trojku, seskup je podle křestního jména do sloupcového grafu a seřaď je podle osy Y sestupně."
        ],
        "irrelevant_tables": [
            "CLASS",
            "PROFESSOR"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "578@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT STU_LNAME , COUNT(STU_LNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_LNAME ORDER BY COUNT(STU_LNAME) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT STU_LNAME , COUNT(STU_LNAME) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A' GROUP BY STU_LNAME ORDER BY COUNT(STU_LNAME) ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "STU_LNAME",
            "y_name": "COUNT(STU_LNAME)",
            "x_data": [
                [
                    "Smithson",
                    "Bowser"
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY STU_LNAME",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet studentů, kteří absolvovali nějaký předmět a dostali jedničku nebo trojku, seskup je podle příjmení do sloupcového grafu, který zobraz na ose y od nejnižšího po nejvyšší.",
            "Kolik studentů, kteří se účastní kurzu, obdrželo A nebo C? Seskupení podle příjmení studentů pomocí sloupcového grafu, zobrazení vzestupně podle počtu studentů."
        ],
        "irrelevant_tables": [
            "CLASS",
            "EMPLOYEE"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "580@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room ORDER BY CLASS_ROOM DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT CLASS_ROOM , count(*) FROM CLASS GROUP BY class_room ORDER BY CLASS_ROOM DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "CLASS_ROOM",
            "y_name": "count(*)",
            "x_data": [
                [
                    "KLR211",
                    "KLR209",
                    "KLR200",
                    "BUS311",
                    "BUS252",
                    "BUS200"
                ]
            ],
            "y_data": [
                [
                    1,
                    3,
                    4,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf celkového počtu z každé třídy. Seřaď jej podle jmen sestupně."
        ],
        "irrelevant_tables": [
            "PROFESSOR",
            "DEPARTMENT"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "586@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code ORDER BY DEPT_CODE DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT DEPT_CODE , sum(crs_credit) FROM course GROUP BY dept_code ORDER BY DEPT_CODE DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "college_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "DEPT_CODE",
            "y_name": "sum(crs_credit)",
            "x_data": [
                [
                    "CIS",
                    "ACCT"
                ]
            ],
            "y_data": [
                [
                    14,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz sloupcový graf, kolik kreditů nabízí katedra. Na ose x to chci zobrazit sestupně.",
            "Ukaž mi sloupcový graf o tom, jaký celkový počet kreditů nabízí jednotlivá oddělení? Chci uvést X v sestupném pořadí.",
            "Vrať histogram o tom, aký celkový počet kreditů nabízí každé oddělení? Chci uvést X v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "DEPARTMENT",
            "STUDENT"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2156@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY COUNT(cmi_details) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT cmi_details , COUNT(cmi_details) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax' GROUP BY cmi_details ORDER BY COUNT(cmi_details) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "local_govt_mdm",
        "vis_obj": {
            "chart": "bar",
            "x_name": "cmi_details",
            "y_name": "COUNT(cmi_details)",
            "x_data": [
                [
                    "Volkman, Mills and Ferry",
                    "Schmitt-Lang",
                    "Schmidt, Kertzmann and Lubowitz",
                    "Reynolds-McClure"
                ]
            ],
            "y_data": [
                [
                    3,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY cmi_details",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaké jsou podrobnosti o mistrech cmi, kteří mají křížový referenční kód \"Daň“? Spočítej je pomocí sloupcového grafu a seřaď podle osy y sestupně."
        ],
        "irrelevant_tables": [
            "Benefits_Overpayments",
            "Electoral_Register"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "686@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T3.name , COUNT(T3.name) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T3.name ORDER BY COUNT(T3.name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T3.name , COUNT(T3.name) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T3.name ORDER BY COUNT(T3.name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "company_office",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Petrobras",
                    "HSBC",
                    "General Electric",
                    "ExxonMobil",
                    "BNP Paribas",
                    "Total",
                    "Royal Dutch Shell",
                    "JPMorgan Chase",
                    "Industrial and Commercial Bank of China",
                    "Citigroup"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf zobrazující počet jednotlivých společností, jejichž kancelář se nachází v budově, a seřaď celkový počet od nejvyššího po nejnižší.",
            "Vypiš počet jednotlivých společností, jejichž sídlo se nachází v budově, do sloupcového grafu a seřaď je podle počtu jmen sestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "687@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T2.name , COUNT(T2.name) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T2.name ORDER BY COUNT(T2.name) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T2.name , COUNT(T2.name) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T2.name ORDER BY COUNT(T2.name) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "company_office",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "COUNT(name)",
            "x_data": [
                [
                    "Punto Chapultepec",
                    "Torre Mitikah",
                    "Corporativo BBVA Bancomer",
                    "Torre Reforma",
                    "Torre New York Life",
                    "Torre KOI",
                    "Residencial Vidalta Torre Altaire 3",
                    "Residencial Vidalta Torre Altaire 2",
                    "Reforma 90",
                    "Reforma 432",
                    "LIU East"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY name",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf zobrazující počet společností v jednotlivých budovách, zobraz jej sestupně podle osy y, prosím."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "172@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date , COUNT(date) FROM battle GROUP BY date ORDER BY COUNT(date) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT date , COUNT(date) FROM battle GROUP BY date ORDER BY COUNT(date) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "battle_death",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date",
            "y_name": "COUNT(date)",
            "x_data": [
                [
                    "1235",
                    "14 April 1205",
                    "31 January 1206",
                    "31 June 1208",
                    "4 September 1207",
                    "February 1206",
                    "June 1205"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY date",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf s počtem dat bitev a seřazením celkového počtu od nejnižšího po nejvyšší.",
            "Sloupcový graf čísla data z každého data. Seřaď jej podle osy Y od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "death",
            "ship"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1210@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT gender , count(*) FROM dorm GROUP BY gender ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT gender , count(*) FROM dorm GROUP BY gender ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "gender",
            "y_name": "count(*)",
            "x_data": [
                [
                    "F",
                    "M",
                    "X"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti počet kolejí pro jednotlivá pohlaví ve sloupcovém grafu, seřaď je vzestupně podle Y, prosím.",
            "Kolik je kolejí pro všechna pohlaví? Ukaž mi sloupcový graf, zobraz osu y vzestupně."
        ],
        "irrelevant_tables": [
            "Has_amenity",
            "Lives_in"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1215@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Fname , COUNT(Fname) FROM student WHERE major != (SELECT major FROM student) GROUP BY Fname ORDER BY COUNT(Fname) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM student WHERE major != (SELECT major FROM student) GROUP BY Fname ORDER BY COUNT(Fname) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Fname",
            "y_name": "COUNT(Fname)",
            "x_data": [
                [
                    "Eric",
                    "Sarah",
                    "William",
                    "Stacy",
                    "Paul",
                    "Michael",
                    "Mark",
                    "Lisa",
                    "Jun",
                    "Ian",
                    "George",
                    "David"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Fname",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet studentů, kteří nejsou v největším oboru, seskup je podle křestního jména do sloupcového grafu a seřaď je podle osy y od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [
            "Lives_in",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1217@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname ORDER BY Fname DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' GROUP BY Fname ORDER BY Fname DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Fname",
            "y_name": "COUNT(Fname)",
            "x_data": [
                [
                    "Tracy",
                    "Stacy",
                    "Shiela",
                    "Sarah",
                    "Michael"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Fname",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti křestní jména studentů, kteří bydlí ve Smith Hall, a spočítej je pomocí sloupcového grafu, který chci zobrazit podle X sestupně.",
            "Jaká jsou křestní jména všech studentů ve Smith Hall? Spočítej je pomocí sloupcového grafu, seřaď je podle osy X sestupně."
        ],
        "irrelevant_tables": [
            "Dorm_amenity",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1220@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT city_code , avg(age) FROM student WHERE sex = 'M' GROUP BY city_code ORDER BY city_code DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city_code",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "YYZ",
                    "WAS",
                    "ROC",
                    "PIT",
                    "PHL",
                    "PEK",
                    "NYC",
                    "NAR",
                    "LOS",
                    "LON",
                    "HOU",
                    "HKG",
                    "DET",
                    "DAL",
                    "CHI",
                    "BOS",
                    "BAL",
                    "ATL"
                ]
            ],
            "y_data": [
                [
                    22.5,
                    18,
                    20,
                    19.33333333333333,
                    19.5,
                    17,
                    20.33333333333333,
                    18,
                    18,
                    27,
                    17,
                    19,
                    17,
                    18,
                    20,
                    18,
                    18,
                    20
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Jaký je průměrný věk studentů v jednotlivých městech? Nakresli sloupcový graf, zobraz jej sestupně podle jmen."
        ],
        "irrelevant_tables": [
            "Has_amenity",
            "Lives_in"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1222@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dorm_name , avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name ORDER BY avg(T1.age) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dorm_name , avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name ORDER BY avg(T1.age) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dorm_name",
            "y_name": "avg(T1.age)",
            "x_data": [
                [
                    "Smith Hall",
                    "Bud Jones Hall",
                    "Fawlty Towers",
                    "Anonymous Donor Hall",
                    "Dorm-plex 2000",
                    "University Hovels",
                    "Grad Student Asylum"
                ]
            ],
            "y_data": [
                [
                    20.166666666666668,
                    20,
                    19.777777777777782,
                    19.666666666666668,
                    19.6,
                    18,
                    18
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti průměrný věk studentů žijících na jednotlivých kolejích a název koleje. Vypiš je do sloupcového grafu, který chci zobrazit na ose y sestupně.",
            "Jaký je průměrný věk pro každou kolej a jaké jsou názvy jednotlivých kolejí? Vykresli je jako sloupcový graf a chci je zobrazit podle osy y sestupně.",
            "Vizualizuj sloupcový graf pro to, jaký je průměrný věk pro každou kolej a jaké jsou názvy jednotlivých kolejí? Mohl bys zobrazit osu Y od nejvyššího po nejnižší pořadí, prosím?"
        ],
        "irrelevant_tables": [
            "Dorm_amenity",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1224@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT dorm_name , count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "dorm_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Smith Hall",
                    "Fawlty Towers",
                    "Dorm-plex 2000",
                    "Anonymous Donor Hall"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet studentů starších 20 let v každé koleji. Vypiš je do sloupcového grafu, zobraz od nejvyššího po nejnižší celkový počet.",
            "Kolik studentů je na každé koleji starších 20 let? Vizualizuj pomocí sloupcového grafu a mohl bys jej zobrazit na ose y sestupně, prosím?",
            "Vrať sloupcový graf o tom, kolik studentů je starších 20 let v každé koleji? Chci jej zobrazit podle osy y od nejvyšší po nejnižší.",
            "Uveď mi histogram o tom, kolik studentů je v každé koleji starších 20 let. Mohl bys ho zobrazit podle osy y sestupně, prosím?"
        ],
        "irrelevant_tables": [
            "Dorm_amenity",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1225@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Fname , COUNT(Fname) FROM student WHERE age < (SELECT avg(age) FROM student) GROUP BY Fname ORDER BY COUNT(Fname) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM student WHERE age < (SELECT avg(age) FROM student) GROUP BY Fname ORDER BY COUNT(Fname) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Fname",
            "y_name": "COUNT(Fname)",
            "x_data": [
                [
                    "Eric",
                    "Mark",
                    "William",
                    "Tracy",
                    "Susan",
                    "Stacy",
                    "Paul",
                    "Michael",
                    "Lisa",
                    "Linda",
                    "Jun",
                    "George",
                    "Derek",
                    "Charles",
                    "Arthur",
                    "Andy"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Fname",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet studentů, jejichž věk je nižší než průměrný věk, a seskup je podle křestních jmen studentů do sloupcového grafu. Mohl bys je zobrazit sestupně podle osy y?"
        ],
        "irrelevant_tables": [
            "Dorm",
            "Lives_in"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1226@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT LName , COUNT(LName) FROM student WHERE age < (SELECT avg(age) FROM student) GROUP BY LName ORDER BY COUNT(LName) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT LName , COUNT(LName) FROM student WHERE age < (SELECT avg(age) FROM student) GROUP BY LName ORDER BY COUNT(LName) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "LName",
            "y_name": "COUNT(LName)",
            "x_data": [
                [
                    "Pang",
                    "Lee",
                    "Woods",
                    "Tai",
                    "Smith",
                    "Simms",
                    "Schwartz",
                    "Schultz",
                    "Prater",
                    "Norris",
                    "Kim",
                    "Han",
                    "Goldman",
                    "Epp",
                    "Brody",
                    "Apap",
                    "Andreou"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY LName",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet studentů, jejichž věk je nižší než průměrný věk, seskup je podle příjmení studentů do sloupcového grafu a seřaď je sestupně podle osy Y."
        ],
        "irrelevant_tables": [
            "Lives_in",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1227@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge') GROUP BY Fname ORDER BY Fname DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Fname , COUNT(Fname) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge') GROUP BY Fname ORDER BY Fname DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Fname",
            "y_name": "COUNT(Fname)",
            "x_data": [
                [
                    "Susan",
                    "Steven",
                    "Paul",
                    "Michael",
                    "Mark",
                    "Lisa",
                    "Linda",
                    "Jun",
                    "Jandy",
                    "Ian",
                    "George",
                    "Eric",
                    "Dinesh",
                    "Derek",
                    "David",
                    "Bruce"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2,
                    1,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Fname",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz počet studentů, kteří bydlí na koleji s TV salonkem, a seskup je podle křestních jmen do sloupcového grafu a zobraz je v desítkách podle jmen."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1235@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex ORDER BY Sex DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , count(*) FROM student WHERE age > (SELECT avg(age) FROM student) GROUP BY Sex ORDER BY Sex DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "count(*)",
            "x_data": [
                [
                    "M",
                    "F"
                ]
            ],
            "y_data": [
                [
                    10,
                    5
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf o tom, kolik studentů je starších než průměr pro každé pohlaví, seřaď je sestupně podle pohlaví."
        ],
        "irrelevant_tables": [
            "Dorm_amenity",
            "Dorm"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1237@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , avg(age) FROM student GROUP BY sex ORDER BY avg(age) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , avg(age) FROM student GROUP BY sex ORDER BY avg(age) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "avg(age)",
            "x_data": [
                [
                    "M",
                    "F"
                ]
            ],
            "y_data": [
                [
                    19.5,
                    19.7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti průměrný věk studentů různého pohlaví ve sloupcovém grafu. Mohl bys je seřadit podle Y od nejnižšího po nejvyšší?",
            "Jaký je průměrný věk studentů jednotlivých pohlaví? Vrať sloupcový graf a zobraz jej od nejnižšího po nejvyšší průměrný věk.",
            "Vykresli průměrný věk podle skupin podle pohlaví jako sloupcový graf. Mohl bys je seřadit podle osy y od nejnižšího po nejvyšší?"
        ],
        "irrelevant_tables": [
            "Dorm",
            "Has_amenity"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1238@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Sex , max(age) FROM student GROUP BY Sex ORDER BY Sex ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Sex , max(age) FROM student GROUP BY Sex ORDER BY Sex ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "dorm_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Sex",
            "y_name": "max(age)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    26,
                    27
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaký je nejstarší věk studentů jednotlivých pohlaví? Vrať sloupcový graf a seřaď jej podle osy x vzestupně, prosím.",
            "Zjisti ve sloupcovém grafu nejstarší věk studentů různého pohlaví a seřaď X vzestupně."
        ],
        "irrelevant_tables": [
            "Has_amenity",
            "Dorm"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2610@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY gender_mf ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY gender_mf ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "products_for_hire",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "gender_mf",
            "x_data": [
                [
                    "Geovany",
                    "Jailyn",
                    "Rosalee",
                    "Ericka",
                    "Elinore",
                    "Maximilian",
                    "Vergie",
                    "Marilou",
                    "German",
                    "Laury",
                    "Tyler"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vezměte křestní jména všech dobrých zákazníků jako osu X a pohlaví všech dobrých zákazníků jako osu Y ve sloupcovém grafu. Y seřaď vzestupně."
        ],
        "irrelevant_tables": [
            "Bookings",
            "Products_for_Hire"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2614@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY first_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY first_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "products_for_hire",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Rosalee",
                    "Maximilian",
                    "Marilou",
                    "Layne",
                    "Jamir",
                    "German",
                    "Elinore"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    3,
                    2,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik rezervací provedl každý zákazník? V sloupcovém grafu uveď křestní jméno jako osu X a počet jako osu Y. Zobraz jej podle osy x sestupně."
        ],
        "irrelevant_tables": [
            "Payments",
            "Discount_Coupons"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2771@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name ORDER BY Name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "sum(T2.Sales)",
            "x_data": [
                [
                    "Christy Walton",
                    "Gina Rinehart",
                    "Iris Fontbona",
                    "Jacqueline Mars",
                    "Liliane Bettencourt",
                    "Susanne Klatten"
                ]
            ],
            "y_data": [
                [
                    651421,
                    292000,
                    335000,
                    275000,
                    1646407,
                    261000
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz jména zpěváků a celkový prodej jejich skladeb. Vizualizuj pomocí sloupcového grafu a seřaď je vzestupně podle jména."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2772@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , COUNT(Name) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Name ORDER BY COUNT(Name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "COUNT(Name)",
            "x_data": [
                [
                    "Gina Rinehart",
                    "Iris Fontbona",
                    "Jacqueline Mars",
                    "Susanne Klatten",
                    "Christy Walton",
                    "Liliane Bettencourt"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Porovnej počet písní jednotlivých zpěváků pomocí sloupcového grafu, Y seřaď vzestupně."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2774@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship ORDER BY Citizenship ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "singer",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Citizenship",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Australia",
                    "Chile",
                    "France",
                    "Germany",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    4
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz různá občanství zpěváků a počet zpěváků každého občanství. Zakresli je jako sloupcový graf. Mohl bys je seřadit podle osy x vzestupně, prosím?",
            "Zobraz různá občanství zpěváků a počet zpěváků jednotlivých občanství ve sloupcovém grafu a seřaď je podle X."
        ],
        "irrelevant_tables": [
            "song"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "435@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Phone , COUNT(Phone) FROM EMPLOYEE GROUP BY Phone ORDER BY Phone DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "chinook_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Phone",
            "y_name": "COUNT(Phone)",
            "x_data": [
                [
                    "1 (780) 836-9987",
                    "+1 (780) 428-9482",
                    "+1 (403) 467-3351",
                    "+1 (403) 456-9986",
                    "+1 (403) 263-4423",
                    "+1 (403) 262-3443",
                    "+1 (403) 246-9887"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Phone",
            "sort": null
        },
        "nl_queries": [
            "Vypiš telefonní čísla všech zaměstnanců a spočítej je pomocí sloupcového grafu",
            "Sloupcový graf o tom, jaký je počet telefonních čísel jednotlivých zaměstnanců?"
        ],
        "irrelevant_tables": [
            "Track",
            "Customer"
        ],
        "query_meta": [
            {
                "channel_specified": []
            },
            {
                "channel_specified": []
            }
        ]
    },
    "279@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_incident_end , COUNT(date_incident_end) FROM Behavior_Incident WHERE incident_type_code = \"NOISE\"  ORDER BY COUNT(date_incident_end) DESC",
                "binning": "BIN date_incident_end BY MONTH"
            },
            "VQL": "Visualize BAR SELECT date_incident_end , COUNT(date_incident_end) FROM Behavior_Incident WHERE incident_type_code = \"NOISE\"  ORDER BY COUNT(date_incident_end) DESC BIN date_incident_end BY MONTH"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "behavior_monitoring",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_incident_end",
            "y_name": "COUNT(date_incident_end)",
            "x_data": [
                [
                    "Mar",
                    "Feb"
                ]
            ],
            "y_data": [
                [
                    5,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN date_incident_end BY MONTH",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o počtu dat ukončení incidentů s kódem typu incidentu \"NOISE\" rozděl podle měsíců. Mohl bys je prosím zobrazit na ose y od nejvyššího po nejnižší?"
        ],
        "irrelevant_tables": [
            "Teachers",
            "Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3267@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72 ORDER BY sum(Population) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "world_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Continent",
            "y_name": "sum(Population)",
            "x_data": [
                [
                    "Oceania",
                    "South America",
                    "Africa",
                    "Asia"
                ]
            ],
            "y_data": [
                [
                    30401150,
                    345780000,
                    784475000,
                    3705025700
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Pro každý kontinent, kde je průměrná délka života kratší než 72 let, zobraz jeho celkovou populaci pomocí sloupcového grafu a zobraz ji vzestupně podle součtu obyvatel.",
            "Jaký je celkový počet obyvatel odpovídající kontinentům, které mají průměrnou délku života nižší než 72 let? Vizualizuj je ve sloupcovém grafu a zobraz je vzestupně podle osy Y, prosím."
        ],
        "irrelevant_tables": [
            "countrylanguage",
            "sqlite_sequence"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3269@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Continent , avg(LifeExpectancy) FROM country GROUP BY Continent ORDER BY avg(LifeExpectancy) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "world_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Continent",
            "y_name": "avg(LifeExpectancy)",
            "x_data": [
                [
                    "Africa",
                    "Asia",
                    "Oceania",
                    "South America",
                    "North America",
                    "Europe"
                ]
            ],
            "y_data": [
                [
                    52.57192982456139,
                    67.44117647058825,
                    69.715,
                    70.94615384615386,
                    72.99189189189188,
                    75.14772727272728
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf kontinentu versus průměrné délky života. Mohl bys jej znázornit od nejnižšího po nejvyšší celkové číslo?"
        ],
        "irrelevant_tables": [
            "sqlite_sequence",
            "countrylanguage"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3071@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Affiliation , sum(enrollment) FROM university GROUP BY affiliation ORDER BY sum(enrollment) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Affiliation",
            "y_name": "sum(enrollment)",
            "x_data": [
                [
                    "Private/Methodist",
                    "Public"
                ]
            ],
            "y_data": [
                [
                    2100,
                    119027
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf pro celkový počet zapsaných studentů na univerzitách jednotlivých typů afiliací, osu y seřaď vzestupně.",
            "Zjisti celkový počet studentů zapsaných do různých typů škol, které jsou součástí školy. Zobraz je jako sloupcový graf, seřaď je podle součtu počtu studentů od nejnižšího po nejvyšší.",
            "Jaké jsou celkové počty studentů na vysokých školách jednotlivých typů afiliací? Zakresli je do sloupcového grafu a seřaď je podle celkového počtu.",
            "Nakresli sloupcový graf příslušnosti versus součet zápisů. Osu y chci seřadit od nejnižšího po nejvyšší řád, prosím.",
            "Ukaž mi sloupcový graf, jaký je celkový počet studentů na vysokých školách jednotlivých typů afiliací, zobrazený na ose y od nejnižšího po nejvyšší, prosím."
        ],
        "irrelevant_tables": [
            "basketball_match"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3123@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT ACC_Road , COUNT(ACC_Road) FROM basketball_match GROUP BY ACC_Road ORDER BY ACC_Road DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "ACC_Road",
            "y_name": "COUNT(ACC_Road)",
            "x_data": [
                [
                    "8-0",
                    "6-2",
                    "3-5"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY ACC_Road",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Nakresli sloupcový graf o rozložení ACC_Road a množství ACC_Road. Seskup je podle atributu ACC_Road a seřaď podle ACC_Road sestupně.",
            "Vizualizuj sloupcový graf o rozložení ACC_Road a množství ACC_Road. Seskup je podle atributu ACC_Road a mohl bys to zobrazit podle X sestupně?",
            "Ukaž mi rozložení ACC_Road a množství ACC_Road. Seskup je podle atributu ACC_Road do sloupcového grafu a zobraz osu x v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3124@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT All_Home , COUNT(All_Home) FROM basketball_match GROUP BY All_Home ORDER BY All_Home ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "All_Home",
            "y_name": "COUNT(All_Home)",
            "x_data": [
                [
                    "14-2",
                    "14-3",
                    "15-1"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY All_Home",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazuje rozložení All_Home a množství All_Home. Seskup je podle atributu All_Home a uspořádej osu x vzestupně.",
            "Vrať sloupcový graf o rozložení All_Home a množství All_Home. Seskup je podle atributu All_Home a uspořádej osu x v pořadí vzestupně.",
            "Ukaž mi rozložení All_Home a množství All_Home. Seskup je podle atributu All_Home do sloupcového grafu a zobraz vzestupně podle osy x, prosím."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3134@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Team_Name , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Team_Name",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    "Virginia Tech",
                    "Clemson",
                    "Duke",
                    "North Carolina"
                ]
            ],
            "y_data": [
                [
                    0.6,
                    0.706,
                    0.8240000000000001,
                    0.946
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf pro all_games_percent každého názvu týmu, mohl bys je uvést vzestupně podle osy y, prosím?",
            "Najdi Team_Name a All_Games_Percent. Vizualizuj je pomocí sloupcového grafu. Mohl bys je prosím vypsat vzestupně podle osy y?",
            "Nakresli sloupcový graf o rozložení Team_Name a All_Games_Percent, seřaď je vzestupně podle All_Games_Percent.",
            "Vrať sloupcový graf o rozložení Team_Name a All_Games_Percent, a uspořádej osu y od nejnižšího po nejvyšší řád.",
            "Vizualizuj sloupcový graf o rozložení Team_Name a All_Games_Percent. Chci ho zobrazit vzestupně podle osy Y."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3135@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT ACC_Regular_Season , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "ACC_Regular_Season",
            "y_name": "ACC_Percent",
            "x_data": [
                [
                    "9-7",
                    "10-6",
                    "13-3",
                    "14-2"
                ]
            ],
            "y_data": [
                [
                    0.563,
                    0.625,
                    0.813,
                    0.875
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Porovnej ACC_Percent s ACC_Regular_Season pomocí sloupcového grafu a uspořádej osu Y vzestupně.",
            "Sloupcový graf: osa x - acc regular season, osa y - acc_percent. Zobraz ACC_Percent vzestupně.",
            "Vizualizuj sloupcový graf o rozložení ACC_Regular_Season a ACC_Percent a zobraz ACC_Percent vzestupně."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3137@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT ACC_Regular_Season , All_Games_Percent FROM basketball_match ORDER BY All_Games_Percent DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "ACC_Regular_Season",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    "14-2",
                    "13-3",
                    "10-6",
                    "9-7"
                ]
            ],
            "y_data": [
                [
                    0.946,
                    0.8240000000000001,
                    0.706,
                    0.6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Udělej mi srovnání All_Games_Percent v průběhu ACC_Regular_Season pomocí sloupcového grafu a chci seřadit All_Games_Percent sestupně.",
            "Vytvoř sloupcový graf zobrazující all_games_percent v celé základní části sezóny, seřaď jej sestupně podle Y.",
            "Sloupcový graf zobrazuje rozložení ACC_Regular_Season a All_Games_Percent a pořadí podle osy Y sestupně.",
            "Najdi ACC_Regular_Season a All_Games_Percent, a vizualizuj je pomocí sloupcového grafu, seřazeného sestupně podle osy Y.",
            "Ukaž mi rozložení ACC_Regular_Season a All_Games_Percent ve sloupcovém grafu a uveď osu Y od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "3138@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT All_Games , ACC_Percent FROM basketball_match ORDER BY All_Games ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "All_Games",
            "y_name": "ACC_Percent",
            "x_data": [
                [
                    "21-14",
                    "24-10",
                    "28-6",
                    "35-2"
                ]
            ],
            "y_data": [
                [
                    0.563,
                    0.625,
                    0.813,
                    0.875
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazuje rozložení All_Games a ACC_Percent, mohl bys ho zobrazit pomocí osy x vzestupně?",
            "Sloupcový graf: osa x - všechny hry, osa y - acc_percent. Mohl bys to zobrazit podle osy X vzestupně?",
            "Vizualizace sloupcového grafu o rozložení All_Games a ACC_Percent, který chci zobrazit podle osy X vzestupně.",
            "Ukaž mi rozložení All_Games a ACC_Percent ve sloupcovém grafu a mohl bys ho zobrazit pomocí osy x vzestupně?"
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3140@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT All_Games , All_Games_Percent FROM basketball_match ORDER BY All_Games ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "All_Games",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    "21-14",
                    "24-10",
                    "28-6",
                    "35-2"
                ]
            ],
            "y_data": [
                [
                    0.6,
                    0.706,
                    0.8240000000000001,
                    0.946
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazuje rozložení All_Games a All_Games_Percent, a to v pořadí vzestupně podle osy X.",
            "Vizualizuj sloupcový graf o rozložení All_Games a All_Games_Percent, zobrazený na ose x vzestupně.",
            "Vrať sloupcový graf o rozložení All_Games a All_Games_Percent, a seřaď jej vzestupně podle osy X.",
            "Porovnej mi All_Games_Percent s All_Games pomocí sloupcového grafu, seřazeného vzestupně podle osy X."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3141@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT All_Road , ACC_Percent FROM basketball_match ORDER BY ACC_Percent ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "All_Road",
            "y_name": "ACC_Percent",
            "x_data": [
                [
                    "4-8",
                    "6-5",
                    "8-2",
                    "13-0"
                ]
            ],
            "y_data": [
                [
                    0.563,
                    0.625,
                    0.813,
                    0.875
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf o rozložení All_Road a ACC_Percent, a zobraz osu y vzestupně, prosím.",
            "Sloupcový graf zobrazuje rozložení All_Road a ACC_Percent, zobrazené vzestupně podle osy y.",
            "Srovnej mi ACC_Percent s All_Road pomocí sloupcového grafu, osu y zobraz vzestupně, prosím."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3144@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT All_Neutral , ACC_Percent FROM basketball_match ORDER BY All_Neutral DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "All_Neutral",
            "y_name": "ACC_Percent",
            "x_data": [
                [
                    "9-1",
                    "5-3",
                    "4-3",
                    "3-3"
                ]
            ],
            "y_data": [
                [
                    0.875,
                    0.813,
                    0.625,
                    0.563
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať sloupcový graf rozložení All_Neutral a ACC_Percent, seřazený sestupně podle osy X."
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3146@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT All_Neutral , All_Games_Percent FROM basketball_match ORDER BY All_Neutral DESC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "university_basketball",
        "vis_obj": {
            "chart": "bar",
            "x_name": "All_Neutral",
            "y_name": "All_Games_Percent",
            "x_data": [
                [
                    "9-1",
                    "5-3",
                    "4-3",
                    "3-3"
                ]
            ],
            "y_data": [
                [
                    0.946,
                    0.8240000000000001,
                    0.706,
                    0.6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vytvoř sloupcový graf zobrazující all_games_percent napříč všemi neutrálními a mohl bys je seřadit sestupně podle osy X?",
            "Udělej mi srovnání All_Games_Percent nad All_Neutral sloupcovým grafem, chci ho seřadit podle osy x sestupně.",
            "Vrať sloupcový graf o rozložení All_Neutral a All_Games_Percent. Mohl bys jej seřadit podle osy x sestupně?"
        ],
        "irrelevant_tables": [
            "university"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2349@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT brand , COUNT(brand) FROM camera_lens GROUP BY brand ORDER BY COUNT(brand) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "mountain_photos",
        "vis_obj": {
            "chart": "bar",
            "x_name": "brand",
            "y_name": "COUNT(brand)",
            "x_data": [
                [
                    "Schneider Kreuznach",
                    "Olympus",
                    "Panasonic",
                    "Sigma"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    3,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY brand",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Seskup a spočítej značky pro jednotlivé objektivy fotoaparátů pomocí sloupcového grafu a seřaď je podle celkového počtu."
        ],
        "irrelevant_tables": [
            "photos",
            "mountain"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2596@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT attribute_name , COUNT(attribute_name) FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0 GROUP BY attribute_name ORDER BY attribute_name ASC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "attribute_name",
            "y_name": "COUNT(attribute_name)",
            "x_data": [
                [
                    "Black",
                    "Sweet",
                    "Yellow"
                ]
            ],
            "y_data": [
                [
                    3,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY attribute_name",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypočítej, kolik atributů má v každém názvu definice atributu hodnotu 0. Výsledek zobraz pomocí sloupcového grafu, seřazeného vzestupně podle osy x."
        ],
        "irrelevant_tables": [
            "Catalog_Structure",
            "Catalogs"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2600@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) ASC",
                "binning": "BIN date_of_publication BY YEAR"
            },
            "VQL": "Visualize BAR SELECT date_of_publication , COUNT(date_of_publication) FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5 GROUP BY catalog_name ORDER BY COUNT(date_of_publication) ASC BIN date_of_publication BY YEAR"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_publication",
            "y_name": "COUNT(date_of_publication)",
            "x_data": [
                [
                    "2012",
                    "2011"
                ]
            ],
            "y_data": [
                [
                    1,
                    0
                ],
                [
                    0,
                    1
                ]
            ],
            "classify": [
                "Coffee Bean",
                "Jam"
            ],
            "describe": "GROUP BY catalog_name, BIN date_of_publication BY YEAR",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vyhledej názvy a data vydání všech katalogů, které mají číslo úrovně katalogu vyšší než 5. Rozděl data publikací do intervalu rok, spočítej katalog a seskup je podle názvu katalogu. Seřaď počet dat publikací od nejnižšího po nejvyšší a zobraz je ve sloupcovém grafu."
        ],
        "irrelevant_tables": [
            "Catalog_Contents",
            "Attribute_Definitions"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "sort_by": "field",
                "stacked_bar": false
            }
        ]
    },
    "2602@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) DESC",
                "binning": "BIN date_of_latest_revision BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT date_of_latest_revision , COUNT(date_of_latest_revision) FROM Catalogs  ORDER BY COUNT(date_of_latest_revision) DESC BIN date_of_latest_revision BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "date_of_latest_revision",
            "y_name": "COUNT(date_of_latest_revision)",
            "x_data": [
                [
                    "Thur",
                    "Tue",
                    "Mon",
                    "Wed",
                    "Sun",
                    "Sat",
                    "Fri"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN date_of_latest_revision BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Najdi data, kdy bylo provedeno více než jedna revize, a rozděl datum poslední revize do intervalu dnů v týdnu a spočítej je jako sloupcový graf. Chci je vypsat sestupně podle osy Y."
        ],
        "irrelevant_tables": [
            "Attribute_Definitions",
            "Catalog_Structure"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2607@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT catalog_entry_name , capacity FROM Catalog_Contents WHERE price_in_dollars > 700 ORDER BY catalog_entry_name DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "product_catalog",
        "vis_obj": {
            "chart": "bar",
            "x_name": "catalog_entry_name",
            "y_name": "capacity",
            "x_data": [
                [
                    "Vimto",
                    "Sprite Lemo",
                    "Dr Pepper",
                    "Diet Pepsi",
                    "Diet Mountain Dew"
                ]
            ],
            "y_data": [
                [
                    6,
                    8,
                    1,
                    9,
                    8
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti název a kapacitu výrobků s cenou vyšší než 700 (v USD). Zobraz sloupcový graf a mohl bys uvést osu x v sestupném pořadí?"
        ],
        "irrelevant_tables": [
            "Catalog_Structure",
            "Attribute_Definitions"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2902@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT section_description , COUNT(section_description) FROM Sections GROUP BY section_description ORDER BY section_description DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "student_transcripts_tracking",
        "vis_obj": {
            "chart": "bar",
            "x_name": "section_description",
            "y_name": "COUNT(section_description)",
            "x_data": [
                [
                    "voluptatem",
                    "voluptas",
                    "reprehenderit",
                    "quis",
                    "qui",
                    "provident",
                    "non",
                    "nesciunt",
                    "facilis",
                    "ex",
                    "et",
                    "doloremque",
                    "ad"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY section_description",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Spočítej section_description a seskup podle section_description pomocí sloupcového grafu. Chci seřadit názvy sestupně."
        ],
        "irrelevant_tables": [
            "Addresses",
            "Degree_Programs"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1399@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Studio , COUNT(*) FROM film GROUP BY Studio ORDER BY Studio ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "film_rank",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Studio",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "20th Century Fox",
                    "Columbia",
                    "Columbia / Rastar",
                    "MGM",
                    "Orion / Carolco",
                    "Paramount",
                    "Paramount / Lorimar",
                    "United Artists",
                    "Universal",
                    "Universal / RKO"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vypiš studia jednotlivých filmů a počet filmů vyrobených daným studiem pomocí sloupcového grafu, chci ho seřadit podle osy x vzestupně."
        ],
        "irrelevant_tables": [
            "film_market_estimation",
            "market"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2933@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY Name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Vijay Singh",
                    "Paul Azinger",
                    "Nick Price",
                    "John Daly",
                    "Jeff Sluman"
                ]
            ],
            "y_data": [
                [
                    2,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz jména všech umělců a počet výstav pro každého umělce ve sloupcovém grafu a na ose x je seřaď sestupně."
        ],
        "irrelevant_tables": [
            "exhibition_record"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2935@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT T1.Date , T1.Attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004 ORDER BY Date ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date",
            "y_name": "Attendance",
            "x_data": [
                [
                    "December 2",
                    "December 5",
                    "December 7"
                ]
            ],
            "y_data": [
                [
                    965,
                    1098,
                    2983
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Najdi data a návštěvnost výstav, které se konaly v roce 2004, zobraz mi návštěvnost podle data pomocí sloupcového grafu a seřaď ji vzestupně podle osy X."
        ],
        "irrelevant_tables": [
            "artist"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2943@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , AVG(Age) FROM artist GROUP BY Country ORDER BY AVG(Age) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "AVG(Age)",
            "x_data": [
                [
                    "Fiji",
                    "Zimbabwe",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    45,
                    48,
                    49.6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Country",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa y - země, osa y - průměrný věk. Chci je seřadit podle osy X vzestupně prosím."
        ],
        "irrelevant_tables": [
            "exhibition_record",
            "exhibition"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2944@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Name , Age FROM artist ORDER BY Age ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Name , Age FROM artist ORDER BY Age ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Name",
            "y_name": "Age",
            "x_data": [
                [
                    "Vijay Singh",
                    "John Daly",
                    "Paul Azinger",
                    "Mark Brooks",
                    "Nick Price",
                    "Larry Nelson",
                    "Jeff Sluman"
                ]
            ],
            "y_data": [
                [
                    45,
                    46,
                    47,
                    48,
                    48,
                    50,
                    57
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - název, osa y - věk. Seřaď Y vzestupně."
        ],
        "irrelevant_tables": [
            "exhibition",
            "exhibition_record"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2950@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year , COUNT(Year) FROM exhibition WHERE ticket_price < 15 GROUP BY Year ORDER BY COUNT(Year) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "theme_gallery",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "COUNT(Year)",
            "x_data": [
                [
                    "2007",
                    "2008",
                    "2006",
                    "2009"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "BIN Year BY TIME",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Najdi tyto roky pro všechny výstavy s cenami vstupenek nižšími než 15. Vrať sloupcový graf, který se seskupí podle roku a spočítá celkový počet let, a chci ho zobrazit vzestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "exhibition_record",
            "artist"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1989@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Date_Opened , COUNT(Date_Opened) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"  ORDER BY COUNT(Date_Opened) DESC",
                "binning": "BIN Date_Opened BY WEEKDAY"
            },
            "VQL": "Visualize BAR SELECT Date_Opened , COUNT(Date_Opened) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"  ORDER BY COUNT(Date_Opened) DESC BIN Date_Opened BY WEEKDAY"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "insurance_fnol",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Date_Opened",
            "y_name": "COUNT(Date_Opened)",
            "x_data": [
                [
                    "Mon",
                    "Fri",
                    "Wed",
                    "Tue",
                    "Thur",
                    "Sun",
                    "Sat"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0
                ]
            ],
            "classify": [],
            "describe": "BIN Date_Opened BY WEEKDAY",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Získej data otevření všech pojistek přidružených k zákazníkovi, jehož jméno obsahuje \"Diana“. Rozděl data otevření do intervalu dnů v týdnu a spočítej je pro sloupcový graf. Celkový počet seřaď od nejvyššího po nejnižší."
        ],
        "irrelevant_tables": [
            "Services",
            "Settlements"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1967@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY bedType DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , count(*) FROM Rooms GROUP BY bedType ORDER BY bedType DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Queen",
                    "King",
                    "Double"
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf o počtu pokojů pro jednotlivé typy lůžek. Mohl bys ho seřadit sestupně podle osy x?",
            "Zjisti počet pokojů pro každý typ lůžka. Vizualizuj ho pomocí sloupcového grafu a mohl bys to vypsat podle typu lůžka sestupně?"
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1970@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , min(basePrice) FROM Rooms GROUP BY decor ORDER BY decor ASC"
        },
        "chart": "Bar",
        "hardness": "Easy",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "min(basePrice)",
            "x_data": [
                [
                    "modern",
                    "rustic",
                    "traditional"
                ]
            ],
            "y_data": [
                [
                    75,
                    150,
                    150
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaká je minimální cena pokojů s různým dekorem? Ukaž mi sloupcový graf! Seřaď jej podle X vzestupně.",
            "Nakresli sloupcový graf: dekor versus minimální základní cena. Mohl bys to zobrazit vzestupně podle jmen?"
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "1977@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT bedType , avg(basePrice) FROM Rooms GROUP BY bedType ORDER BY bedType ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "bedType",
            "y_name": "avg(basePrice)",
            "x_data": [
                [
                    "Double",
                    "King",
                    "Queen"
                ]
            ],
            "y_data": [
                [
                    100,
                    181.25,
                    150
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Jaká je průměrná základní cena pokojů pro každý typ lůžka? Načrtni je jako sloupcový graf a zobraz vzestupně podle typu lůžka.",
            "Jaká je průměrná základní cena různých typů postelí? Seřaď typy lůžek a průměrnou základní cenu. Načrtni je jako sloupcový graf, zobraz vzestupně podle typu lůžka prosím.",
            "Nakresli sloupcový graf pro průměrnou základní cenu pokojů pro každý typ lůžka, osu x zobraz vzestupně."
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1979@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT decor , count(*) FROM Rooms WHERE basePrice > 120 GROUP BY decor ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "decor",
            "y_name": "count(*)",
            "x_data": [
                [
                    "traditional",
                    "rustic",
                    "modern"
                ]
            ],
            "y_data": [
                [
                    4,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zjisti počet pokojů s cenou vyšší než 120 pro různé dekory. Zobraz sloupcový graf a seřaď jej sestupně podle Y.",
            "Vizualizuj sloupcový graf o tom, kolik pokojů stojí více než 120, pro každý různý dekor. Seřaď to podle Y sestupně.",
            "Kolik pokojů stojí více než 120, pro každý různý dekor? Načrtni je jako sloupcový graf, a chci ho seřadit podle osy Y od nejvyšší po nejnižší.",
            "Uveď mi histogram o tom, kolik pokojů stojí více než 120, pro každý různý dekor? Mohl bys ho seřadit od nejvyššího k nejnižšímu podle osy Y?"
        ],
        "irrelevant_tables": [
            "Reservations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "1981@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , COUNT(roomName) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%' GROUP BY roomName ORDER BY COUNT(roomName) DESC"
        },
        "chart": "Bar",
        "hardness": "Extra Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "COUNT(roomName)",
            "x_data": [
                [
                    "Harbinger but bequest",
                    "Frugal not apropos",
                    "Thrift and accolade",
                    "Convoke and sanguine"
                ]
            ],
            "y_data": [
                [
                    3,
                    2,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY roomName",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro to, jaký je počet názvů pokojů rezervovaných zákazníky, jejichž křestní jméno má v části \"ROY“? Seřaď podle osy Y sestupně.",
            "Sloupcový graf pro zjištění počtu jmen pokojů rezervovaných některými zákazníky, jejichž křestní jméno obsahuje ROY, a seřazení od nejvyššího po nejnižší podle osy y.",
            "Jak se jmenují pokoje rezervované zákazníky, jejichž křestní jméno má část \"ROY“? Spočítej je pomocí sloupcového grafu, chci zobrazit celkový počet od nejvyššího po nejnižší pořadí.",
            "Zjisti názvy pokojů rezervovaných některými zákazníky, jejichž křestní jméno obsahuje ROY, a spočítej je pomocí sloupcového grafu, seřazeného sestupně podle osy Y."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1984@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT roomName , count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "inn_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "roomName",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Convoke and sanguine",
                    "Frugal not apropos",
                    "Immutable before decorum",
                    "Recluse and defiance",
                    "Harbinger but bequest",
                    "Thrift and accolade",
                    "Interim but salutary",
                    "Mendicant with cryptic",
                    "Riddle to exculpate",
                    "Abscond or bolster"
                ]
            ],
            "y_data": [
                [
                    69,
                    66,
                    63,
                    62,
                    60,
                    59,
                    59,
                    56,
                    55,
                    51
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vrať názvy pokojů a počet rezervací provedených pro každý z pokojů a nakresli sloupcový graf. Seřaď ho podle osy y sestupně.",
            "Pro každou místnost najdi její název a počet rezervací, které na ni byly provedeny. Údaje můžeš použít k nakreslení sloupcového grafu. Mohl bys zobrazit celkový počet sestupně, prosím?"
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "3033@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT log_entry_description , COUNT(log_entry_description) FROM problem_log GROUP BY log_entry_description ORDER BY COUNT(log_entry_description) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "tracking_software_problems",
        "vis_obj": {
            "chart": "bar",
            "x_name": "log_entry_description",
            "y_name": "COUNT(log_entry_description)",
            "x_data": [
                [
                    "b",
                    "d",
                    "h",
                    "j",
                    "p",
                    "q",
                    "s",
                    "t",
                    "v",
                    "w",
                    "c",
                    "a"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY log_entry_description",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf: osa x - popis záznamu v protokolu, osa y - počet záznamů v protokolu. Chci osu y uspořádat vzestupně.",
            "Nakresli sloupcový graf pro počet popisů jednotlivých problémů a uveď celkový počet vzestupně.",
            "Vypiš všechny popisy záznamů v protokolu a spočítej je pomocí sloupcového grafu, seřaď je vzestupně podle Y."
        ],
        "irrelevant_tables": [
            "Product",
            "Problem_Category_Codes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2677@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Gender , COUNT(Gender) FROM player GROUP BY Gender ORDER BY Gender ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "riding_club",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Gender",
            "y_name": "COUNT(Gender)",
            "x_data": [
                [
                    "F",
                    "M"
                ]
            ],
            "y_data": [
                [
                    5,
                    9
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Gender",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Porovnej rozložení pohlaví hráčů pomocí sloupcového grafu a mohl bys ho zobrazit vzestupně podle osy x?"
        ],
        "irrelevant_tables": [
            "match_result",
            "coach"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2678@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Occupation , COUNT(Occupation) FROM player GROUP BY Occupation ORDER BY COUNT(Occupation) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "riding_club",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Occupation",
            "y_name": "COUNT(Occupation)",
            "x_data": [
                [
                    "Student",
                    "Retired",
                    "Parliamentarian",
                    "Small Businessman",
                    "Self Employed / Consultant",
                    "Researcher",
                    "Product Consultant - MLCC",
                    "Ministerial Assistant",
                    "Locomotive Engineer",
                    "Distribution Centre Associate",
                    "Design Coordinator"
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Occupation",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Porovnej počet hráčů různých povolání pomocí sloupcového grafu, osu y seřaď sestupně.",
            "Vizualizuj sloupcový graf, který zobrazí počet hráčů v jednotlivých povoláních, a chci zobrazit osu Y od nejvyššího po nejnižší, prosím.",
            "Sloupcový graf: osa x - povolání, osa y - kolik je výskytů povolání. Zobraz sestupně podle osy Y."
        ],
        "irrelevant_tables": [
            "club",
            "player_coach"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2681@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Occupation , COUNT(*) FROM player GROUP BY Occupation ORDER BY Occupation ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "riding_club",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Occupation",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Design Coordinator",
                    "Distribution Centre Associate",
                    "Locomotive Engineer",
                    "Ministerial Assistant",
                    "Parliamentarian",
                    "Product Consultant - MLCC",
                    "Researcher",
                    "Retired",
                    "Self Employed / Consultant",
                    "Small Businessman",
                    "Student"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    1,
                    1,
                    2,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz různá povolání spolu s počtem hráčů v jednotlivých povoláních pomocí sloupcového grafu a seřaď jej podle osy x vzestupně."
        ],
        "irrelevant_tables": [
            "player_coach",
            "match_result"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2755@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Type ,  Nationality ORDER BY Nationality DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "ship_mission",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nationality",
            "y_name": "COUNT(Nationality)",
            "x_data": [
                [
                    "United States",
                    "United Kingdom"
                ]
            ],
            "y_data": [
                [
                    1,
                    2
                ],
                [
                    2,
                    3
                ]
            ],
            "classify": [
                "Battle ship",
                "Cargo ship"
            ],
            "describe": "GROUP BY Type, GROUP BY Nationality",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Ukaž mi sloupcový graf, osa x je národnost lodi a osa y je celkový počet různých národností. Rozděl to podle typu lodi, a zobraz osu X v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "mission"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "2756@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , COUNT(Type) FROM ship GROUP BY Nationality ,  Type ORDER BY Type DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "ship_mission",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "COUNT(Type)",
            "x_data": [
                [
                    "Cargo ship",
                    "Battle ship"
                ]
            ],
            "y_data": [
                [
                    3,
                    2
                ],
                [
                    2,
                    1
                ]
            ],
            "classify": [
                "United Kingdom",
                "United States"
            ],
            "describe": "GROUP BY Nationality, GROUP BY Type",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf počtu typů v závislosti na státní příslušnosti podle typu a seřazení osy x sestupně.",
            "Nakresli sloupcový graf zobrazující celkový počet všech typů lodí v kategoriích podle státní příslušnosti a osu x seřaď sestupně.",
            "Udělej mi sloupcový graf pro zobrazení celkového počtu jednotlivých typů lodí a rozděl ho do kategorií podle státní příslušnosti lodí a chci seřadit jména v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "mission"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis",
                "stacked_bar": true
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": false
            },
            {
                "channel_specified": [
                    "classify"
                ],
                "sort_by": "field",
                "stacked_bar": true
            }
        ]
    },
    "2760@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Nationality , COUNT(Nationality) FROM ship GROUP BY Nationality ORDER BY COUNT(Nationality) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_mission",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Nationality",
            "y_name": "COUNT(Nationality)",
            "x_data": [
                [
                    "United Kingdom",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Nationality",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf pro zobrazení počtu národností z různých národností. Seřaď ho sestupně podle celkového počtu.",
            "Jaký je celkový počet různých národností na všech lodích? Udělej mi sloupcový graf a seřaď ho podle osy Y od nejvyššího po nejnižší.",
            "Ukaž mi srovnání celkového počtu všech národností lodí pomocí sloupcového grafu. Seřaď data od nejvyššího po nejnižší podle Y.",
            "Vrať sloupcový graf zobrazující celkový počet národností lodí a seřaď jej sestupně podle celkového počtu."
        ],
        "irrelevant_tables": [
            "mission"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "2762@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , COUNT(*) FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_mission",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "COUNT(*)",
            "x_data": [
                [
                    "Cargo ship",
                    "Battle ship"
                ]
            ],
            "y_data": [
                [
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Zobraz různých typů lodí a počtu lodí každého typu ve sloupcovém grafu. Zobraz osu y v sestupném pořadí.",
            "Pro každý typ rozhodni, kolik lodí existuje. Zobraz je jako sloupcový graf, seřaď je od nejvyššího po nejnižší celkový počet, prosím.",
            "Sloupcový graf: osa x - typ, osa y - celkový počet. Seřaď ho podle Y sestupně prosím.",
            "Zobraz různé typy lodí a počet lodí každého typu. Zobraz sloupcový graf, seřaď jej podle Y sestupně prosím."
        ],
        "irrelevant_tables": [
            "mission"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2763@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Fate , COUNT(Fate) FROM mission GROUP BY Fate ORDER BY COUNT(Fate) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_mission",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Fate",
            "y_name": "COUNT(Fate)",
            "x_data": [
                [
                    "Decommissioned 1959",
                    "Decommissioned 1960",
                    "Lost (burned and sunk) 1933",
                    "Lost (burned) 1931",
                    "Retired 1939",
                    "Decommissioned 1950"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY Fate",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Porovnej celkový počet jednotlivých osudů pomocí sloupcového grafu a zobraz osu Y od nejnižšího po nejvyšší pořadí.",
            "Jaký je celkový počet jednotlivých osudů? Uveď mi výsledek ve sloupcovém grafu a mohl bys seřadit osu Y od nejnižšího po nejvyšší řád?"
        ],
        "irrelevant_tables": [
            "ship"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2765@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Type , avg(Tonnage) FROM ship GROUP BY TYPE ORDER BY avg(Tonnage) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "ship_mission",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Type",
            "y_name": "avg(Tonnage)",
            "x_data": [
                [
                    "Cargo ship",
                    "Battle ship"
                ]
            ],
            "y_data": [
                [
                    3932.2,
                    4845
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Uveď mi sloupcový graf pro průměrnou tonáž každého typu, zobrazenou vzestupně na Y.",
            "Zobraz různé typy lodí a průměrnou tonáž lodí každého typu ve sloupcovém grafu. Mohl bys uvést osu y vzestupně?",
            "Zobraz různé typy lodí a průměrnou tonáž lodí každého typu. Zobraz sloupcový graf, seřaď Y vzestupně."
        ],
        "irrelevant_tables": [
            "mission"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "y"
                ],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "2879@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM people GROUP BY last_name ORDER BY COUNT(last_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "student_assessment",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "Bartoletti",
                    "Bednar",
                    "Feest",
                    "Grant",
                    "Senger",
                    "Wintheiser",
                    "Hartmann"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY last_name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Udělej mi sloupcový graf o tom, kolik je celkový počet příjmení všech kandidátů. Chci je seřadit podle toho, kolik je příjmení.",
            "Sloupcový graf pro zobrazení počtu příjmení z různých příjmení. Seřaď jej podle Y od nejnižšího po nejvyšší, prosím."
        ],
        "irrelevant_tables": [
            "People_Addresses",
            "Addresses"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "2886@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT course_name , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id ORDER BY course_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "student_assessment",
        "vis_obj": {
            "chart": "bar",
            "x_name": "course_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "statistics",
                    "data structure",
                    "French",
                    "English"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik studentů je v jednotlivých kurzech zapsáno? Zobraz název kurzu a počet jeho registrovaných studentů ve sloupcovém grafu. Zobraz X v sestupném pořadí."
        ],
        "irrelevant_tables": [
            "Candidate_Assessments",
            "Candidates"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "116@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY staff_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT staff_name , count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name ORDER BY staff_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "staff_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Rodger",
                    "Oren",
                    "Kadin",
                    "Edmond",
                    "Cyrus",
                    "Christophe",
                    "Bernice",
                    "Berneice"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    3,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik unikátních inženýrů kontaktovali jednotliví zaměstnanci? Uveď jméno kontaktního pracovníka a počet kontaktovaných inženýrů ve sloupcovém grafu a seřaď osu y sestupně, prosím.",
            "Vrať sloupcový graf o tom, kolik různých inženýrů kontaktovali jednotliví zaměstnanci? Uveď jméno kontaktního pracovníka i počet kontaktovaných inženýrů a zobraz je sestupně podle X."
        ],
        "irrelevant_tables": [
            "Asset_Parts",
            "Maintenance_Contracts"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "117@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT asset_make , COUNT(asset_make) FROM Assets GROUP BY asset_make ORDER BY COUNT(asset_make) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT asset_make , COUNT(asset_make) FROM Assets GROUP BY asset_make ORDER BY COUNT(asset_make) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "asset_make",
            "y_name": "COUNT(asset_make)",
            "x_data": [
                [
                    "GB",
                    "IE",
                    "IT",
                    "PT",
                    "CN",
                    "DE",
                    "FR",
                    "IN",
                    "RU"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY asset_make",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zobraz počet aktiv a seskup je podle značek aktiv do sloupcového grafu. Seřaď data vzestupně podle Y.",
            "Nakresli sloupcový graf značky aktiv versus počet značek aktiv. Chci uspořádat osu y od nejnižšího po nejvyšší pořadí."
        ],
        "irrelevant_tables": [
            "Maintenance_Contracts",
            "Fault_Log"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "123@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT fault_status , COUNT(fault_status) FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY fault_status ORDER BY COUNT(fault_status) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT fault_status , COUNT(fault_status) FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY fault_status ORDER BY COUNT(fault_status) DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "fault_status",
            "y_name": "COUNT(fault_status)",
            "x_data": [
                [
                    "Reported",
                    "Fixed",
                    "Waiting",
                    "Return"
                ]
            ],
            "y_data": [
                [
                    5,
                    5,
                    3,
                    2
                ]
            ],
            "classify": [],
            "describe": "GROUP BY fault_status",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf počtu poruch pro různé stavy poruch všech poruch zaznamenaných v protokolech, seřazený podle osy Y sestupně."
        ],
        "irrelevant_tables": [
            "Part_Faults",
            "Engineer_Skills"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "127@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT first_name , COUNT(first_name) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id GROUP BY first_name ORDER BY COUNT(first_name) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT first_name , COUNT(first_name) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id GROUP BY first_name ORDER BY COUNT(first_name) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "first_name",
            "y_name": "COUNT(first_name)",
            "x_data": [
                [
                    "Alexys",
                    "Courtney",
                    "Cullen",
                    "Etha",
                    "Nellie",
                    "Lorine",
                    "Naomi",
                    "Archibald"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    6
                ]
            ],
            "classify": [],
            "describe": "GROUP BY first_name",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Kolik zaměstnanců se spojilo s jednotlivými inženýry? Udělej mi sloupcový graf seskupený podle křestních jmen jednotlivých inženýrů. Mohl bys ho zobrazit podle osy y od nejnižšího po nejvyšší?"
        ],
        "irrelevant_tables": [
            "Part_Faults",
            "Maintenance_Contracts"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "128@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id GROUP BY last_name ORDER BY last_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id GROUP BY last_name ORDER BY last_name DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "Streich",
                    "Simonis",
                    "Reinger",
                    "Price",
                    "Morar",
                    "Kunde",
                    "Hirthe",
                    "Adams"
                ]
            ],
            "y_data": [
                [
                    6,
                    1,
                    1,
                    2,
                    2,
                    1,
                    1,
                    1
                ]
            ],
            "classify": [],
            "describe": "GROUP BY last_name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Kolik zaměstnanců se spojilo s jednotlivými inženýry? Udělej mi sloupcový graf seskupený podle příjmení každého inženýra, seřazený podle jmen sestupně."
        ],
        "irrelevant_tables": [
            "Skills_Required_To_Fix",
            "Maintenance_Contracts"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "134@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT last_name , COUNT(last_name) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  last_name ORDER BY last_name DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT last_name , COUNT(last_name) FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ,  last_name ORDER BY last_name DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "last_name",
            "y_name": "COUNT(last_name)",
            "x_data": [
                [
                    "Streich",
                    "Stamm",
                    "Simonis",
                    "Price",
                    "Orn",
                    "Morar",
                    "Kunde",
                    "Hirthe",
                    "Hauck",
                    "Harvey",
                    "Hahn",
                    "Grady",
                    "Adams"
                ]
            ],
            "y_data": [
                [
                    1,
                    0,
                    0,
                    2,
                    0,
                    1,
                    0,
                    1,
                    1,
                    0,
                    1,
                    1,
                    1
                ],
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    0,
                    1,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0
                ],
                [
                    1,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    1,
                    0,
                    0,
                    1
                ]
            ],
            "classify": [
                "Electrical",
                "Mechanical",
                "TV, Video"
            ],
            "describe": "GROUP BY skill_description, GROUP BY last_name",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Vypiš počet inženýrů do sloupcového grafu. Osa x je příjmení a je seskupena podle popisu dovedností, last_name seřaď sestupně."
        ],
        "irrelevant_tables": [
            "Engineer_Visits",
            "Staff"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "field",
                "stacked_bar": true
            }
        ]
    },
    "139@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT part_name , count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT part_name , count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "part_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "top",
                    "middle",
                    "package"
                ]
            ],
            "y_data": [
                [
                    4,
                    5,
                    6
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Vizualizuj sloupcový graf, v kolika prostředcích lze použít jednotlivé části? Vypiš název a číslo dílu a zobraz jej vzestupně podle Y.",
            "V kolika aktivech lze jednotlivé části použít? Vypiš název dílu a číslo pomocí sloupcového grafu a zobraz je na ose y od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "Staff",
            "Engineer_Visits"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            },
            {
                "channel_specified": [
                    "x",
                    "y"
                ],
                "sort_by": "axis"
            }
        ]
    },
    "140@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT asset_make , COUNT(asset_make) FROM Assets GROUP BY asset_make ORDER BY COUNT(asset_make) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT asset_make , COUNT(asset_make) FROM Assets GROUP BY asset_make ORDER BY COUNT(asset_make) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "asset_make",
            "y_name": "COUNT(asset_make)",
            "x_data": [
                [
                    "GB",
                    "IE",
                    "IT",
                    "PT",
                    "CN",
                    "DE",
                    "FR",
                    "IN",
                    "RU"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY asset_make",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Sloupcový graf, který ukazuje, kolik aktiv tvoří různé značky aktiv. Zobraz celkový počet vzestupně.",
            "Zobraz počet aktiv a seskup je podle značky aktiv do sloupcového grafu a seřaď je vzestupně podle toho, počtu aktiv."
        ],
        "irrelevant_tables": [
            "Part_Faults",
            "Asset_Parts"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            },
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "145@y_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY fault_short_name ,  skill_description ORDER BY COUNT(skill_description) DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY fault_short_name ,  skill_description ORDER BY COUNT(skill_description) DESC"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "skill_description",
            "y_name": "COUNT(skill_description)",
            "x_data": [
                [
                    "TV, Video",
                    "Mechanical",
                    "Electrical"
                ]
            ],
            "y_data": [
                [
                    4,
                    1,
                    0
                ],
                [
                    2,
                    2,
                    3
                ],
                [
                    1,
                    2,
                    0
                ]
            ],
            "classify": [
                "MW",
                "PW",
                "TW"
            ],
            "describe": "GROUP BY fault_short_name, GROUP BY skill_description",
            "sort": {
                "channel": "y",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet závad pro různé krátké názvy závad a dovednosti potřebné k jejich odstranění. Na ose x je popis dovedností a je seskupen podle krátkého názvu závady, na ose y se zobrazuje sestupně."
        ],
        "irrelevant_tables": [
            "Maintenance_Engineers",
            "Fault_Log_Parts"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ],
                "sort_by": "axis",
                "stacked_bar": true
            }
        ]
    },
    "149@x_name@DESC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ORDER BY skill_description DESC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT skill_description , COUNT(skill_description) FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id GROUP BY skill_description ORDER BY skill_description DESC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "assets_maintenance",
        "vis_obj": {
            "chart": "bar",
            "x_name": "skill_description",
            "y_name": "COUNT(skill_description)",
            "x_data": [
                [
                    "TV, Video",
                    "Mechanical",
                    "Electrical"
                ]
            ],
            "y_data": [
                [
                    7,
                    5,
                    3
                ]
            ],
            "classify": [],
            "describe": "GROUP BY skill_description",
            "sort": {
                "channel": "x",
                "order": "descending"
            }
        },
        "nl_queries": [
            "Sloupcový graf s počtem závad pro různé popisy dovedností potřebných k jejich odstranění a seřazení na ose x sestupně."
        ],
        "irrelevant_tables": [
            "Engineer_Visits",
            "Fault_Log_Parts"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "3069@x_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT name , count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid ORDER BY name ASC"
        },
        "chart": "Bar",
        "hardness": "Hard",
        "db_id": "twitter_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Black Widow\n",
                    "Celine Dion",
                    "Iron Man",
                    "Susan",
                    "Tyler Swift"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    2,
                    2,
                    1
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "x",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Zjisti jména jednotlivých uživatelů a počet tweetů, které každý z nich napsal. Vizualizuj pomocí sloupcového grafu, mohl bys osu X seřadit vzestupně?"
        ],
        "irrelevant_tables": [
            "follows"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "axis"
            }
        ]
    },
    "1424@y_name@ASC": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Country , count(*) FROM airport GROUP BY country ORDER BY count(*) ASC",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Country , count(*) FROM airport GROUP BY country ORDER BY count(*) ASC"
        },
        "chart": "Bar",
        "hardness": "Medium",
        "db_id": "flight_company",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Country",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Belgium",
                    "Denmark",
                    "Iceland",
                    "Netherlands",
                    "Norway",
                    "Spain",
                    "United States"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": {
                "channel": "y",
                "order": "ascending"
            }
        },
        "nl_queries": [
            "Ukaž mi celkový počet podle zemí v histogramu, seřaď celkový počet od nejnižšího po nejvyšší."
        ],
        "irrelevant_tables": [
            "operate_company",
            "flight"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "sort_by": "field"
            }
        ]
    },
    "4001": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT COUNT(DISTINCT a.FacID), COUNT(DISTINCT b.stuid), a.actid FROM Faculty_Participates_in a FULL JOIN Participates_in b ON a.actid = b.actid GROUP BY a.actid",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT COUNT(DISTINCT a.FacID), COUNT(DISTINCT b.stuid), a.actid FROM Faculty_Participates_in a FULL JOIN Participates_in b ON a.actid = b.actid GROUP BY a.actid"
        },
        "chart": "Scatter",
        "hardness": "Hard",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "count(FacID)",
            "y_name": "count(stuid)",
            "x_data": [
                [
                    0,
                    5,
                    4,
                    1,
                    2,
                    3,
                    1,
                    1,
                    3,
                    2,
                    3,
                    5,
                    7,
                    2
                ]
            ],
            "y_data": [
                [
                    2,
                    6,
                    4,
                    5,
                    3,
                    2,
                    9,
                    5,
                    14,
                    4,
                    3,
                    6,
                    7,
                    0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí bodového grafu znázorni vztah mezi počtem fakult a studentů v jednotlivých činnostech."
        ],
        "irrelevant_tables": [
            "Activity",
            "Faculty"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "4002": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT city_code, count(*), Sex FROM Student GROUP BY city_code, Sex",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT city_code, count(*), Sex FROM Student GROUP BY city_code, Sex"
        },
        "chart": "Stacked Bar",
        "hardness": "Easy",
        "db_id": "activity_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "city_code",
            "y_name": "count(stuid)",
            "x_data": [
                [
                    "ATL",
                    "BAL",
                    "BOS",
                    "CHI",
                    "DAL",
                    "DET",
                    "HKG",
                    "HOU",
                    "LON",
                    "LOS",
                    "NAR",
                    "NYC",
                    "PEK",
                    "PHL",
                    "PIT",
                    "ROC",
                    "WAS",
                    "YYZ",
                    "SFO"
                ]
            ],
            "y_data": [
                [
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    0,
                    2,
                    0,
                    1
                ],
                [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    1,
                    2,
                    3,
                    1,
                    1,
                    2,
                    0
                ]
            ],
            "classify": [
                "F",
                "M"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zobraz počet studentů z různých měst a různého pohlaví."
        ],
        "irrelevant_tables": [
            "Activity",
            "Faculty"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": true
            }
        ]
    },
    "4003": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT International_Passengers, Domestic_Passengers FROM airport GROUP BY Airport_ID",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT International_Passengers, Domestic_Passengers FROM airport GROUP BY Airport_ID"
        },
        "chart": "Scatter",
        "hardness": "Easy",
        "db_id": "aircraft",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "International_Passengers",
            "y_name": "Domestic_Passengers",
            "x_data": [
                [
                    61344438.0,
                    30431051.0,
                    19996947.0,
                    18119230.0,
                    8853224.0,
                    8105162.0,
                    3711140.0,
                    3943139.0,
                    5057051.0,
                    4870184.0
                ]
            ],
            "y_data": [
                [
                    5562516.0,
                    3730963.0,
                    2343428.0,
                    2943719.0,
                    1320678.0,
                    1471538.0,
                    5281038.0,
                    4192121.0,
                    1171605.0,
                    746094.0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Bodový graf znázorňující vztah mezi mezinárodními a místními cestujícími na letišti."
        ],
        "irrelevant_tables": [
            "pilot",
            "match"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "4004": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT c.Major,COUNT(DISTINCT c.StuID), a.AllergyType FROM Allergy_Type a JOIN Has_Allergy b ON a.Allergy = b.Allergy JOIN Student c ON b.StuID = c.StuID GROUP BY c.Major, a.AllergyType",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT c.Major,COUNT(DISTINCT c.StuID), a.AllergyType FROM Allergy_Type a JOIN Has_Allergy b ON a.Allergy = b.Allergy JOIN Student c ON b.StuID = c.StuID GROUP BY c.Major, a.AllergyType"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "allergy_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Major",
            "y_name": "count(StuID)",
            "x_data": [
                [
                    100,
                    520,
                    540,
                    550,
                    600
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    1,
                    1,
                    10
                ],
                [
                    0,
                    5,
                    1,
                    2,
                    9
                ],
                [
                    0,
                    1,
                    0,
                    0,
                    4
                ]
            ],
            "classify": [
                "food",
                "environmental",
                "animal"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf znázorňující počet studentů alergických na různé typy alergenů mezi různými obory."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": false
            }
        ]
    },
    "4005": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year, avg(salary), league_id FROM salary GROUP BY year, league_id",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year, avg(salary), league_id FROM salary GROUP BY year, league_id"
        },
        "chart": "Grouping Line",
        "hardness": "Easy",
        "db_id": "baseball_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "avg(salary)",
            "x_data": [
                [
                    1985,
                    1986,
                    1987,
                    1988,
                    1989,
                    1990,
                    1991,
                    1992,
                    1993,
                    1994,
                    1995,
                    1996,
                    1997,
                    1998,
                    1999,
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014,
                    2015
                ]
            ],
            "y_data": [
                [
                    500249.3176470588,
                    433925.0693641619,
                    427857.76802507835,
                    452374.17034700315,
                    511116.4865671642,
                    525913.727735369,
                    879587.5474683545,
                    1085608.5562130178,
                    923882.9912087912,
                    971003.2204899777,
                    890698.7373737374,
                    1000406.7262931034,
                    1169651.3779697623,
                    1207658.0319548873,
                    1468880.6242990654,
                    1983096.549107143,
                    2232801.3391684904,
                    2342579.4053452117,
                    2614933.0605381164,
                    2469002.5239179954,
                    2590986.616438356,
                    2616445.6961451247,
                    2623749.153674833,
                    2870790.4449244062,
                    3184368.693208431,
                    3142161.1689497717,
                    3156654.9042316256,
                    3277278.0,
                    3688940.2014742014,
                    3935543.744680851,
                    4212445.024875622
                ],
                [
                    455597.0169491525,
                    402337.86734693876,
                    441846.58116883115,
                    453901.1907514451,
                    502052.3617021277,
                    500415.81856540084,
                    908126.7018970189,
                    1017651.1160092808,
                    1028575.5833333334,
                    1130703.0827586206,
                    1039864.5458248473,
                    1055235.1798715203,
                    1267829.6471861473,
                    1364396.5622317595,
                    1503986.4458598725,
                    2004401.6701030927,
                    2333183.8734491314,
                    2449016.0428211587,
                    2524939.5879265093,
                    2517280.1913265307,
                    2681580.8142493637,
                    3088941.970899471,
                    3304390.882951654,
                    3449574.2849872774,
                    3380833.0621761656,
                    3431360.3903061226,
                    3505557.023076923,
                    3662264.0852130326,
                    3757664.181372549,
                    4030561.0,
                    4387324.503614458
                ]
            ],
            "classify": [
                "NL",
                "AL"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vytvoř čárový graf znázorňující roční trendy průměrných platů basketbalistů v různých ligách."
        ],
        "irrelevant_tables": [
            "all_star",
            "pitching"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4006": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year, count(DISTINCT player_id), league_id FROM player_award where year >= 2000 GROUP BY year, league_id",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year, count(DISTINCT player_id), league_id FROM player_award where year >= 2000 GROUP BY year, league_id"
        },
        "chart": "Grouping Line",
        "hardness": "Medium",
        "db_id": "baseball_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(player_id)",
            "x_data": [
                [
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014,
                    2015
                ]
            ],
            "y_data": [
                [
                    22,
                    24,
                    20,
                    22,
                    23,
                    23,
                    25,
                    20,
                    22,
                    22,
                    22,
                    19,
                    21,
                    21,
                    21,
                    18
                ],
                [
                    23,
                    22,
                    23,
                    23,
                    24,
                    26,
                    23,
                    22,
                    20,
                    17,
                    19,
                    19,
                    22,
                    20,
                    22,
                    19
                ],
                [
                    5,
                    5,
                    6,
                    5,
                    7,
                    6,
                    7,
                    7,
                    6,
                    6,
                    6,
                    6,
                    5,
                    4,
                    3,
                    4
                ]
            ],
            "classify": [
                "NL",
                "AL",
                "ML"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Čárový graf znázorňující změny v počtu oceněných hráčů v různých ligách od roku 2000."
        ],
        "irrelevant_tables": [
            "all_star",
            "pitching"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4007": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT b.name, count(DISTINCT b.name), c.name FROM accelerator_compatible_browser a JOIN browser b ON a.browser_id = b.id JOIN Web_client_accelerator c ON a.accelerator_id = c.id GROUP BY b.name, c.name",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT b.name, count(DISTINCT b.name), c.name FROM accelerator_compatible_browser a JOIN browser b ON a.browser_id = b.id JOIN Web_client_accelerator c ON a.accelerator_id = c.id GROUP BY b.name, c.name"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "browser_web",
        "vis_obj": {
            "chart": "bar",
            "x_name": "name",
            "y_name": "count(name)",
            "x_data": [
                [
                    "Firefox",
                    "Internet Explorer",
                    "Opera",
                    "Safari"
                ]
            ],
            "y_data": [
                [
                    1,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    1
                ],
                [
                    1,
                    1,
                    0,
                    1
                ],
                [
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    0
                ]
            ],
            "classify": [
                "CACHEbox",
                "CProxy",
                "Fasterfox",
                "Nitro",
                "fasTun"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Pomocí sloupcového grafu zobraz počet akcelerátorů kompatibilních s jednotlivými prohlížeči, přičemž barvy představují různé akcelerátory."
        ],
        "irrelevant_tables": [],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": true
            }
        ]
    },
    "4008": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Year, avg(Horsepower), Cylinders FROM cars_data where Cylinders in (4,6) and year > 1974 and year < 1980 GROUP BY Year, Cylinders",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Year, avg(Horsepower), Cylinders FROM cars_data where Cylinders in (4,6) and year > 1974 and year < 1980 GROUP BY Year, Cylinders"
        },
        "chart": "Grouping Line",
        "hardness": "Medium",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "Year",
            "y_name": "avg(Horsepower)",
            "x_data": [
                [
                    1975,
                    1976,
                    1977,
                    1978,
                    1979
                ]
            ],
            "y_data": [
                [
                    84.91666666666667,
                    75.6,
                    78.78571428571429,
                    79.70588235294117,
                    75.75
                ],
                [
                    96.75,
                    98.7,
                    102.0,
                    109.83333333333333,
                    105.0,
                    111.0
                ]
            ],
            "classify": [
                "4",
                "6"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz trend změn průměrného výkonu v průběhu let u vozů se 4 nebo 6 válci pomocí skládaného čárového grafu, barevně rozlišeného podle válců. Ukaž trend od roku 1975 do roku 1979."
        ],
        "irrelevant_tables": [
            "car_makers",
            "continents"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4009": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Horsepower, Accelerate FROM cars_data where Edispl > 200",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Horsepower, Accelerate FROM cars_data where Edispl > 200"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Horsepower",
            "y_name": "Accelerate",
            "x_data": [
                [
                    130,
                    165,
                    150,
                    150,
                    140,
                    198,
                    220,
                    215,
                    225,
                    190,
                    165,
                    153,
                    175,
                    175,
                    170,
                    160,
                    140,
                    150,
                    225,
                    215,
                    200,
                    210,
                    193,
                    100,
                    105,
                    100,
                    88,
                    100,
                    165,
                    175,
                    153,
                    150,
                    180,
                    170,
                    175,
                    110,
                    100,
                    88,
                    165,
                    175,
                    150,
                    153,
                    150,
                    208,
                    155,
                    160,
                    190,
                    150,
                    130,
                    140,
                    150,
                    175,
                    150,
                    145,
                    137,
                    150,
                    198,
                    150,
                    158,
                    150,
                    215,
                    225,
                    175,
                    105,
                    100,
                    100,
                    88,
                    150,
                    167,
                    170,
                    180,
                    100,
                    145,
                    230,
                    150,
                    180,
                    100,
                    100,
                    100,
                    110,
                    105,
                    140,
                    150,
                    150,
                    140,
                    150,
                    95,
                    105,
                    72,
                    72,
                    170,
                    145,
                    150,
                    148,
                    110,
                    105,
                    110,
                    95,
                    110,
                    110,
                    129,
                    100,
                    90,
                    140,
                    150,
                    120,
                    152,
                    100,
                    105,
                    90,
                    100,
                    78,
                    110,
                    95,
                    150,
                    180,
                    145,
                    130,
                    150,
                    145,
                    110,
                    145,
                    130,
                    110,
                    105,
                    100,
                    98,
                    180,
                    170,
                    190,
                    149,
                    110,
                    140,
                    139,
                    105,
                    100,
                    90,
                    105,
                    110,
                    120,
                    145,
                    165,
                    139,
                    140,
                    115,
                    90,
                    110,
                    130,
                    129,
                    138,
                    135,
                    155,
                    142,
                    125,
                    150,
                    125,
                    90,
                    90,
                    110,
                    105,
                    85,
                    85,
                    112
                ]
            ],
            "y_data": [
                [
                    12.0,
                    11.5,
                    11.0,
                    12.0,
                    10.5,
                    10.0,
                    9.0,
                    8.5,
                    10.0,
                    8.5,
                    11.5,
                    11.0,
                    10.5,
                    11.0,
                    10.0,
                    8.0,
                    8.0,
                    9.5,
                    10.0,
                    14.0,
                    15.0,
                    13.5,
                    18.5,
                    13.0,
                    15.5,
                    15.5,
                    15.5,
                    15.5,
                    12.0,
                    11.5,
                    13.5,
                    13.0,
                    11.5,
                    12.0,
                    12.0,
                    13.5,
                    15.0,
                    14.5,
                    12.0,
                    12.0,
                    13.5,
                    13.0,
                    11.5,
                    11.0,
                    13.5,
                    13.5,
                    12.5,
                    12.5,
                    14.0,
                    16.0,
                    14.0,
                    13.0,
                    11.5,
                    13.0,
                    14.5,
                    12.5,
                    11.5,
                    12.0,
                    13.0,
                    14.5,
                    11.0,
                    11.0,
                    11.0,
                    16.5,
                    18.0,
                    16.0,
                    16.5,
                    14.0,
                    12.5,
                    13.0,
                    12.5,
                    15.0,
                    13.0,
                    9.5,
                    11.0,
                    11.0,
                    16.0,
                    17.0,
                    17.0,
                    18.0,
                    16.5,
                    14.0,
                    14.5,
                    13.5,
                    16.0,
                    15.5,
                    16.0,
                    16.0,
                    21.0,
                    19.5,
                    11.5,
                    14.0,
                    14.5,
                    13.5,
                    21.0,
                    18.5,
                    19.0,
                    19.0,
                    15.0,
                    13.5,
                    12.0,
                    16.0,
                    17.0,
                    13.0,
                    13.0,
                    13.9,
                    12.8,
                    15.4,
                    14.5,
                    17.6,
                    17.7,
                    21.0,
                    16.2,
                    17.8,
                    13.2,
                    12.1,
                    12.0,
                    15.0,
                    14.0,
                    12.5,
                    19.0,
                    13.7,
                    14.9,
                    16.4,
                    16.9,
                    17.7,
                    19.0,
                    11.1,
                    11.4,
                    12.2,
                    14.5,
                    15.5,
                    13.2,
                    12.8,
                    19.2,
                    17.2,
                    17.2,
                    15.8,
                    18.7,
                    15.1,
                    13.2,
                    13.4,
                    11.2,
                    13.7,
                    15.4,
                    18.2,
                    16.6,
                    15.4,
                    13.4,
                    13.2,
                    15.2,
                    14.9,
                    14.3,
                    15.0,
                    13.0,
                    17.4,
                    22.2,
                    18.7,
                    15.8,
                    19.0,
                    16.6,
                    17.0,
                    14.7
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vytvoř bodový graf, který znázorní závislost mezi výkonem a zrychlením pro vozy s hodnotou Edispl větší než 200."
        ],
        "irrelevant_tables": [
            "car_makers",
            "continents"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "4010": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT c.Continent, count(distinct a.id), CountryName FROM car_makers a JOIN countries b ON a.Country = b.CountryId JOIN continents c on b.Continent=c.ContId GROUP BY b.CountryName, c.Continent",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT c.Continent, count(distinct a.id), CountryName FROM car_makers a JOIN countries b ON a.Country = b.CountryId JOIN continents c on b.Continent=c.ContId GROUP BY b.CountryName, c.Continent"
        },
        "chart": "Stacked Bar",
        "hardness": "Hard",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Continent",
            "y_name": "count(id)",
            "x_data": [
                [
                    "america",
                    "asia",
                    "europe"
                ]
            ],
            "y_data": [
                [
                    0,
                    0,
                    3
                ],
                [
                    0,
                    0,
                    4
                ],
                [
                    0,
                    0,
                    1
                ],
                [
                    0,
                    5,
                    0
                ],
                [
                    0,
                    2,
                    0
                ],
                [
                    0,
                    0,
                    2
                ],
                [
                    0,
                    0,
                    1
                ],
                [
                    4,
                    0,
                    0
                ]
            ],
            "classify": [
                "france",
                "germany",
                "italy",
                "japan",
                "korea",
                "sweden",
                "uk",
                "usa"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf zobrazující počet výrobců automobilů na jednotlivých kontinentech, barevně rozlišený podle zemí."
        ],
        "irrelevant_tables": [
            "car_names",
            "model_list"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": true
            }
        ]
    },
    "4011": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT a.Cylinders, avg(a.Accelerate), e.CountryName FROM cars_data a JOIN car_names b ON a.Id = b.MakeId JOIN model_list c ON b.Model = c.Model JOIN car_makers d ON c.Maker = d.Id JOIN countries e ON d.Country = e.CountryId GROUP BY a.Cylinders, e.CountryName",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT a.Cylinders, avg(a.Accelerate), e.CountryName FROM cars_data a JOIN car_names b ON a.Id = b.MakeId JOIN model_list c ON b.Model = c.Model JOIN car_makers d ON c.Maker = d.Id JOIN countries e ON d.Country = e.CountryId GROUP BY a.Cylinders, e.CountryName"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Cylinders",
            "y_name": "avg(a.Accelerate)",
            "x_data": [
                [
                    "3",
                    "4",
                    "5",
                    "6",
                    "8"
                ]
            ],
            "y_data": [
                [
                    0,
                    18.700000000000003,
                    0,
                    15.8,
                    0
                ],
                [
                    0,
                    16.805882352941175,
                    18.633333333333333,
                    16.7,
                    0
                ],
                [
                    0,
                    15.65,
                    0,
                    0,
                    0
                ],
                [
                    13.25,
                    16.569565217391304,
                    0,
                    13.549999999999999,
                    0
                ],
                [
                    0,
                    15.144444444444446,
                    0,
                    16.6,
                    0
                ],
                [
                    0,
                    15.1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    16.52638888888889,
                    0,
                    16.474324324324325,
                    12.784112149532717
                ]
            ],
            "classify": [
                "france",
                "germany",
                "italy",
                "japan",
                "sweden",
                "uk",
                "usa"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi prosím průměrná zrychlení automobilů ve sloupcovém grafu agregovaná podle počtu válců. Různé barvy představují různé země."
        ],
        "irrelevant_tables": [
            "continents"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": false
            }
        ]
    },
    "4012": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT a.Horsepower, a.Accelerate, e.CountryName,a.Id FROM cars_data a JOIN car_names b ON a.Id = b.MakeId JOIN model_list c ON b.Model = c.Model JOIN car_makers d ON c.Maker = d.Id JOIN countries e ON d.Country = e.CountryId where a.Horsepower != 'null' GROUP BY a.Id, a.Cylinders, e.CountryName",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT a.Horsepower, a.Accelerate, e.CountryName,a.Id FROM cars_data a JOIN car_names b ON a.Id = b.MakeId JOIN model_list c ON b.Model = c.Model JOIN car_makers d ON c.Maker = d.Id JOIN countries e ON d.Country = e.CountryId where a.Horsepower != 'null' GROUP BY a.Id, a.Cylinders, e.CountryName"
        },
        "chart": "Grouping Scatter",
        "hardness": "Extra Hard",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Horsepower",
            "y_name": "Accelerate",
            "x_data": [
                [
                    115,
                    87,
                    70,
                    87,
                    69,
                    88,
                    83,
                    88,
                    58,
                    133,
                    71,
                    80
                ],
                [
                    46,
                    90,
                    113,
                    48,
                    90,
                    60,
                    54,
                    76,
                    46,
                    75,
                    91,
                    83,
                    67,
                    78,
                    71,
                    70,
                    95,
                    81,
                    70,
                    71,
                    120,
                    78,
                    78,
                    110,
                    48,
                    103,
                    71,
                    71,
                    77,
                    76,
                    78,
                    48,
                    48,
                    67,
                    67,
                    74,
                    74,
                    52
                ],
                [
                    76,
                    90,
                    49,
                    75,
                    75,
                    67,
                    86,
                    69
                ],
                [
                    95,
                    88,
                    88,
                    95,
                    65,
                    69,
                    95,
                    97,
                    92,
                    97,
                    88,
                    88,
                    94,
                    90,
                    122,
                    67,
                    65,
                    52,
                    61,
                    97,
                    93,
                    75,
                    96,
                    97,
                    53,
                    53,
                    70,
                    75,
                    108,
                    68,
                    70,
                    75,
                    67,
                    97,
                    110,
                    52,
                    70,
                    60,
                    95,
                    97,
                    95,
                    97,
                    68,
                    65,
                    65,
                    60,
                    65,
                    90,
                    75,
                    92,
                    75,
                    65,
                    65,
                    67,
                    67,
                    132,
                    100,
                    72,
                    58,
                    60,
                    67,
                    65,
                    62,
                    68,
                    75,
                    75,
                    100,
                    74,
                    116,
                    120,
                    68,
                    68,
                    88,
                    75,
                    70,
                    67,
                    67,
                    67,
                    96
                ],
                [
                    95,
                    112,
                    112,
                    110,
                    98,
                    115,
                    102,
                    125,
                    115,
                    110,
                    76
                ],
                [
                    88
                ],
                [
                    130,
                    165,
                    150,
                    150,
                    140,
                    198,
                    220,
                    215,
                    225,
                    190,
                    165,
                    153,
                    175,
                    175,
                    170,
                    160,
                    140,
                    150,
                    225,
                    95,
                    97,
                    85,
                    90,
                    215,
                    200,
                    210,
                    90,
                    100,
                    105,
                    100,
                    88,
                    100,
                    165,
                    175,
                    153,
                    150,
                    180,
                    170,
                    175,
                    110,
                    72,
                    100,
                    88,
                    86,
                    70,
                    80,
                    90,
                    86,
                    165,
                    175,
                    150,
                    153,
                    150,
                    208,
                    155,
                    160,
                    190,
                    150,
                    130,
                    140,
                    150,
                    86,
                    80,
                    175,
                    150,
                    145,
                    137,
                    150,
                    198,
                    150,
                    158,
                    150,
                    215,
                    225,
                    175,
                    105,
                    100,
                    100,
                    88,
                    95,
                    150,
                    167,
                    170,
                    180,
                    100,
                    72,
                    85,
                    107,
                    145,
                    230,
                    150,
                    180,
                    95,
                    100,
                    100,
                    80,
                    75,
                    100,
                    110,
                    105,
                    140,
                    150,
                    150,
                    140,
                    150,
                    75,
                    95,
                    105,
                    72,
                    72,
                    170,
                    145,
                    150,
                    148,
                    110,
                    105,
                    110,
                    95,
                    110,
                    110,
                    129,
                    83,
                    100,
                    78,
                    97,
                    90,
                    92,
                    79,
                    140,
                    150,
                    120,
                    152,
                    100,
                    105,
                    81,
                    90,
                    52,
                    60,
                    100,
                    78,
                    110,
                    95,
                    72,
                    150,
                    180,
                    145,
                    130,
                    150,
                    80,
                    96,
                    145,
                    110,
                    145,
                    130,
                    110,
                    105,
                    100,
                    98,
                    180,
                    170,
                    190,
                    149,
                    88,
                    89,
                    63,
                    83,
                    66,
                    110,
                    140,
                    139,
                    105,
                    95,
                    85,
                    88,
                    100,
                    90,
                    105,
                    85,
                    110,
                    120,
                    145,
                    165,
                    139,
                    140,
                    68,
                    75,
                    105,
                    85,
                    115,
                    85,
                    88,
                    90,
                    110,
                    130,
                    129,
                    138,
                    135,
                    155,
                    142,
                    125,
                    150,
                    80,
                    80,
                    125,
                    90,
                    70,
                    70,
                    90,
                    115,
                    115,
                    90,
                    70,
                    90,
                    88,
                    90,
                    90,
                    105,
                    84,
                    84,
                    92,
                    110,
                    84,
                    64,
                    63,
                    65,
                    65,
                    110,
                    105,
                    88,
                    85,
                    88,
                    88,
                    88,
                    85,
                    84,
                    90,
                    92,
                    63,
                    70,
                    110,
                    85,
                    92,
                    112,
                    84,
                    90,
                    86,
                    84,
                    79,
                    82
                ]
            ],
            "y_data": [
                [
                    17.5,
                    17.5,
                    19.5,
                    19.5,
                    18.0,
                    17.0,
                    15.3,
                    21.9,
                    18.6,
                    15.8,
                    24.8,
                    20.4
                ],
                [
                    20.5,
                    14.5,
                    12.5,
                    20.0,
                    14.0,
                    19.0,
                    23.5,
                    18.0,
                    21.0,
                    15.5,
                    14.0,
                    16.5,
                    15.5,
                    14.5,
                    16.5,
                    14.0,
                    15.0,
                    16.9,
                    14.2,
                    12.2,
                    16.7,
                    14.5,
                    14.1,
                    12.8,
                    21.5,
                    15.9,
                    14.9,
                    14.0,
                    20.1,
                    14.7,
                    15.8,
                    21.7,
                    23.7,
                    19.9,
                    21.8,
                    14.2,
                    15.3,
                    24.6
                ],
                [
                    14.5,
                    15.5,
                    19.5,
                    15.5,
                    14.0,
                    16.0,
                    15.5,
                    14.7
                ],
                [
                    15.0,
                    14.5,
                    14.5,
                    14.0,
                    19.0,
                    18.0,
                    15.5,
                    13.5,
                    17.0,
                    14.5,
                    16.5,
                    19.0,
                    16.5,
                    13.5,
                    13.5,
                    19.0,
                    21.0,
                    16.5,
                    19.0,
                    15.0,
                    15.5,
                    16.0,
                    13.5,
                    17.0,
                    17.5,
                    17.4,
                    17.0,
                    16.4,
                    15.5,
                    18.5,
                    16.8,
                    18.2,
                    16.4,
                    14.5,
                    13.5,
                    19.4,
                    18.6,
                    16.4,
                    14.2,
                    14.7,
                    14.8,
                    14.9,
                    16.6,
                    15.2,
                    19.2,
                    18.8,
                    16.4,
                    15.5,
                    17.5,
                    15.0,
                    15.2,
                    17.9,
                    19.2,
                    13.8,
                    18.0,
                    11.4,
                    12.5,
                    17.0,
                    16.9,
                    16.1,
                    17.8,
                    19.4,
                    17.3,
                    16.0,
                    14.4,
                    16.8,
                    14.8,
                    18.3,
                    12.6,
                    13.8,
                    18.2,
                    17.6,
                    14.5,
                    14.5,
                    16.9,
                    15.0,
                    15.7,
                    16.2,
                    13.9
                ],
                [
                    17.5,
                    14.5,
                    15.5,
                    14.0,
                    14.5,
                    13.5,
                    15.7,
                    13.6,
                    15.7,
                    15.4,
                    19.6
                ],
                [
                    15.1
                ],
                [
                    12.0,
                    11.5,
                    11.0,
                    12.0,
                    10.5,
                    10.0,
                    9.0,
                    8.5,
                    10.0,
                    8.5,
                    11.5,
                    11.0,
                    10.5,
                    11.0,
                    10.0,
                    8.0,
                    8.0,
                    9.5,
                    10.0,
                    15.5,
                    15.5,
                    16.0,
                    15.0,
                    14.0,
                    15.0,
                    13.5,
                    15.5,
                    13.0,
                    15.5,
                    15.5,
                    15.5,
                    15.5,
                    12.0,
                    11.5,
                    13.5,
                    13.0,
                    11.5,
                    12.0,
                    12.0,
                    13.5,
                    19.0,
                    15.0,
                    14.5,
                    14.0,
                    20.5,
                    17.0,
                    19.5,
                    16.5,
                    12.0,
                    12.0,
                    13.5,
                    13.0,
                    11.5,
                    11.0,
                    13.5,
                    13.5,
                    12.5,
                    12.5,
                    14.0,
                    16.0,
                    14.0,
                    16.0,
                    15.0,
                    13.0,
                    11.5,
                    13.0,
                    14.5,
                    12.5,
                    11.5,
                    12.0,
                    13.0,
                    14.5,
                    11.0,
                    11.0,
                    11.0,
                    16.5,
                    18.0,
                    16.0,
                    16.5,
                    16.0,
                    14.0,
                    12.5,
                    13.0,
                    12.5,
                    15.0,
                    19.5,
                    18.5,
                    14.0,
                    13.0,
                    9.5,
                    11.0,
                    11.0,
                    16.5,
                    16.0,
                    17.0,
                    16.5,
                    17.0,
                    17.0,
                    18.0,
                    16.5,
                    14.0,
                    14.5,
                    13.5,
                    16.0,
                    15.5,
                    14.5,
                    16.0,
                    16.0,
                    21.0,
                    19.5,
                    11.5,
                    14.0,
                    14.5,
                    13.5,
                    21.0,
                    18.5,
                    19.0,
                    19.0,
                    15.0,
                    13.5,
                    12.0,
                    17.0,
                    16.0,
                    18.5,
                    14.5,
                    17.0,
                    14.9,
                    17.7,
                    13.0,
                    13.0,
                    13.9,
                    12.8,
                    15.4,
                    14.5,
                    17.6,
                    17.6,
                    22.2,
                    22.1,
                    17.7,
                    21.0,
                    16.2,
                    17.8,
                    13.6,
                    13.2,
                    12.1,
                    12.0,
                    15.0,
                    14.0,
                    14.8,
                    15.5,
                    12.5,
                    19.0,
                    13.7,
                    14.9,
                    16.4,
                    16.9,
                    17.7,
                    19.0,
                    11.1,
                    11.4,
                    12.2,
                    14.5,
                    16.0,
                    15.8,
                    17.0,
                    15.9,
                    14.4,
                    15.5,
                    13.2,
                    12.8,
                    19.2,
                    18.2,
                    15.8,
                    15.4,
                    17.2,
                    17.2,
                    15.8,
                    16.7,
                    18.7,
                    15.1,
                    13.2,
                    13.4,
                    11.2,
                    13.7,
                    16.5,
                    14.5,
                    16.7,
                    17.6,
                    15.4,
                    18.2,
                    17.3,
                    18.2,
                    16.6,
                    15.4,
                    13.4,
                    13.2,
                    15.2,
                    14.9,
                    14.3,
                    15.0,
                    13.0,
                    14.4,
                    15.0,
                    17.4,
                    22.2,
                    13.2,
                    14.9,
                    16.0,
                    11.3,
                    12.9,
                    13.2,
                    15.5,
                    16.5,
                    18.1,
                    20.1,
                    18.7,
                    14.4,
                    15.7,
                    16.4,
                    14.4,
                    12.6,
                    12.9,
                    16.4,
                    14.9,
                    16.2,
                    20.7,
                    15.8,
                    19.0,
                    17.1,
                    16.6,
                    19.6,
                    18.6,
                    18.0,
                    16.2,
                    16.0,
                    18.0,
                    16.4,
                    14.7,
                    17.3,
                    16.4,
                    17.0,
                    14.5,
                    14.7,
                    13.0,
                    17.3,
                    15.6,
                    11.6,
                    18.6,
                    19.4
                ]
            ],
            "classify": [
                "france",
                "germany",
                "italy",
                "japan",
                "sweden",
                "uk",
                "usa"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Bodový graf ukazuje korelaci koňské síly a zrychlení. Osa x Koňská síla, osa Y Zrychlení, barva podle názvu země."
        ],
        "irrelevant_tables": [
            "continents"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4013": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT a.Cylinders, avg(a.Accelerate), e.CountryName FROM cars_data a JOIN car_names b ON a.Id = b.MakeId JOIN model_list c ON b.Model = c.Model JOIN car_makers d ON c.Maker = d.Id JOIN countries e ON d.Country = e.CountryId GROUP BY a.Cylinders, e.CountryName",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT a.Cylinders, avg(a.Accelerate), e.CountryName FROM cars_data a JOIN car_names b ON a.Id = b.MakeId JOIN model_list c ON b.Model = c.Model JOIN car_makers d ON c.Maker = d.Id JOIN countries e ON d.Country = e.CountryId GROUP BY a.Cylinders, e.CountryName"
        },
        "chart": "Stacked Bar",
        "hardness": "Extra Hard",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Cylinders",
            "y_name": "count(id)",
            "x_data": [
                [
                    "3",
                    "4",
                    "5",
                    "6",
                    "8"
                ]
            ],
            "y_data": [
                [
                    0,
                    11,
                    0,
                    1,
                    0
                ],
                [
                    0,
                    34,
                    3,
                    1,
                    0
                ],
                [
                    0,
                    8,
                    0,
                    0,
                    0
                ],
                [
                    4,
                    69,
                    0,
                    6,
                    0
                ],
                [
                    0,
                    9,
                    0,
                    2,
                    0
                ],
                [
                    0,
                    1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    69,
                    0,
                    73,
                    107
                ]
            ],
            "classify": [
                "france",
                "germany",
                "italy",
                "japan",
                "sweden",
                "uk",
                "usa"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Sloupcový graf zobrazuje automobily vyrobené v různých zemích v různých válcích"
        ],
        "irrelevant_tables": [
            "continents"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": true
            }
        ]
    },
    "4014": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT a.year, avg(a.horsepower), e.CountryName FROM cars_data a JOIN car_names b ON a.Id = b.MakeId JOIN model_list c ON b.Model = c.Model JOIN car_makers d ON c.Maker = d.Id JOIN countries e ON d.Country = e.CountryId where a.Horsepower != 'null' and e.CountryName in ('japan', 'usa') GROUP BY a.year, e.CountryName",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT a.year, avg(a.horsepower), e.CountryName FROM cars_data a JOIN car_names b ON a.Id = b.MakeId JOIN model_list c ON b.Model = c.Model JOIN car_makers d ON c.Maker = d.Id JOIN countries e ON d.Country = e.CountryId where a.Horsepower != 'null' and e.CountryName in ('japan', 'usa') GROUP BY a.year, e.CountryName"
        },
        "chart": "Grouping Line",
        "hardness": "Extra Hard",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "avg(a.horsepower)",
            "x_data": [
                [
                    1970,
                    1971,
                    1972,
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979,
                    1980,
                    1981,
                    1982
                ]
            ],
            "y_data": [
                [
                    91.5,
                    79.25,
                    93.8,
                    98.5,
                    72.5,
                    80.25,
                    76.5,
                    81.16666666666667,
                    79.25,
                    65.0,
                    78.84615384615384,
                    78.33333333333333,
                    74.0
                ],
                [
                    164.92307692307693,
                    119.84210526315789,
                    138.77777777777777,
                    146.6206896551724,
                    112.14285714285714,
                    108.7,
                    110.5,
                    118.38888888888889,
                    107.27272727272727,
                    109.43478260869566,
                    88.83333333333333,
                    84.53846153846153,
                    86.94736842105263
                ]
            ],
            "classify": [
                "japan",
                "usa"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Čárový graf závislosti roku na průměrném výkonu podle země. Ukaž pouze trend Japonska a USA. "
        ],
        "irrelevant_tables": [
            "continents"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4015": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Num_of_staff, Score FROM shop",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Num_of_staff, Score FROM shop"
        },
        "chart": "Scatter",
        "hardness": "Extra Hard",
        "db_id": "coffee_shop",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Num_of_staff",
            "y_name": "Score",
            "x_data": [
                [
                    13,
                    19,
                    42,
                    27,
                    24,
                    34,
                    425,
                    28,
                    23,
                    16
                ]
            ],
            "y_data": [
                [
                    42.0,
                    38.0,
                    36.0,
                    32.0,
                    30.0,
                    30.0,
                    40.0,
                    30.0,
                    30.0,
                    28.0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž vztah mezi počtem zaměstnanců a skóre obchodu. Upřednostňuje se bodový graf."
        ],
        "irrelevant_tables": [
            "member",
            "happy_hour"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y"
                ]
            }
        ]
    },
    "4016": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year, count(*), semester from section where year >=2005 GROUP BY year, semester",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year, count(*), semester from section where year >=2005 GROUP BY year, semester"
        },
        "chart": "Grouping Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "semester",
            "x_data": [
                [
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010
                ]
            ],
            "y_data": [
                [
                    4,
                    8,
                    6,
                    1,
                    7,
                    5
                ],
                [
                    4,
                    5,
                    6,
                    9,
                    2,
                    6
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Ukaž mi vývoj počtu kurzů na podzim a na jaře od roku 2005 do roku 2010 pomocí skládaného lineárního grafu."
        ],
        "irrelevant_tables": [
            "advisor",
            "course"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4017": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT City, count(*), Status FROM buildings WHERE Height >= 100 GROUP BY City, Status",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT City, count(*), Status FROM buildings WHERE Height >= 100 GROUP BY City, Status"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "company_office",
        "vis_obj": {
            "chart": "bar",
            "x_name": "City",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Mexico City",
                    "Monterrey"
                ]
            ],
            "y_data": [
                [
                    4,
                    0
                ],
                [
                    1,
                    0
                ],
                [
                    4,
                    1
                ]
            ],
            "classify": [
                "on-hold",
                "proposed",
                "under construction"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet budov, které jsou v Mexico City a Monterrey vyšší než 100 metrů. Rozložení těchto budov v různých stavech znázorni pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Companies",
            "Office_locations"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": true
            }
        ]
    },
    "4018": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT b.product_category_code, count(*), a.complaint_status_code FROM Complaints a JOIN Products b ON a.product_id=b.product_id GROUP BY b.product_category_code, a.complaint_status_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT b.product_category_code, count(*), a.complaint_status_code FROM Complaints a JOIN Products b ON a.product_id=b.product_id GROUP BY b.product_category_code, a.complaint_status_code"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "customer_complaints",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_category_code",
            "y_name": "count(*)",
            "x_data": [
                [
                    "Book",
                    "Food",
                    "Hardware"
                ]
            ],
            "y_data": [
                [
                    2,
                    3,
                    1
                ],
                [
                    2,
                    2,
                    0
                ],
                [
                    0,
                    1,
                    1
                ]
            ],
            "classify": [
                "New",
                "Open",
                "Closed"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet stížností pro každou kategorii produktů a znázorni rozložení stížností v různých stavech pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Customers",
            "Staff"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": true
            }
        ]
    },
    "4019": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT a.product_name, count(*),c.order_status_code FROM Products a JOIN Actual_Order_Products b ON a.product_id=b.product_id JOIN Actual_Orders c ON b.actual_order_id = c.actual_order_id GROUP BY a.product_name, c.order_status_code ",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT a.product_name, count(*),c.order_status_code FROM Products a JOIN Actual_Order_Products b ON a.product_id=b.product_id JOIN Actual_Orders c ON b.actual_order_id = c.actual_order_id GROUP BY a.product_name, c.order_status_code"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "customer_deliveries",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_name",
            "y_name": "count(*)",
            "x_data": [
                [
                    "books",
                    "cloth",
                    "dvds",
                    "electronics",
                    "food",
                    "gift"
                ]
            ],
            "y_data": [
                [
                    1,
                    2,
                    3,
                    2,
                    2,
                    1
                ],
                [
                    0,
                    1,
                    0,
                    2,
                    0,
                    1
                ]
            ],
            "classify": [
                "Cancel",
                "Success"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kolik objednávek pro každý produkt je evidováno? Zobrazení počtu dodávek v různých stavech pomocí sloupcového grafu."
        ],
        "irrelevant_tables": [
            "Addresses",
            "Employees"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": true
            }
        ]
    },
    "4020": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT c.product_details, sum(a.order_quantity),b.order_status FROM Order_Items a JOIN Customer_Orders b ON a.order_id=b.order_id JOIN Products c ON a.product_id = c.product_id GROUP BY c.product_details, b.order_status ",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT c.product_details, sum(a.order_quantity),b.order_status FROM Order_Items a JOIN Customer_Orders b ON a.order_id=b.order_id JOIN Products c ON a.product_id = c.product_id GROUP BY c.product_details, b.order_status"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "customer_deliveries",
        "vis_obj": {
            "chart": "bar",
            "x_name": "product_details",
            "y_name": "sum(a.order_quantity)",
            "x_data": [
                [
                    "Americano",
                    "Dove Chocolate",
                    "Latte"
                ]
            ],
            "y_data": [
                [
                    9,
                    9,
                    0
                ],
                [
                    12,
                    43,
                    22
                ]
            ],
            "classify": [
                "Delivered",
                "Cancelled"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Použijte sloupcový graf k porovnání množství dodaných a zrušených objednaných produktů pro každý produkt."
        ],
        "irrelevant_tables": [
            "Customers",
            "Trucks"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": true
            }
        ]
    },
    "4021": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Budget_in_Billions, Num_Employees from department where Ranking <= 10 ",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Budget_in_Billions, Num_Employees from department where Ranking <= 10"
        },
        "chart": "Scatter",
        "hardness": "Medium",
        "db_id": "department_management",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Budget_in_Billions",
            "y_name": "Num_Employees",
            "x_data": [
                [
                    9.96,
                    11.10,
                    439.30,
                    23.40,
                    10.70,
                    77.60,
                    6.20,
                    59.70,
                    543.20,
                    46.20
                ]
            ],
            "y_data": [
                [
                    30266.0,
                    115897.0,
                    3000000.0,
                    112557.0,
                    71436.0,
                    109832.0,
                    36000.0,
                    17347.0,
                    67000.0,
                    10600.0
                ]
            ],
            "classify": [],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "U těchto deseti nejvýznamnějších oddělení uveď vztah mezi rozpočtem a počtem zaměstnanců. Bodový graf."
        ],
        "irrelevant_tables": [
            "head",
            "management"
        ],
        "query_meta": [
            {
                "channel_specified": []
            }
        ]
    },
    "4022": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT a.payment_method_code, sum(amount_payment), b.customer_status_code from Customer_Payments a JOIN Customers b ON a.customer_id = b.customer_id group by a.payment_method_code, b.customer_status_code",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT a.payment_method_code, sum(amount_payment), b.customer_status_code from Customer_Payments a JOIN Customers b ON a.customer_id = b.customer_id group by a.payment_method_code, b.customer_status_code"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "driving_school",
        "vis_obj": {
            "chart": "bar",
            "x_name": "payment_method_code",
            "y_name": "sum(amount_payment)",
            "x_data": [
                [
                    "Credit Card",
                    "Direct Debit"
                ]
            ],
            "y_data": [
                [
                    9414.74,
                    31331.060000000005
                ],
                [
                    18272.42,
                    30000.15
                ]
            ],
            "classify": [
                "Bad Customer",
                "Good Customer"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz celkové částky plateb pro jednotlivé metody a pomocí sloupcového grafu znázorni, jak jsou platby rozděleny mezi různé stavy zákazníků."
        ],
        "irrelevant_tables": [
            "Lessons",
            "Staff"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": true
            }
        ]
    },
    "4023": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Assets_billion, Market_Value, Main_Industry from company",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Assets_billion, Market_Value, Main_Industry from company"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Assets_billion",
            "y_name": "Market_Value",
            "x_data": [
                [
                    2039.1,
                    2550.0,
                    1313.9
                ],
                [
                    717.2,
                    392.6
                ],
                [
                    331.1,
                    340.5,
                    304.7,
                    319.4,
                    292.5
                ]
            ],
            "y_data": [
                [
                    237.4,
                    164.3,
                    178.7
                ],
                [
                    213.7,
                    202.2
                ],
                [
                    407.4,
                    227.6,
                    294.7,
                    180.0,
                    147.4
                ]
            ],
            "classify": [
                "Banking",
                "Conglomerate",
                "Oil and gas"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Rozptylová křivka ukazuje korelaci aktiv a tržní hodnoty podle hlavních odvětví."
        ],
        "irrelevant_tables": [
            "gas_station",
            "station_company"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "4024": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Sales_billion, Profits_billion, Main_Industry from company",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Sales_billion, Profits_billion, Main_Industry from company"
        },
        "chart": "Grouping Scatter",
        "hardness": "Easy",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Sales_billion",
            "y_name": "Profits_billion",
            "x_data": [
                [
                    82.6,
                    102.0,
                    87.6
                ],
                [
                    147.3,
                    143.7
                ],
                [
                    433.5,
                    470.2,
                    310.1,
                    145.9,
                    375.5
                ]
            ],
            "y_data": [
                [
                    25.1,
                    16.2,
                    15.9
                ],
                [
                    14.2,
                    10.3
                ],
                [
                    41.1,
                    30.9,
                    20.6,
                    20.1,
                    25.7
                ]
            ],
            "classify": [
                "Banking",
                "Conglomerate",
                "Oil and gas"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vztah mezi tržbami a zisky, barva podle hlavního odvětví. Nakresli bodový graf."
        ],
        "irrelevant_tables": [
            "gas_station",
            "station_company"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "4025": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Headquarters, sum(Sales_billion), Main_Industry from company where Market_Value > 160 GROUP BY Headquarters, Main_Industry",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Headquarters, sum(Sales_billion), Main_Industry from company where Market_Value > 160 GROUP BY Headquarters, Main_Industry"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "gas_company",
        "vis_obj": {
            "chart": "scatter",
            "x_name": "Sales_billion",
            "y_name": "Profits_billion",
            "x_data": [
                [
                    "China",
                    "UK",
                    "Netherlands",
                    "USA",
                    "Brazil"
                ]
            ],
            "y_data": [
                [
                    82.6,
                    102.0,
                    0,
                    87.6,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    291.0,
                    0
                ],
                [
                    310.1,
                    0,
                    470.2,
                    433.5,
                    145.9
                ]
            ],
            "classify": [
                "Banking",
                "Conglomerate",
                "Oil and gas"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vytvoř sloupcový graf zobrazující celkové tržby společností s tržní hodnotou vyšší než 160 v různých odvětvích a sídlech"
        ],
        "irrelevant_tables": [
            "gas_station",
            "station_company"
        ],
        "query_meta": [
            {
                "channel_specified": [],
                "stacked_bar": true
            }
        ]
    },
    "4026": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Launch_year, count(*), WiFi FROM chip_model GROUP BY Launch_year, WiFi",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Launch_year, count(*), WiFi FROM chip_model GROUP BY Launch_year, WiFi"
        },
        "chart": "Grouping Line",
        "hardness": "Easy",
        "db_id": "phone_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "Launch_year",
            "y_name": "count(*)",
            "x_data": [
                [
                    2002.0,
                    2003.0,
                    2004.0,
                    2005.0
                ]
            ],
            "y_data": [
                [
                    2,
                    2,
                    2,
                    1
                ],
                [
                    0,
                    1,
                    4,
                    2
                ]
            ],
            "classify": [
                "No",
                "802.11b"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Čárový graf zobrazuje počet modelů čipů uvedených na trh v jednotlivých letech, které jsou barevně odlišeny podle WiFi."
        ],
        "irrelevant_tables": [
            "phone",
            "screen_mode"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4027": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Launch_year, count(*), Slots FROM chip_model GROUP BY Launch_year, Slots",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Launch_year, Launch_year, Slots FROM chip_model GROUP BY Launch_year, Slots"
        },
        "chart": "Grouping Line",
        "hardness": "Easy",
        "db_id": "phone_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "Launch_year",
            "y_name": "count(*)",
            "x_data": [
                [
                    2002,
                    2003,
                    2004,
                    2005
                ]
            ],
            "y_data": [
                [
                    2,
                    0,
                    3,
                    3
                ],
                [
                    0,
                    3,
                    3,
                    0
                ]
            ],
            "classify": [
                "1CFII,1SD",
                "1SD"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Vygenerujte čárový graf zobrazující roční počet spuštěných modelů čipů s barevným odlišením podle slotů."
        ],
        "irrelevant_tables": [
            "phone",
            "screen_mode"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4028": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Built_Year, count(*),  Class from ship GROUP BY Class, Built_Year",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Built_Year, count(*),  Class from ship GROUP BY Class, Built_Year"
        },
        "chart": "Stacked Bar",
        "hardness": "Easy",
        "db_id": "ship_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Built_Year",
            "y_name": "count(*)",
            "x_data": [
                [
                    1997,
                    1998
                ]
            ],
            "y_data": [
                [
                    0,
                    1
                ],
                [
                    5,
                    3
                ]
            ],
            "classify": [
                "GL",
                "KR"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Sloupec ukazuje rozložení lodí postavených v různých letech podle tříd."
        ],
        "irrelevant_tables": [
            "captain"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": true
            }
        ]
    },
    "4029": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT a.birthday, count(distinct a.player_api_id),  b.preferred_foot from Player a JOIN player_attributes b ON a.player_api_id = b.player_api_id WHERE a.birthday >= '1980-01-01 00:00:00'and a.birthday <'1990-01-01 00:00:00' GROUP BY birthday, preferred_foot",
                "binning": "bin by year"
            },
            "VQL": "Visualize LINE SELECT a.birthday, count(distinct a.player_api_id),  b.preferred_foot from Player a JOIN player_attributes b ON a.player_api_id = b.player_api_id WHERE a.birthday >= '1980-01-01 00:00:00'and a.birthday <'1990-01-01 00:00:00' GROUP BY birthday, preferred_foot"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "soccer_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "count(a.player_api_id)",
            "x_data": [
                [
                    1980,
                    1981,
                    1982,
                    1983,
                    1984,
                    1985,
                    1986,
                    1987,
                    1988,
                    1989
                ]
            ],
            "y_data": [
                [
                    129,
                    148,
                    140,
                    164,
                    181,
                    188,
                    236,
                    223,
                    240,
                    201
                ],
                [
                    345,
                    370,
                    399,
                    452,
                    509,
                    487,
                    571,
                    602,
                    657,
                    599
                ]
            ],
            "classify": [
                "left",
                "right"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Čárový graf znázorňující počet hráčů narozených v letech 1980 až 1989 (včetně roku 1980, bez roku 1990), rozdělených podle preferované nohy. Rozděl narozeniny podle roku."
        ],
        "irrelevant_tables": [
            "League",
            "Team"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4030": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year, count(*), Grape from wine where price > 100 group by Year, Grape ",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year, count(*), Grape from wine where price > 100 group by Year, Grape "
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "count(*)",
            "x_data": [
                [
                    2006,
                    2007,
                    2008
                ]
            ],
            "y_data": [
                [
                    4,
                    11,
                    2
                ],
                [
                    1,
                    1,
                    0
                ],
                [
                    1,
                    1,
                    0
                ]
            ],
            "classify": [
                "Cabernet Sauvingnon",
                "Grenache",
                "Syrah"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Sloupcová tabulka ukazuje rozložení vín s cenou nad 100 v různých letech podle odrůd."
        ],
        "irrelevant_tables": [
            "appellations",
            "grapes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": true
            }
        ]
    },
    "4031": {
        "vis_query": {
            "vis_part": "Visualize BAR",
            "data_part": {
                "sql_part": "SELECT Year, count(*), Grape from wine where Score > 95 group by Year, Grape",
                "binning": ""
            },
            "VQL": "Visualize BAR SELECT Year, count(*), Grape from wine where Score > 95 group by Year, Grape"
        },
        "chart": "Stacked Bar",
        "hardness": "Medium",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Year",
            "y_name": "count(*)",
            "x_data": [
                [
                    2006,
                    2007
                ]
            ],
            "y_data": [
                [
                    1,
                    3
                ],
                [
                    1,
                    0
                ],
                [
                    1,
                    1
                ]
            ],
            "classify": [
                "Cabernet Sauvingnon",
                "Grenache",
                "Syrah"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Zobraz počet vín s hodnocením vyšším než 95 v různých ročnících, barevně rozlišených podle hroznů. Skládaný sloupcový graf."
        ],
        "irrelevant_tables": [
            "appellations",
            "grapes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ],
                "stacked_bar": true
            }
        ]
    },
    "4032": {
        "vis_query": {
            "vis_part": "Visualize SCATTER",
            "data_part": {
                "sql_part": "SELECT Price, Score, Grape from wine where Grape in ('Grenache', 'Syrah','Zinfandel')",
                "binning": ""
            },
            "VQL": "Visualize SCATTER SELECT Price, Score, Grape from wine where Grape in ('Grenache', 'Syrah','Zinfandel')"
        },
        "chart": "Grouping Scatter",
        "hardness": "Medium",
        "db_id": "wine_1",
        "vis_obj": {
            "chart": "bar",
            "x_name": "Price",
            "y_name": "Score",
            "x_data": [
                [
                    44,
                    35,
                    40,
                    38,
                    44,
                    15,
                    18,
                    43,
                    29,
                    34,
                    32,
                    42,
                    40,
                    28,
                    38,
                    24,
                    20,
                    18,
                    18,
                    30,
                    13,
                    45,
                    24,
                    35,
                    33,
                    48,
                    40,
                    23,
                    43,
                    27,
                    50,
                    27,
                    20,
                    18,
                    18,
                    19,
                    18,
                    18,
                    35,
                    26,
                    20,
                    20,
                    15,
                    12,
                    10,
                    25,
                    25,
                    22,
                    17,
                    33,
                    55,
                    35,
                    35,
                    38,
                    41,
                    32,
                    32,
                    28,
                    34,
                    50,
                    35,
                    28,
                    30,
                    28,
                    18,
                    22,
                    25,
                    24,
                    27,
                    30,
                    18,
                    45,
                    45,
                    24,
                    18,
                    14,
                    12,
                    25
                ],
                [
                    200,
                    36,
                    35,
                    48,
                    39,
                    42,
                    38,
                    100,
                    135,
                    15
                ],
                [
                    60,
                    76,
                    200,
                    65,
                    40,
                    45,
                    36,
                    36,
                    42,
                    55,
                    38,
                    40,
                    40,
                    27,
                    44,
                    50,
                    55,
                    38,
                    22,
                    35,
                    17,
                    40,
                    20,
                    60,
                    45,
                    25,
                    25,
                    38,
                    40,
                    30,
                    35,
                    45,
                    30,
                    24,
                    18,
                    9,
                    38,
                    60,
                    28,
                    52,
                    45,
                    25,
                    75,
                    45,
                    45,
                    55,
                    43,
                    43,
                    75,
                    38,
                    55,
                    75,
                    36,
                    35,
                    30,
                    45,
                    135,
                    40,
                    18,
                    45,
                    16
                ]
            ],
            "y_data": [
                [
                    93,
                    93,
                    91,
                    89,
                    88,
                    88,
                    87,
                    93,
                    93,
                    93,
                    92,
                    91,
                    90,
                    90,
                    89,
                    88,
                    88,
                    88,
                    87,
                    87,
                    86,
                    86,
                    91,
                    91,
                    95,
                    94,
                    93,
                    92,
                    91,
                    91,
                    91,
                    89,
                    89,
                    89,
                    88,
                    88,
                    87,
                    87,
                    87,
                    86,
                    86,
                    84,
                    84,
                    82,
                    82,
                    78,
                    88,
                    88,
                    83,
                    90,
                    89,
                    89,
                    89,
                    89,
                    89,
                    88,
                    88,
                    88,
                    88,
                    88,
                    88,
                    88,
                    88,
                    88,
                    87,
                    87,
                    87,
                    87,
                    87,
                    87,
                    87,
                    87,
                    87,
                    87,
                    86,
                    86,
                    85,
                    86
                ],
                [
                    97,
                    93,
                    91,
                    88,
                    87,
                    87,
                    87,
                    93,
                    91,
                    90
                ],
                [
                    94,
                    92,
                    98,
                    95,
                    94,
                    93,
                    93,
                    93,
                    93,
                    92,
                    92,
                    92,
                    91,
                    91,
                    91,
                    90,
                    90,
                    90,
                    89,
                    89,
                    88,
                    88,
                    88,
                    88,
                    88,
                    88,
                    88,
                    88,
                    87,
                    87,
                    87,
                    87,
                    87,
                    87,
                    84,
                    83,
                    93,
                    93,
                    92,
                    91,
                    91,
                    91,
                    90,
                    90,
                    90,
                    90,
                    98,
                    94,
                    94,
                    93,
                    93,
                    93,
                    93,
                    92,
                    91,
                    92,
                    92,
                    89,
                    88,
                    88,
                    87
                ]
            ],
            "classify": [
                "Zinfandel",
                "Grenache",
                "Syrah"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Graf znázorňující ceny a hodnocení hroznů Grenache, Syrah a Zinfandel, přičemž jednotlivé hrozny jsou rozlišeny podle barvy."
        ],
        "irrelevant_tables": [
            "appellations",
            "grapes"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "classify"
                ]
            }
        ]
    },
    "4033": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT Year, max(Accelerate), Cylinders FROM cars_data where year >=1973 and year<1980 and Cylinders in (4,6,8) GROUP BY Year, Cylinders",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT Year, max(Accelerate), Cylinders FROM cars_data where year >=1973 and year<1980 and Cylinders in (4,6,8) GROUP BY Year, Cylinders"
        },
        "chart": "Grouping Line",
        "hardness": "Hard",
        "db_id": "car_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "Year",
            "y_name": "max(Accelerate)",
            "x_data": [
                [
                    1973,
                    1974,
                    1975,
                    1976,
                    1977,
                    1978,
                    1979
                ]
            ],
            "y_data": [
                [
                    21.0,
                    21.0,
                    18.5,
                    22.2,
                    18.6,
                    21.5,
                    24.8
                ],
                [
                    18.0,
                    18.0,
                    21.0,
                    21.0,
                    19.0,
                    19.2,
                    18.2
                ],
                [
                    14.5,
                    16.0,
                    14.5,
                    15.0,
                    19.0,
                    15.5,
                    22.2
                ]
            ],
            "classify": [
                "4",
                "6",
                "8"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Uveď maximální zrychlení čtyřválcových, šestiválcových a osmiválcových automobilů v letech 1973 až 1979. Čárový graf."
        ],
        "irrelevant_tables": [
            "car_makers",
            "continents"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4034": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year, max(salary), team_id FROM salary WHERE team_id in ('ATL', 'ARI', 'CHA') and year >= 2000 GROUP BY year, team_id",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year, max(salary), team_id FROM salary WHERE team_id in ('ATL', 'ARI', 'CHA') and year >= 2000 GROUP BY year, team_id"
        },
        "chart": "Grouping Line",
        "hardness": "Medium",
        "db_id": "baseball_1",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "max(salary)",
            "x_data": [
                [
                    2000,
                    2001,
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010,
                    2011,
                    2012,
                    2013,
                    2014,
                    2015
                ]
            ],
            "y_data": [
                [
                    13350000,
                    13350000,
                    13350000,
                    15000000,
                    16000000,
                    11000000,
                    10673328,
                    9100546,
                    15100546,
                    11666666,
                    8500000,
                    5850000,
                    7750000,
                    10000000,
                    11000000,
                    12000000
                ],
                [
                    11100000,
                    12500000,
                    13100000,
                    14750000,
                    15333333,
                    16061802,
                    14503543,
                    14500000,
                    15975184,
                    15500000,
                    15000000,
                    15000000,
                    14000000,
                    13146942,
                    14250000,
                    12000000
                ],
                [
                    7100000,
                    9927000,
                    9927000,
                    9000000,
                    14000000,
                    8750000,
                    14166667,
                    14833333,
                    15666666,
                    14000000,
                    15000000,
                    16000000,
                    17000000,
                    16157271,
                    15000000,
                    15750000
                ]
            ],
            "classify": [
                "ARI",
                "ATL",
                "CHA"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Maximální platy hráčů v týmech ARI, ATL a CHA v jednotlivých letech začínají rokem 2000. Čárový graf."
        ],
        "irrelevant_tables": [
            "all_star",
            "pitching"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    },
    "4035": {
        "vis_query": {
            "vis_part": "Visualize LINE",
            "data_part": {
                "sql_part": "SELECT year, count(*), semester from section a JOIN course b ON a.course_id = b.course_id where credits = 4 GROUP BY year, semester",
                "binning": ""
            },
            "VQL": "Visualize LINE SELECT year, count(*), semester from section a JOIN course b ON a.course_id = b.course_id where credits = 4 GROUP BY year, semester"
        },
        "chart": "Grouping Line",
        "hardness": "Medium",
        "db_id": "college_2",
        "vis_obj": {
            "chart": "line",
            "x_name": "year",
            "y_name": "semester",
            "x_data": [
                [
                    2002,
                    2003,
                    2004,
                    2005,
                    2006,
                    2007,
                    2008,
                    2009,
                    2010
                ]
            ],
            "y_data": [
                [
                    4,
                    4,
                    1,
                    3,
                    6,
                    2,
                    0,
                    1,
                    2
                ],
                [
                    2,
                    2,
                    2,
                    2,
                    1,
                    3,
                    5,
                    2,
                    2
                ]
            ],
            "classify": [
                "Fall",
                "Spring"
            ],
            "describe": "",
            "sort": null
        },
        "nl_queries": [
            "Kolik čtyřkreditových kurzů je v každém semestru v každém roce? Čárový graf."
        ],
        "irrelevant_tables": [
            "advisor",
            "prereq"
        ],
        "query_meta": [
            {
                "channel_specified": [
                    "x",
                    "y",
                    "classify"
                ]
            }
        ]
    }
}